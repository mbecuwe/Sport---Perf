import { StringUnitLength, NumberingSystem, DateTime } from 'luxon';

interface CalendarioOptions {
    readonly weekNameLength?: StringUnitLength;
    readonly monthNameLength?: StringUnitLength;
    readonly format?: string;
    readonly locale?: string;
    readonly numberingSystem?: NumberingSystem;
    readonly parserLocale?: string;
    readonly startInWeekDay?: number;
    readonly timeZone?: string;
}
interface CalendarioInformation {
    readonly NAME: string;
    readonly VERSION: string;
}
declare const INFO: CalendarioInformation;

interface CalendarioEvent {
    allDay?: boolean;
    content: string;
    category?: string;
    endDate?: string;
    endTime?: string;
    note?: string;
    repeat?: string;
    startTime?: string;
    url?: string;
}
interface CalendarioEvents {
    [key: string]: CalendarioEvent[];
}

declare class Options {
    protected options: CalendarioOptions;
    constructor(options: CalendarioOptions);
    getOption(key: string): StringUnitLength | NumberingSystem | boolean | string;
}

declare class Today extends Options {
    protected today: DateTime;
    protected weekdays: string[];
    protected months: string[];
    constructor(today: DateTime, options: CalendarioOptions);
    readonly month: number;
    readonly monthName: string;
    readonly monthNames: string[];
    readonly year: number;
}

declare class Calendario extends Today {
    private events;
    private _events;
    constructor(today: DateTime, events: CalendarioEvents, options: CalendarioOptions);
    private filterEvents;
    readonly head: string[];
    readonly body: unknown[];
    readonly rows: number;
    setOption(key: string, value: StringUnitLength | NumberingSystem | boolean | string): Calendario;
    toDate(date: Date): Calendario;
    nextMonth(): Calendario;
    previousMonth(): Calendario;
    nextYear(): Calendario;
    previousYear(): Calendario;
    now(): Calendario;
}

declare function calendario(events?: CalendarioEvents, options?: CalendarioOptions, today?: Date): Calendario;

export default calendario;
export { INFO };

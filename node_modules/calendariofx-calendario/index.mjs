import { DateTime, Info, Settings } from 'luxon';

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

var DEFAULTS = {
    format: 'MM-dd-yyyy',
    locale: '',
    monthNameLength: 'long',
    numberingSystem: 'latn',
    parserLocale: 'en-US',
    startInWeekDay: 1,
    timeZone: 'local',
    weekNameLength: 'long'
};
var INFO = {
    NAME: 'Enigma',
    VERSION: '7.0.0-alpha.5'
};

var TimeZoneError = /** @class */ (function (_super) {
    __extends(TimeZoneError, _super);
    function TimeZoneError(m) {
        var _this = _super.call(this, m + " | Visit https://momentjs.com/timezone/ for a list of Valid TimeZones") || this;
        Object.setPrototypeOf(_this, TimeZoneError.prototype);
        return _this;
    }
    return TimeZoneError;
}(Error));

var repeaters = {
    INTERVAL: function (start, end) {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!(start <= end)) return [3 /*break*/, 2];
                    return [4 /*yield*/, start.toMillis()];
                case 1:
                    _a.sent();
                    start = start.plus({ days: 1 });
                    return [3 /*break*/, 0];
                case 2: return [2 /*return*/];
            }
        });
    },
    MONTHLY: function (start, end) {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!(start <= end)) return [3 /*break*/, 2];
                    return [4 /*yield*/, start.toMillis()];
                case 1:
                    _a.sent();
                    start = start.plus({ months: 1 });
                    return [3 /*break*/, 0];
                case 2: return [2 /*return*/];
            }
        });
    },
    SINGLE: function (start, end) {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!(start <= end)) return [3 /*break*/, 2];
                    return [4 /*yield*/, start.toMillis()];
                case 1:
                    _a.sent();
                    _a.label = 2;
                case 2: return [2 /*return*/];
            }
        });
    },
    WEEKLY: function (start, end, weekday) {
        var i;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    for (i = 0; i < 7; i++) {
                        if (weekday === start.weekdayShort.toUpperCase()) {
                            break;
                        }
                        else {
                            start = start.plus({ days: 1 });
                        }
                    }
                    _a.label = 1;
                case 1:
                    if (!(start <= end)) return [3 /*break*/, 3];
                    return [4 /*yield*/, start.toMillis()];
                case 2:
                    _a.sent();
                    start = start.plus({ weeks: 1 });
                    return [3 /*break*/, 1];
                case 3: return [2 /*return*/];
            }
        });
    },
    YEARLY: function (start, end) {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!(start <= end)) return [3 /*break*/, 2];
                    return [4 /*yield*/, start.toMillis()];
                case 1:
                    _a.sent();
                    start = start.plus({ years: 1 });
                    return [3 /*break*/, 0];
                case 2: return [2 /*return*/];
            }
        });
    },
};

function processEvent(dwd, event, date, data, options) {
    if (!data[dwd]) {
        data[dwd] = [];
    }
    var repeater;
    var _edt = event.repeat ?
        (event.endDate ? DateTime.fromFormat(event.endDate, options.format, { locale: options.parserLocale })
            : date.plus({ years: 100 })) : date;
    if (!event.repeat)
        repeater = 'SINGLE';
    else if (event.repeat === 'YEARLY' || event.repeat === 'MONTHLY')
        repeater = event.repeat;
    else if (event.repeat.split(/[,\s]+/).length < 7)
        repeater = 'WEEKLY';
    else if (event.repeat.split(/[,\s]+/).length === 7)
        repeater = 'INTERVAL';
    data[dwd].push(__assign({}, event, {
        dates: [date.startOf('day'), _edt.startOf('day')],
        generator: repeaters[repeater]
    }));
    return data;
}
function processEvents(events, options) {
    var e_1, _a, e_2, _b, e_3, _c;
    var _pce = {}, _dt;
    try {
        for (var _d = __values(Object.entries(events)), _e = _d.next(); !_e.done; _e = _d.next()) {
            var _f = __read(_e.value, 2), date = _f[0], _events = _f[1];
            _dt = DateTime.fromFormat(date, options.format, { locale: options.parserLocale });
            try {
                for (var _events_1 = (e_2 = void 0, __values(_events)), _events_1_1 = _events_1.next(); !_events_1_1.done; _events_1_1 = _events_1.next()) {
                    var event = _events_1_1.value;
                    if (event.repeat) {
                        event.repeat = event.repeat.toUpperCase();
                    }
                    if (event.repeat === 'INTERVAL') {
                        event = __assign({}, event, { repeat: Info.weekdaysFormat('short', { locale: options.parserLocale }).join(',') });
                    }
                    if ([undefined, null, 'YEARLY', 'MONTHLY'].includes(event.repeat)) {
                        _pce = processEvent(_dt.day, event, _dt, _pce, options);
                    }
                    else {
                        try {
                            for (var _g = (e_3 = void 0, __values(event.repeat.toUpperCase().split(/[,\s]+/))), _h = _g.next(); !_h.done; _h = _g.next()) {
                                var wd = _h.value;
                                _pce = processEvent(wd, event, _dt, _pce, options);
                            }
                        }
                        catch (e_3_1) { e_3 = { error: e_3_1 }; }
                        finally {
                            try {
                                if (_h && !_h.done && (_c = _g.return)) _c.call(_g);
                            }
                            finally { if (e_3) throw e_3.error; }
                        }
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_events_1_1 && !_events_1_1.done && (_b = _events_1.return)) _b.call(_events_1);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return _pce;
}

var Options = /** @class */ (function () {
    function Options(options) {
        this.options = options;
    }
    Options.prototype.getOption = function (key) {
        return this.options[key];
    };
    return Options;
}());

var Today = /** @class */ (function (_super) {
    __extends(Today, _super);
    function Today(today, options) {
        var _this = _super.call(this, options) || this;
        _this.today = today.startOf('month').startOf('day');
        _this.weekdays = Info.weekdaysFormat(options.weekNameLength);
        _this.months = Info.monthsFormat(options.monthNameLength);
        return _this;
    }
    Object.defineProperty(Today.prototype, "month", {
        get: function () {
            return this.today.month;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Today.prototype, "monthName", {
        get: function () {
            return this.months[this.today.month - 1];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Today.prototype, "monthNames", {
        get: function () {
            return this.months;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Today.prototype, "year", {
        get: function () {
            return this.today.year;
        },
        enumerable: true,
        configurable: true
    });
    return Today;
}(Options));

var Calendario = /** @class */ (function (_super) {
    __extends(Calendario, _super);
    function Calendario(today, events, options) {
        var _this = _super.call(this, today, options) || this;
        _this.events = processEvents(__assign({}, events), options);
        _this._events = events;
        return _this;
    }
    Calendario.prototype.filterEvents = function (filterDate) {
        return Array.prototype.concat(this.events[filterDate.day], this.events[filterDate.weekdayShort.toUpperCase()])
            .filter(function (event) {
            var e_1, _a;
            if (!event)
                return false;
            if (filterDate >= event.dates[0] && filterDate <= event.dates[1]) {
                try {
                    for (var _b = __values(event.generator(event.dates[0], event.dates[1], filterDate.weekdayShort.toUpperCase())), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var epoch = _c.value;
                        if (epoch === filterDate.toMillis())
                            return true;
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
            return false;
        }).map(function (event) {
            return __assign({}, event, { dates: undefined, generator: undefined });
        });
    };
    Object.defineProperty(Calendario.prototype, "head", {
        get: function () {
            var weekdays = [];
            for (var i = 0; i < this.weekdays.length; i++) {
                weekdays.push(this.weekdays[(i - 1 + this.options.startInWeekDay) % this.weekdays.length]);
            }
            return weekdays;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendario.prototype, "body", {
        get: function () {
            var stDate = this.today.minus({ days: (7 + (this.today.weekday - this.options.startInWeekDay)) % 7 });
            var _td = DateTime.local().startOf('day');
            var cal = Array(this.rows);
            for (var i = 0; i < cal.length; i++) {
                for (var j = 0; j < 7; j++) {
                    if (!Array.isArray(cal[i]))
                        cal[i] = [];
                    cal[i].push({
                        date: stDate,
                        dateClass: "date-" + stDate.toFormat(this.options.format),
                        events: this.filterEvents(stDate),
                        future: stDate > _td,
                        nextMonth: stDate.startOf('month').diff(this.today, 'months').months > 0,
                        past: stDate < _td,
                        previousMonth: stDate.startOf('month').diff(this.today, 'months').months < 0,
                        today: stDate.equals(_td),
                        weekday: stDate.weekdayShort.toLowerCase()
                    });
                    stDate = stDate.plus({ days: 1 });
                }
            }
            return cal;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendario.prototype, "rows", {
        get: function () {
            return Math.ceil(this.today.endOf('month').diff(this.today.minus({ days: (7 + (this.today.weekday - this.options.startInWeekDay)) % 7 }), 'weeks').weeks);
        },
        enumerable: true,
        configurable: true
    });
    Calendario.prototype.setOption = function (key, value) {
        var _a;
        var options = __assign({}, this.options, (_a = {}, _a[key] = value, _a));
        return calendario(this._events, options, this.today.toJSDate());
    };
    Calendario.prototype.toDate = function (date) {
        return calendario(this._events, this.options, date);
    };
    Calendario.prototype.nextMonth = function () {
        return this.toDate(this.today.plus({ months: 1 }).toJSDate());
    };
    Calendario.prototype.previousMonth = function () {
        return this.toDate(this.today.minus({ months: 1 }).toJSDate());
    };
    Calendario.prototype.nextYear = function () {
        return this.toDate(this.today.plus({ years: 1 }).toJSDate());
    };
    Calendario.prototype.previousYear = function () {
        return this.toDate(this.today.minus({ years: 1 }).toJSDate());
    };
    Calendario.prototype.now = function () {
        return this.toDate(DateTime.local().toJSDate());
    };
    return Calendario;
}(Today));

function calendario(events, options, today) {
    if (events === void 0) { events = {}; }
    if (options === void 0) { options = {}; }
    var zone;
    Settings.throwOnInvalid = true;
    options = __assign({}, DEFAULTS, options);
    var resolvedOpts = DateTime.fromObject({ locale: options.locale, numberingSystem: options.numberingSystem }).resolvedLocaleOpts();
    if (!(zone = Info.normalizeZone(options.timeZone)).isValid) {
        throw new TimeZoneError("Invalid timezone " + options.timeZone);
    }
    Settings.defaultZoneName = zone.name;
    Settings.defaultLocale = resolvedOpts.locale;
    Settings.defaultNumberingSystem = resolvedOpts.numberingSystem;
    Settings.defaultOutputCalendar = 'gregory';
    var _today = (today ? DateTime.fromJSDate(today) : DateTime.local()).setLocale(options.parserLocale);
    return new Calendario(_today, events, options);
}

export default calendario;
export { INFO };

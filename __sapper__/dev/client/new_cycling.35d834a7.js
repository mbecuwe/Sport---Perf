import { S as SvelteComponentDev, i as init, d as dispatch_dev, C as globals, s as safe_not_equal, v as validate_slots, e as element, t as text, a as space, f as claim_element, g as children, h as claim_text, b as detach_dev, c as claim_space, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, D as run_all, E as listen_dev, n as noop, F as prevent_default } from './client.45080dd6.js';

/* src/routes/new_sessions/new_cycling.svelte generated by Svelte v3.22.3 */

const { console: console_1 } = globals;
const file = "src/routes/new_sessions/new_cycling.svelte";

function create_fragment(ctx) {
	let div4;
	let div1;
	let div0;
	let t0;
	let t1;
	let div3;
	let div2;
	let img;
	let img_src_value;
	let t2;
	let form;
	let label0;
	let t3;
	let t4;
	let input0;
	let t5;
	let label1;
	let t6;
	let t7;
	let input1;
	let t8;
	let label2;
	let t9;
	let t10;
	let input2;
	let t11;
	let label3;
	let t12;
	let t13;
	let input3;
	let t14;
	let button;
	let t15;
	let dispose;

	const block = {
		c: function create() {
			div4 = element("div");
			div1 = element("div");
			div0 = element("div");
			t0 = text("Cycling New Session");
			t1 = space();
			div3 = element("div");
			div2 = element("div");
			img = element("img");
			t2 = space();
			form = element("form");
			label0 = element("label");
			t3 = text("Date");
			t4 = space();
			input0 = element("input");
			t5 = space();
			label1 = element("label");
			t6 = text("Distance (m)");
			t7 = space();
			input1 = element("input");
			t8 = space();
			label2 = element("label");
			t9 = text("Minutes");
			t10 = space();
			input2 = element("input");
			t11 = space();
			label3 = element("label");
			t12 = text("Elevation (m)");
			t13 = space();
			input3 = element("input");
			t14 = space();
			button = element("button");
			t15 = text("Create account");
			this.h();
		},
		l: function claim(nodes) {
			div4 = claim_element(nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, "Cycling New Session");
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t1 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			img = claim_element(div2_nodes, "IMG", { src: true, alt: true });
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			form = claim_element(nodes, "FORM", {});
			var form_nodes = children(form);
			label0 = claim_element(form_nodes, "LABEL", { for: true });
			var label0_nodes = children(label0);
			t3 = claim_text(label0_nodes, "Date");
			label0_nodes.forEach(detach_dev);
			t4 = claim_space(form_nodes);
			input0 = claim_element(form_nodes, "INPUT", { required: true, type: true, id: true });
			t5 = claim_space(form_nodes);
			label1 = claim_element(form_nodes, "LABEL", { for: true });
			var label1_nodes = children(label1);
			t6 = claim_text(label1_nodes, "Distance (m)");
			label1_nodes.forEach(detach_dev);
			t7 = claim_space(form_nodes);
			input1 = claim_element(form_nodes, "INPUT", { required: true, type: true, id: true });
			t8 = claim_space(form_nodes);
			label2 = claim_element(form_nodes, "LABEL", { for: true });
			var label2_nodes = children(label2);
			t9 = claim_text(label2_nodes, "Minutes");
			label2_nodes.forEach(detach_dev);
			t10 = claim_space(form_nodes);
			input2 = claim_element(form_nodes, "INPUT", { required: true, type: true, id: true });
			t11 = claim_space(form_nodes);
			label3 = claim_element(form_nodes, "LABEL", { for: true });
			var label3_nodes = children(label3);
			t12 = claim_text(label3_nodes, "Elevation (m)");
			label3_nodes.forEach(detach_dev);
			t13 = claim_space(form_nodes);
			input3 = claim_element(form_nodes, "INPUT", { required: true, type: true, id: true });
			t14 = claim_space(form_nodes);
			button = claim_element(form_nodes, "BUTTON", { type: true });
			var button_nodes = children(button);
			t15 = claim_text(button_nodes, "Create account");
			button_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "text-center p-2 text-2xl font-semibold bg-gray-100");
			add_location(div0, file, 61, 4, 1349);
			attr_dev(div1, "class", "flex-initial w-2/3 p-2");
			add_location(div1, file, 60, 2, 1308);
			if (img.src !== (img_src_value = "cycling.jpg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "cycling");
			add_location(img, file, 67, 3, 1534);
			attr_dev(div2, "class", " text-right p-2");
			add_location(div2, file, 66, 4, 1501);
			attr_dev(div3, "class", "flex-initial w-1/3 p-2");
			add_location(div3, file, 65, 2, 1460);
			attr_dev(div4, "class", "flex h-48");
			add_location(div4, file, 59, 0, 1282);
			attr_dev(label0, "for", "date");
			add_location(label0, file, 81, 4, 1774);
			input0.required = true;
			attr_dev(input0, "type", "date");
			attr_dev(input0, "id", "date");
			add_location(input0, file, 82, 2, 1807);
			attr_dev(label1, "for", "meters");
			add_location(label1, file, 84, 2, 1851);
			input1.required = true;
			attr_dev(input1, "type", "number");
			attr_dev(input1, "id", "meters");
			add_location(input1, file, 85, 2, 1894);
			attr_dev(label2, "for", "minutes");
			add_location(label2, file, 91, 2, 2014);
			input2.required = true;
			attr_dev(input2, "type", "number");
			attr_dev(input2, "id", "minutes");
			add_location(input2, file, 92, 2, 2053);
			attr_dev(label3, "for", "elevation");
			add_location(label3, file, 94, 2, 2102);
			input3.required = true;
			attr_dev(input3, "type", "number");
			attr_dev(input3, "id", "elevation");
			add_location(input3, file, 95, 2, 2149);
			attr_dev(button, "type", "submit");
			add_location(button, file, 97, 2, 2200);
			add_location(form, file, 74, 0, 1603);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div4, anchor);
			append_dev(div4, div1);
			append_dev(div1, div0);
			append_dev(div0, t0);
			append_dev(div4, t1);
			append_dev(div4, div3);
			append_dev(div3, div2);
			append_dev(div2, img);
			insert_dev(target, t2, anchor);
			insert_dev(target, form, anchor);
			append_dev(form, label0);
			append_dev(label0, t3);
			append_dev(form, t4);
			append_dev(form, input0);
			append_dev(form, t5);
			append_dev(form, label1);
			append_dev(label1, t6);
			append_dev(form, t7);
			append_dev(form, input1);
			append_dev(form, t8);
			append_dev(form, label2);
			append_dev(label2, t9);
			append_dev(form, t10);
			append_dev(form, input2);
			append_dev(form, t11);
			append_dev(form, label3);
			append_dev(label3, t12);
			append_dev(form, t13);
			append_dev(form, input3);
			append_dev(form, t14);
			append_dev(form, button);
			append_dev(button, t15);
			if (remount) run_all(dispose);

			dispose = [
				listen_dev(form, "submit", prevent_default(handleSubmit), false, true, false),
				listen_dev(form, "invalid", /*validateMessageEmail*/ ctx[0], false, false, false),
				listen_dev(form, "changed", /*validateMessageEmail*/ ctx[0], false, false, false),
				listen_dev(form, "input", /*validateMessageEmail*/ ctx[0], false, false, false)
			];
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(form);
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload({ params, query }) {
	return this.fetch(`new_sessions.json`).then(r => r.json()).then(options => {
		return { options };
	});
}

async function handleSubmit(event) {
	console.log(1);
	console.log(event);
	console.log(1);
	console.log(event.target);
	console.log(1);
	console.log(event.target.date.value);
	console.log(1);
	console.log(event.target.meters.value);
	console.log(1);
	console.log(event.target.minutes.value);
	console.log(1);
	console.log(event.target.elevation.value);
}

function instance($$self, $$props, $$invalidate) {
	let { options } = $$props;
	let list = [];

	options.forEach(x => {
		list.push(x.features);
	});

	console.log(list);
	let error_boolean = false;

	function validateMessageEmail(event) {
		let textbox = event.target;
		error_boolean = false;

		if (textbox.value === "") {
			textbox.setCustomValidity("Required input");
		} else if (textbox.validity.typeMismatch) {
			error_boolean = true;
			textbox.setCustomValidity("please enter a valid input");
		} else {
			textbox.setCustomValidity("");
		}

		return true;
	}

	const writable_props = ["options"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<New_cycling> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("New_cycling", $$slots, []);

	$$self.$set = $$props => {
		if ("options" in $$props) $$invalidate(1, options = $$props.options);
	};

	$$self.$capture_state = () => ({
		preload,
		options,
		list,
		error_boolean,
		handleSubmit,
		validateMessageEmail
	});

	$$self.$inject_state = $$props => {
		if ("options" in $$props) $$invalidate(1, options = $$props.options);
		if ("list" in $$props) list = $$props.list;
		if ("error_boolean" in $$props) error_boolean = $$props.error_boolean;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [validateMessageEmail, options];
}

class New_cycling extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { options: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "New_cycling",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*options*/ ctx[1] === undefined && !("options" in props)) {
			console_1.warn("<New_cycling> was created without expected prop 'options'");
		}
	}

	get options() {
		throw new Error("<New_cycling>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set options(value) {
		throw new Error("<New_cycling>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default New_cycling;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

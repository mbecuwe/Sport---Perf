import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_slots, e as element, t as text, a as space, w as create_component, f as claim_element, g as children, h as claim_text, b as detach_dev, c as claim_space, x as claim_component, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, y as mount_component, n as noop, z as transition_in, A as transition_out, B as destroy_component } from './client.d873cb65.js';
import './_commonjsHelpers.1e235def.js';
import './Chart.b2015135.js';
import Cycling_charts from './cycling-charts.168d06be.js';

/* src/routes/sports/cycling/cycling.svelte generated by Svelte v3.22.3 */
const file = "src/routes/sports/cycling/cycling.svelte";

function create_fragment(ctx) {
	let div4;
	let div1;
	let div0;
	let t0;
	let t1;
	let div3;
	let div2;
	let img;
	let img_src_value;
	let t2;
	let div5;
	let table;
	let thead;
	let tr0;
	let th0;
	let t3;
	let t4;
	let th1;
	let t5;
	let t6;
	let th2;
	let t7;
	let t8;
	let th3;
	let t9;
	let t10;
	let tbody;
	let tr1;
	let td0;
	let t11;
	let t12;
	let td1;
	let t13;
	let td2;
	let t14;
	let td3;
	let t15;
	let tr2;
	let td4;
	let t16;
	let t17;
	let td5;
	let t18;
	let td6;
	let t19;
	let td7;
	let t20;
	let tr3;
	let td8;
	let t21;
	let t22;
	let td9;
	let t23;
	let td10;
	let t24;
	let td11;
	let t25;
	let div6;
	let h3;
	let t26;
	let t27;
	let current;

	const charts = new Cycling_charts({
			props: { data: /*data*/ ctx[0] },
			$$inline: true
		});

	const block = {
		c: function create() {
			div4 = element("div");
			div1 = element("div");
			div0 = element("div");
			t0 = text("Cycling Performance");
			t1 = space();
			div3 = element("div");
			div2 = element("div");
			img = element("img");
			t2 = space();
			div5 = element("div");
			table = element("table");
			thead = element("thead");
			tr0 = element("tr");
			th0 = element("th");
			t3 = text("Metrics");
			t4 = space();
			th1 = element("th");
			t5 = text("Value");
			t6 = space();
			th2 = element("th");
			t7 = text("Variation w. last 3 sessions");
			t8 = space();
			th3 = element("th");
			t9 = text("Variation w. past month");
			t10 = space();
			tbody = element("tbody");
			tr1 = element("tr");
			td0 = element("td");
			t11 = text("Average speed");
			t12 = space();
			td1 = element("td");
			t13 = space();
			td2 = element("td");
			t14 = space();
			td3 = element("td");
			t15 = space();
			tr2 = element("tr");
			td4 = element("td");
			t16 = text("Average distance");
			t17 = space();
			td5 = element("td");
			t18 = space();
			td6 = element("td");
			t19 = space();
			td7 = element("td");
			t20 = space();
			tr3 = element("tr");
			td8 = element("td");
			t21 = text("Average elevation");
			t22 = space();
			td9 = element("td");
			t23 = space();
			td10 = element("td");
			t24 = space();
			td11 = element("td");
			t25 = space();
			div6 = element("div");
			h3 = element("h3");
			t26 = text("See your evolution in this chart:");
			t27 = space();
			create_component(charts.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div4 = claim_element(nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, "Cycling Performance");
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t1 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			img = claim_element(div2_nodes, "IMG", { src: true, alt: true });
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			div5 = claim_element(nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			table = claim_element(div5_nodes, "TABLE", { class: true });
			var table_nodes = children(table);
			thead = claim_element(table_nodes, "THEAD", {});
			var thead_nodes = children(thead);
			tr0 = claim_element(thead_nodes, "TR", {});
			var tr0_nodes = children(tr0);
			th0 = claim_element(tr0_nodes, "TH", { class: true });
			var th0_nodes = children(th0);
			t3 = claim_text(th0_nodes, "Metrics");
			th0_nodes.forEach(detach_dev);
			t4 = claim_space(tr0_nodes);
			th1 = claim_element(tr0_nodes, "TH", { class: true });
			var th1_nodes = children(th1);
			t5 = claim_text(th1_nodes, "Value");
			th1_nodes.forEach(detach_dev);
			t6 = claim_space(tr0_nodes);
			th2 = claim_element(tr0_nodes, "TH", { class: true });
			var th2_nodes = children(th2);
			t7 = claim_text(th2_nodes, "Variation w. last 3 sessions");
			th2_nodes.forEach(detach_dev);
			t8 = claim_space(tr0_nodes);
			th3 = claim_element(tr0_nodes, "TH", { class: true });
			var th3_nodes = children(th3);
			t9 = claim_text(th3_nodes, "Variation w. past month");
			th3_nodes.forEach(detach_dev);
			tr0_nodes.forEach(detach_dev);
			thead_nodes.forEach(detach_dev);
			t10 = claim_space(table_nodes);
			tbody = claim_element(table_nodes, "TBODY", {});
			var tbody_nodes = children(tbody);
			tr1 = claim_element(tbody_nodes, "TR", {});
			var tr1_nodes = children(tr1);
			td0 = claim_element(tr1_nodes, "TD", { class: true });
			var td0_nodes = children(td0);
			t11 = claim_text(td0_nodes, "Average speed");
			td0_nodes.forEach(detach_dev);
			t12 = claim_space(tr1_nodes);
			td1 = claim_element(tr1_nodes, "TD", { class: true });
			children(td1).forEach(detach_dev);
			t13 = claim_space(tr1_nodes);
			td2 = claim_element(tr1_nodes, "TD", { class: true });
			children(td2).forEach(detach_dev);
			t14 = claim_space(tr1_nodes);
			td3 = claim_element(tr1_nodes, "TD", { class: true });
			children(td3).forEach(detach_dev);
			tr1_nodes.forEach(detach_dev);
			t15 = claim_space(tbody_nodes);
			tr2 = claim_element(tbody_nodes, "TR", { class: true });
			var tr2_nodes = children(tr2);
			td4 = claim_element(tr2_nodes, "TD", { class: true });
			var td4_nodes = children(td4);
			t16 = claim_text(td4_nodes, "Average distance");
			td4_nodes.forEach(detach_dev);
			t17 = claim_space(tr2_nodes);
			td5 = claim_element(tr2_nodes, "TD", { class: true });
			children(td5).forEach(detach_dev);
			t18 = claim_space(tr2_nodes);
			td6 = claim_element(tr2_nodes, "TD", { class: true });
			children(td6).forEach(detach_dev);
			t19 = claim_space(tr2_nodes);
			td7 = claim_element(tr2_nodes, "TD", { class: true });
			children(td7).forEach(detach_dev);
			tr2_nodes.forEach(detach_dev);
			t20 = claim_space(tbody_nodes);
			tr3 = claim_element(tbody_nodes, "TR", {});
			var tr3_nodes = children(tr3);
			td8 = claim_element(tr3_nodes, "TD", { class: true });
			var td8_nodes = children(td8);
			t21 = claim_text(td8_nodes, "Average elevation");
			td8_nodes.forEach(detach_dev);
			t22 = claim_space(tr3_nodes);
			td9 = claim_element(tr3_nodes, "TD", { class: true });
			children(td9).forEach(detach_dev);
			t23 = claim_space(tr3_nodes);
			td10 = claim_element(tr3_nodes, "TD", { class: true });
			children(td10).forEach(detach_dev);
			t24 = claim_space(tr3_nodes);
			td11 = claim_element(tr3_nodes, "TD", { class: true });
			children(td11).forEach(detach_dev);
			tr3_nodes.forEach(detach_dev);
			tbody_nodes.forEach(detach_dev);
			table_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t25 = claim_space(nodes);
			div6 = claim_element(nodes, "DIV", {});
			var div6_nodes = children(div6);
			h3 = claim_element(div6_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t26 = claim_text(h3_nodes, "See your evolution in this chart:");
			h3_nodes.forEach(detach_dev);
			t27 = claim_space(div6_nodes);
			claim_component(charts.$$.fragment, div6_nodes);
			div6_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "text-center p-2 text-2xl font-semibold bg-gray-100");
			add_location(div0, file, 59, 4, 1070);
			attr_dev(div1, "class", "flex-initial w-2/3 p-2");
			add_location(div1, file, 58, 2, 1029);
			if (img.src !== (img_src_value = "cycling.jpg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "cycling");
			add_location(img, file, 65, 4, 1256);
			attr_dev(div2, "class", " text-right p-2");
			add_location(div2, file, 64, 4, 1222);
			attr_dev(div3, "class", "flex-initial w-1/3 p-2");
			add_location(div3, file, 63, 2, 1181);
			attr_dev(div4, "class", "flex h-48");
			add_location(div4, file, 57, 0, 1003);
			attr_dev(th0, "class", "px-4 py-2");
			add_location(th0, file, 76, 8, 1408);
			attr_dev(th1, "class", "px-4 py-2");
			add_location(th1, file, 77, 8, 1451);
			attr_dev(th2, "class", "px-4 py-2");
			add_location(th2, file, 78, 8, 1492);
			attr_dev(th3, "class", "px-4 py-2");
			add_location(th3, file, 79, 8, 1556);
			add_location(tr0, file, 75, 8, 1395);
			add_location(thead, file, 74, 4, 1379);
			attr_dev(td0, "class", "border px-4 py-2");
			add_location(td0, file, 84, 8, 1667);
			attr_dev(td1, "class", "border px-4 py-2");
			add_location(td1, file, 85, 8, 1723);
			attr_dev(td2, "class", "border px-4 py-2");
			add_location(td2, file, 86, 8, 1766);
			attr_dev(td3, "class", "border px-4 py-2");
			add_location(td3, file, 87, 16, 1817);
			add_location(tr1, file, 83, 8, 1654);
			attr_dev(td4, "class", "border px-4 py-2");
			add_location(td4, file, 90, 8, 1907);
			attr_dev(td5, "class", "border px-4 py-2");
			add_location(td5, file, 91, 8, 1966);
			attr_dev(td6, "class", "border px-4 py-2");
			add_location(td6, file, 92, 8, 2009);
			attr_dev(td7, "class", "border px-4 py-2");
			add_location(td7, file, 93, 16, 2060);
			attr_dev(tr2, "class", "bg-gray-100");
			add_location(tr2, file, 89, 8, 1874);
			attr_dev(td8, "class", "border px-4 py-2");
			add_location(td8, file, 96, 8, 2130);
			attr_dev(td9, "class", "border px-4 py-2");
			add_location(td9, file, 97, 8, 2190);
			attr_dev(td10, "class", "border px-4 py-2");
			add_location(td10, file, 98, 8, 2233);
			attr_dev(td11, "class", "border px-4 py-2");
			add_location(td11, file, 99, 16, 2284);
			add_location(tr3, file, 95, 8, 2117);
			add_location(tbody, file, 82, 4, 1638);
			attr_dev(table, "class", "table-auto ");
			add_location(table, file, 73, 4, 1347);
			attr_dev(div5, "class", "p-10");
			add_location(div5, file, 72, 0, 1324);
			attr_dev(h3, "class", "px-10 py-5");
			add_location(h3, file, 108, 1, 2377);
			add_location(div6, file, 107, 0, 2369);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div4, anchor);
			append_dev(div4, div1);
			append_dev(div1, div0);
			append_dev(div0, t0);
			append_dev(div4, t1);
			append_dev(div4, div3);
			append_dev(div3, div2);
			append_dev(div2, img);
			insert_dev(target, t2, anchor);
			insert_dev(target, div5, anchor);
			append_dev(div5, table);
			append_dev(table, thead);
			append_dev(thead, tr0);
			append_dev(tr0, th0);
			append_dev(th0, t3);
			append_dev(tr0, t4);
			append_dev(tr0, th1);
			append_dev(th1, t5);
			append_dev(tr0, t6);
			append_dev(tr0, th2);
			append_dev(th2, t7);
			append_dev(tr0, t8);
			append_dev(tr0, th3);
			append_dev(th3, t9);
			append_dev(table, t10);
			append_dev(table, tbody);
			append_dev(tbody, tr1);
			append_dev(tr1, td0);
			append_dev(td0, t11);
			append_dev(tr1, t12);
			append_dev(tr1, td1);
			append_dev(tr1, t13);
			append_dev(tr1, td2);
			append_dev(tr1, t14);
			append_dev(tr1, td3);
			append_dev(tbody, t15);
			append_dev(tbody, tr2);
			append_dev(tr2, td4);
			append_dev(td4, t16);
			append_dev(tr2, t17);
			append_dev(tr2, td5);
			append_dev(tr2, t18);
			append_dev(tr2, td6);
			append_dev(tr2, t19);
			append_dev(tr2, td7);
			append_dev(tbody, t20);
			append_dev(tbody, tr3);
			append_dev(tr3, td8);
			append_dev(td8, t21);
			append_dev(tr3, t22);
			append_dev(tr3, td9);
			append_dev(tr3, t23);
			append_dev(tr3, td10);
			append_dev(tr3, t24);
			append_dev(tr3, td11);
			insert_dev(target, t25, anchor);
			insert_dev(target, div6, anchor);
			append_dev(div6, h3);
			append_dev(h3, t26);
			append_dev(div6, t27);
			mount_component(charts, div6, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(charts.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(charts.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(div5);
			if (detaching) detach_dev(t25);
			if (detaching) detach_dev(div6);
			destroy_component(charts);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload({ params, query }) {
	return this.fetch(`sports/cycling.json`).then(r => r.json()).then(data_raw => {
		return { data_raw };
	});
}

function instance($$self, $$props, $$invalidate) {
	let { data_raw } = $$props;

	// Compute data for charts
	let list_meters = [];

	let list_date = [];
	let list_elevation = [];

	data_raw.forEach(x => {
		list_meters.push(x.meters);
		list_date.push(x.date);
		list_elevation.push(x.elevation);
	});

	const data = {
		labels: list_date,
		datasets: [
			{
				label: "Meters covered",
				yAxisID: "Meters covered",
				data: list_meters,
				borderColor: "#3e95cd",
				fill: false
			},
			{
				label: "elevation",
				data: list_elevation,
				yAxisID: "elevation",
				borderColor: "#8e5ea2",
				fill: false
			}
		]
	};

	const writable_props = ["data_raw"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Cycling> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Cycling", $$slots, []);

	$$self.$set = $$props => {
		if ("data_raw" in $$props) $$invalidate(1, data_raw = $$props.data_raw);
	};

	$$self.$capture_state = () => ({
		preload,
		Charts: Cycling_charts,
		data_raw,
		list_meters,
		list_date,
		list_elevation,
		data
	});

	$$self.$inject_state = $$props => {
		if ("data_raw" in $$props) $$invalidate(1, data_raw = $$props.data_raw);
		if ("list_meters" in $$props) list_meters = $$props.list_meters;
		if ("list_date" in $$props) list_date = $$props.list_date;
		if ("list_elevation" in $$props) list_elevation = $$props.list_elevation;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [data, data_raw];
}

class Cycling extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { data_raw: 1, data: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Cycling",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*data_raw*/ ctx[1] === undefined && !("data_raw" in props)) {
			console.warn("<Cycling> was created without expected prop 'data_raw'");
		}
	}

	get data_raw() {
		throw new Error("<Cycling>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set data_raw(value) {
		throw new Error("<Cycling>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get data() {
		return this.$$.ctx[0];
	}

	set data(value) {
		throw new Error("<Cycling>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Cycling;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3ljbGluZy43NWM3NjVjYS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9zcG9ydHMvY3ljbGluZy9jeWNsaW5nLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuXHRleHBvcnQgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuXHRcdHJldHVybiB0aGlzLmZldGNoKGBzcG9ydHMvY3ljbGluZy5qc29uYCkudGhlbihyID0+IHIuanNvbigpKS50aGVuKGRhdGFfcmF3ID0+IHtcblx0XHRcdHJldHVybiB7IGRhdGFfcmF3IH07XG5cdFx0fSk7XG5cdH1cdFxuICAgIFxuXG48L3NjcmlwdD5cblxuPHNjcmlwdD5cbiAgICBpbXBvcnQgQ2hhcnRzIGZyb20gJy4vY3ljbGluZy1jaGFydHMuc3ZlbHRlJ1xuICAgIGV4cG9ydCBsZXQgZGF0YV9yYXdcblxuXG4vLyBDb21wdXRlIGRhdGEgZm9yIGNoYXJ0c1xuXG4gICAgbGV0IGxpc3RfbWV0ZXJzID0gW107XG4gICAgbGV0IGxpc3RfZGF0ZSA9IFtdO1xuICAgIGxldCBsaXN0X2VsZXZhdGlvbiA9IFtdO1xuICAgIFxuICAgIGRhdGFfcmF3LmZvckVhY2goeCA9PiB7XG4gICAgICAgIGxpc3RfbWV0ZXJzLnB1c2goeC5tZXRlcnMpXG4gICAgICAgIGxpc3RfZGF0ZS5wdXNoKHguZGF0ZSlcbiAgICAgICAgbGlzdF9lbGV2YXRpb24ucHVzaCh4LmVsZXZhdGlvbilcbiAgICB9KVxuXG4gICAgZXhwb3J0IGNvbnN0IGRhdGEgPSB7XG4gICAgbGFiZWxzOiBsaXN0X2RhdGUsXG4gICAgZGF0YXNldHM6IFt7XG4gICAgICAgIGxhYmVsOiAnTWV0ZXJzIGNvdmVyZWQnLFxuICAgICAgICB5QXhpc0lEIDogJ01ldGVycyBjb3ZlcmVkJyxcbiAgICAgICAgZGF0YTpsaXN0X21ldGVycyxcbiAgICAgICAgYm9yZGVyQ29sb3I6IFwiIzNlOTVjZFwiLFxuICAgICAgICBmaWxsOiBmYWxzZVxuICAgIH0sXG4gICAge1xuICAgICAgICBsYWJlbDogJ2VsZXZhdGlvbicsXG4gICAgICAgIGRhdGE6bGlzdF9lbGV2YXRpb24sXG4gICAgICAgIHlBeGlzSUQgOiAnZWxldmF0aW9uJyxcbiAgICAgICAgYm9yZGVyQ29sb3I6IFwiIzhlNWVhMlwiLFxuICAgICAgICBmaWxsOiBmYWxzZVxuICAgIH1dXG59XG5cblxuLy8gQ29tcHV0ZSBhdmVyYWdlIGRpc3RhbmNlLCBzcGVlZCwgZWxldmF0aW9uLCBcblxuXG5cbjwvc2NyaXB0PlxuXG48c3R5bGU+XG5cbjwvc3R5bGU+XG5cbjxkaXYgY2xhc3M9XCJmbGV4IGgtNDhcIj5cbiAgPGRpdiBjbGFzcz1cImZsZXgtaW5pdGlhbCB3LTIvMyBwLTJcIj5cbiAgICA8ZGl2IGNsYXNzPVwidGV4dC1jZW50ZXIgcC0yIHRleHQtMnhsIGZvbnQtc2VtaWJvbGQgYmctZ3JheS0xMDBcIj5cbiAgICBDeWNsaW5nIFBlcmZvcm1hbmNlXG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwiZmxleC1pbml0aWFsIHctMS8zIHAtMlwiPlxuICAgIDxkaXYgY2xhc3M9XCIgdGV4dC1yaWdodCBwLTJcIj5cbiAgICA8aW1nIHNyYz1cImN5Y2xpbmcuanBnXCIgYWx0PVwiY3ljbGluZ1wiPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuXG5cblxuPGRpdiBjbGFzcz0ncC0xMCc+XG4gICAgPHRhYmxlIGNsYXNzPVwidGFibGUtYXV0byBcIj5cbiAgICA8dGhlYWQ+XG4gICAgICAgIDx0cj5cbiAgICAgICAgPHRoIGNsYXNzPVwicHgtNCBweS0yXCI+TWV0cmljczwvdGg+XG4gICAgICAgIDx0aCBjbGFzcz1cInB4LTQgcHktMlwiPlZhbHVlPC90aD5cbiAgICAgICAgPHRoIGNsYXNzPVwicHgtNCBweS0yXCI+VmFyaWF0aW9uIHcuIGxhc3QgMyBzZXNzaW9uczwvdGg+XG4gICAgICAgIDx0aCBjbGFzcz1cInB4LTQgcHktMlwiPlZhcmlhdGlvbiB3LiBwYXN0IG1vbnRoPC90aD5cbiAgICAgICAgPC90cj5cbiAgICA8L3RoZWFkPlxuICAgIDx0Ym9keT5cbiAgICAgICAgPHRyPlxuICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+QXZlcmFnZSBzcGVlZDwvdGQ+XG4gICAgICAgIDx0ZCBjbGFzcz1cImJvcmRlciBweC00IHB5LTJcIj48L3RkPlxuICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+PC90ZD5cbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+PC90ZD5cbiAgICAgICAgPC90cj5cbiAgICAgICAgPHRyIGNsYXNzPVwiYmctZ3JheS0xMDBcIj5cbiAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPkF2ZXJhZ2UgZGlzdGFuY2U8L3RkPlxuICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+PC90ZD5cbiAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPjwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPjwvdGQ+XG4gICAgICAgIDwvdHI+XG4gICAgICAgIDx0cj5cbiAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPkF2ZXJhZ2UgZWxldmF0aW9uPC90ZD5cbiAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPjwvdGQ+XG4gICAgICAgIDx0ZCBjbGFzcz1cImJvcmRlciBweC00IHB5LTJcIj48L3RkPlxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImJvcmRlciBweC00IHB5LTJcIj48L3RkPlxuICAgICAgICA8L3RyPlxuICAgIDwvdGJvZHk+XG4gICAgPC90YWJsZT5cbjwvZGl2PlxuXG5cblxuPGRpdiA+XG5cdDxoMyBjbGFzcz1cInB4LTEwIHB5LTVcIj5TZWUgeW91ciBldm9sdXRpb24gaW4gdGhpcyBjaGFydDo8L2gzPlxuICAgICA8Q2hhcnRzIHtkYXRhfSAvPiBcbjwvZGl2PlxuXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztTQUVpQixPQUFPLEdBQUcsTUFBTSxFQUFFLEtBQUs7UUFDL0IsSUFBSSxDQUFDLEtBQUssd0JBQXdCLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsUUFBUTtXQUNoRSxRQUFROzs7OztPQVNMLFFBQVE7OztLQUtmLFdBQVc7O0tBQ1gsU0FBUztLQUNULGNBQWM7O0NBRWxCLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztFQUNkLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU07RUFDekIsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSTtFQUNyQixjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTOzs7T0FHdEIsSUFBSTtFQUNqQixNQUFNLEVBQUUsU0FBUztFQUNqQixRQUFROztJQUNKLEtBQUssRUFBRSxnQkFBZ0I7SUFDdkIsT0FBTyxFQUFHLGdCQUFnQjtJQUMxQixJQUFJLEVBQUMsV0FBVztJQUNoQixXQUFXLEVBQUUsU0FBUztJQUN0QixJQUFJLEVBQUUsS0FBSzs7O0lBR1gsS0FBSyxFQUFFLFdBQVc7SUFDbEIsSUFBSSxFQUFDLGNBQWM7SUFDbkIsT0FBTyxFQUFHLFdBQVc7SUFDckIsV0FBVyxFQUFFLFNBQVM7SUFDdEIsSUFBSSxFQUFFLEtBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=

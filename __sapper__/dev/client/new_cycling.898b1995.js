import { S as SvelteComponentDev, i as init, d as dispatch_dev, C as globals, s as safe_not_equal, v as validate_slots, e as element, t as text, a as space, f as claim_element, g as children, h as claim_text, b as detach_dev, c as claim_space, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, D as run_all, E as listen_dev, n as noop, F as prevent_default } from './client.33247a97.js';

/* src/routes/new_sessions/new_cycling.svelte generated by Svelte v3.22.3 */

const { console: console_1 } = globals;
const file = "src/routes/new_sessions/new_cycling.svelte";

function create_fragment(ctx) {
	let div4;
	let div1;
	let div0;
	let t0;
	let t1;
	let div3;
	let div2;
	let img0;
	let img0_src_value;
	let t2;
	let form;
	let label0;
	let t3;
	let t4;
	let input0;
	let t5;
	let label1;
	let t6;
	let t7;
	let input1;
	let t8;
	let label2;
	let t9;
	let t10;
	let input2;
	let t11;
	let label3;
	let t12;
	let t13;
	let input3;
	let t14;
	let button;
	let t15;
	let t16;
	let div9;
	let div6;
	let div5;
	let t17;
	let t18;
	let div8;
	let div7;
	let img1;
	let img1_src_value;
	let t19;
	let body;
	let div16;
	let div10;
	let h1;
	let t20;
	let t21;
	let div15;
	let div11;
	let p0;
	let t22;
	let t23;
	let input4;
	let t24;
	let div12;
	let p1;
	let t25;
	let t26;
	let input5;
	let t27;
	let div13;
	let p2;
	let t28;
	let t29;
	let input6;
	let t30;
	let div14;
	let p3;
	let t31;
	let t32;
	let input7;
	let dispose;

	const block = {
		c: function create() {
			div4 = element("div");
			div1 = element("div");
			div0 = element("div");
			t0 = text("Cycling New Session");
			t1 = space();
			div3 = element("div");
			div2 = element("div");
			img0 = element("img");
			t2 = space();
			form = element("form");
			label0 = element("label");
			t3 = text("Date");
			t4 = space();
			input0 = element("input");
			t5 = space();
			label1 = element("label");
			t6 = text("Distance (m)");
			t7 = space();
			input1 = element("input");
			t8 = space();
			label2 = element("label");
			t9 = text("Minutes");
			t10 = space();
			input2 = element("input");
			t11 = space();
			label3 = element("label");
			t12 = text("Elevation (m)");
			t13 = space();
			input3 = element("input");
			t14 = space();
			button = element("button");
			t15 = text("Create account");
			t16 = space();
			div9 = element("div");
			div6 = element("div");
			div5 = element("div");
			t17 = text("Cycling New Session");
			t18 = space();
			div8 = element("div");
			div7 = element("div");
			img1 = element("img");
			t19 = space();
			body = element("body");
			div16 = element("div");
			div10 = element("div");
			h1 = element("h1");
			t20 = text("New Session");
			t21 = space();
			div15 = element("div");
			div11 = element("div");
			p0 = element("p");
			t22 = text("Date");
			t23 = space();
			input4 = element("input");
			t24 = space();
			div12 = element("div");
			p1 = element("p");
			t25 = text("Meters");
			t26 = space();
			input5 = element("input");
			t27 = space();
			div13 = element("div");
			p2 = element("p");
			t28 = text("Minutes");
			t29 = space();
			input6 = element("input");
			t30 = space();
			div14 = element("div");
			p3 = element("p");
			t31 = text("Elevation");
			t32 = space();
			input7 = element("input");
			this.h();
		},
		l: function claim(nodes) {
			div4 = claim_element(nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, "Cycling New Session");
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t1 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			img0 = claim_element(div2_nodes, "IMG", { src: true, alt: true });
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			form = claim_element(nodes, "FORM", {});
			var form_nodes = children(form);
			label0 = claim_element(form_nodes, "LABEL", { for: true });
			var label0_nodes = children(label0);
			t3 = claim_text(label0_nodes, "Date");
			label0_nodes.forEach(detach_dev);
			t4 = claim_space(form_nodes);
			input0 = claim_element(form_nodes, "INPUT", { required: true, type: true, id: true });
			t5 = claim_space(form_nodes);
			label1 = claim_element(form_nodes, "LABEL", { for: true });
			var label1_nodes = children(label1);
			t6 = claim_text(label1_nodes, "Distance (m)");
			label1_nodes.forEach(detach_dev);
			t7 = claim_space(form_nodes);
			input1 = claim_element(form_nodes, "INPUT", { required: true, type: true, id: true });
			t8 = claim_space(form_nodes);
			label2 = claim_element(form_nodes, "LABEL", { for: true });
			var label2_nodes = children(label2);
			t9 = claim_text(label2_nodes, "Minutes");
			label2_nodes.forEach(detach_dev);
			t10 = claim_space(form_nodes);
			input2 = claim_element(form_nodes, "INPUT", { required: true, type: true, id: true });
			t11 = claim_space(form_nodes);
			label3 = claim_element(form_nodes, "LABEL", { for: true });
			var label3_nodes = children(label3);
			t12 = claim_text(label3_nodes, "Elevation (m)");
			label3_nodes.forEach(detach_dev);
			t13 = claim_space(form_nodes);
			input3 = claim_element(form_nodes, "INPUT", { required: true, type: true, id: true });
			t14 = claim_space(form_nodes);
			button = claim_element(form_nodes, "BUTTON", { type: true });
			var button_nodes = children(button);
			t15 = claim_text(button_nodes, "Create account");
			button_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			t16 = claim_space(nodes);
			div9 = claim_element(nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div6 = claim_element(div9_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			t17 = claim_text(div5_nodes, "Cycling New Session");
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t18 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			img1 = claim_element(div7_nodes, "IMG", { src: true, alt: true });
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			t19 = claim_space(nodes);
			body = claim_element(nodes, "BODY", { class: true });
			var body_nodes = children(body);
			div16 = claim_element(body_nodes, "DIV", { class: true });
			var div16_nodes = children(div16);
			div10 = claim_element(div16_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			h1 = claim_element(div10_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t20 = claim_text(h1_nodes, "New Session");
			h1_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			t21 = claim_space(div16_nodes);
			div15 = claim_element(div16_nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			div11 = claim_element(div15_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			p0 = claim_element(div11_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t22 = claim_text(p0_nodes, "Date");
			p0_nodes.forEach(detach_dev);
			t23 = claim_space(div11_nodes);

			input4 = claim_element(div11_nodes, "INPUT", {
				type: true,
				id: true,
				name: true,
				class: true
			});

			div11_nodes.forEach(detach_dev);
			t24 = claim_space(div15_nodes);
			div12 = claim_element(div15_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			p1 = claim_element(div12_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t25 = claim_text(p1_nodes, "Meters");
			p1_nodes.forEach(detach_dev);
			t26 = claim_space(div12_nodes);

			input5 = claim_element(div12_nodes, "INPUT", {
				type: true,
				id: true,
				name: true,
				class: true
			});

			div12_nodes.forEach(detach_dev);
			t27 = claim_space(div15_nodes);
			div13 = claim_element(div15_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			p2 = claim_element(div13_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t28 = claim_text(p2_nodes, "Minutes");
			p2_nodes.forEach(detach_dev);
			t29 = claim_space(div13_nodes);

			input6 = claim_element(div13_nodes, "INPUT", {
				type: true,
				id: true,
				name: true,
				class: true
			});

			div13_nodes.forEach(detach_dev);
			t30 = claim_space(div15_nodes);
			div14 = claim_element(div15_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			p3 = claim_element(div14_nodes, "P", { class: true });
			var p3_nodes = children(p3);
			t31 = claim_text(p3_nodes, "Elevation");
			p3_nodes.forEach(detach_dev);
			t32 = claim_space(div14_nodes);

			input7 = claim_element(div14_nodes, "INPUT", {
				type: true,
				id: true,
				name: true,
				class: true
			});

			div14_nodes.forEach(detach_dev);
			div15_nodes.forEach(detach_dev);
			div16_nodes.forEach(detach_dev);
			body_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "text-center p-2 text-2xl font-semibold bg-gray-100");
			add_location(div0, file, 57, 4, 1226);
			attr_dev(div1, "class", "flex-initial w-2/3 p-2");
			add_location(div1, file, 56, 2, 1185);
			if (img0.src !== (img0_src_value = "cycling.jpg")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "alt", "cycling");
			add_location(img0, file, 63, 3, 1411);
			attr_dev(div2, "class", " text-right p-2");
			add_location(div2, file, 62, 4, 1378);
			attr_dev(div3, "class", "flex-initial w-1/3 p-2");
			add_location(div3, file, 61, 2, 1337);
			attr_dev(div4, "class", "flex h-48");
			add_location(div4, file, 55, 0, 1159);
			attr_dev(label0, "for", "date");
			add_location(label0, file, 77, 4, 1651);
			input0.required = true;
			attr_dev(input0, "type", "date");
			attr_dev(input0, "id", "date");
			add_location(input0, file, 78, 2, 1684);
			attr_dev(label1, "for", "meters");
			add_location(label1, file, 80, 2, 1728);
			input1.required = true;
			attr_dev(input1, "type", "number");
			attr_dev(input1, "id", "meters");
			add_location(input1, file, 81, 2, 1771);
			attr_dev(label2, "for", "minutes");
			add_location(label2, file, 87, 2, 1891);
			input2.required = true;
			attr_dev(input2, "type", "number");
			attr_dev(input2, "id", "minutes");
			add_location(input2, file, 88, 2, 1930);
			attr_dev(label3, "for", "elevation");
			add_location(label3, file, 90, 2, 1979);
			input3.required = true;
			attr_dev(input3, "type", "number");
			attr_dev(input3, "id", "elevation");
			add_location(input3, file, 91, 2, 2026);
			attr_dev(button, "type", "submit");
			add_location(button, file, 93, 2, 2077);
			add_location(form, file, 70, 0, 1480);
			attr_dev(div5, "class", "text-center p-2 text-2xl font-semibold bg-gray-100");
			add_location(div5, file, 104, 4, 2205);
			attr_dev(div6, "class", "flex-initial w-2/3 p-2");
			add_location(div6, file, 103, 2, 2164);
			if (img1.src !== (img1_src_value = "cycling.jpg")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "alt", "cycling");
			add_location(img1, file, 110, 3, 2390);
			attr_dev(div7, "class", " text-right p-2");
			add_location(div7, file, 109, 4, 2357);
			attr_dev(div8, "class", "flex-initial w-1/3 p-2");
			add_location(div8, file, 108, 2, 2316);
			attr_dev(div9, "class", "flex h-48");
			add_location(div9, file, 102, 0, 2138);
			attr_dev(h1, "class", "font-bold text-3xl text-blue-800");
			add_location(h1, file, 120, 16, 2605);
			attr_dev(div10, "class", "md:flex justify-center");
			add_location(div10, file, 119, 12, 2552);
			attr_dev(p0, "class", "pb-2");
			add_location(p0, file, 125, 20, 2822);
			attr_dev(input4, "type", "date");
			attr_dev(input4, "id", "date");
			attr_dev(input4, "name", "date");
			attr_dev(input4, "class", "shadow hover:shadow-md");
			add_location(input4, file, 126, 20, 2867);
			attr_dev(div11, "class", "pb-6");
			add_location(div11, file, 124, 16, 2782);
			attr_dev(p1, "class", "pb-2");
			add_location(p1, file, 143, 20, 3622);
			attr_dev(input5, "type", "number");
			attr_dev(input5, "id", "meters");
			attr_dev(input5, "name", "meters");
			attr_dev(input5, "class", "shadow hover:shadow-md");
			add_location(input5, file, 144, 16, 3665);
			attr_dev(div12, "class", "pb-6");
			add_location(div12, file, 142, 16, 3583);
			attr_dev(p2, "class", "pb-2");
			add_location(p2, file, 149, 20, 3828);
			attr_dev(input6, "type", "number");
			attr_dev(input6, "id", "minutes");
			attr_dev(input6, "name", "minutes");
			attr_dev(input6, "class", "shadow hover:shadow-md");
			add_location(input6, file, 150, 16, 3872);
			attr_dev(div13, "class", "pb-6");
			add_location(div13, file, 148, 16, 3789);
			attr_dev(p3, "class", "pb-2");
			add_location(p3, file, 154, 20, 4036);
			attr_dev(input7, "type", "number");
			attr_dev(input7, "id", "elevation");
			attr_dev(input7, "name", "elevation");
			attr_dev(input7, "class", "shadow hover:shadow-md");
			add_location(input7, file, 155, 16, 4082);
			attr_dev(div14, "class", "pb-6");
			add_location(div14, file, 153, 16, 3997);
			attr_dev(div15, "class", "md:flex mt-12 w-full justify-around");
			add_location(div15, file, 122, 12, 2698);
			attr_dev(div16, "class", "mx-5 my-5");
			add_location(div16, file, 118, 8, 2516);
			attr_dev(body, "class", "bg-blue-100 w-screen h-screen");
			add_location(body, file, 117, 4, 2463);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div4, anchor);
			append_dev(div4, div1);
			append_dev(div1, div0);
			append_dev(div0, t0);
			append_dev(div4, t1);
			append_dev(div4, div3);
			append_dev(div3, div2);
			append_dev(div2, img0);
			insert_dev(target, t2, anchor);
			insert_dev(target, form, anchor);
			append_dev(form, label0);
			append_dev(label0, t3);
			append_dev(form, t4);
			append_dev(form, input0);
			append_dev(form, t5);
			append_dev(form, label1);
			append_dev(label1, t6);
			append_dev(form, t7);
			append_dev(form, input1);
			append_dev(form, t8);
			append_dev(form, label2);
			append_dev(label2, t9);
			append_dev(form, t10);
			append_dev(form, input2);
			append_dev(form, t11);
			append_dev(form, label3);
			append_dev(label3, t12);
			append_dev(form, t13);
			append_dev(form, input3);
			append_dev(form, t14);
			append_dev(form, button);
			append_dev(button, t15);
			insert_dev(target, t16, anchor);
			insert_dev(target, div9, anchor);
			append_dev(div9, div6);
			append_dev(div6, div5);
			append_dev(div5, t17);
			append_dev(div9, t18);
			append_dev(div9, div8);
			append_dev(div8, div7);
			append_dev(div7, img1);
			insert_dev(target, t19, anchor);
			insert_dev(target, body, anchor);
			append_dev(body, div16);
			append_dev(div16, div10);
			append_dev(div10, h1);
			append_dev(h1, t20);
			append_dev(div16, t21);
			append_dev(div16, div15);
			append_dev(div15, div11);
			append_dev(div11, p0);
			append_dev(p0, t22);
			append_dev(div11, t23);
			append_dev(div11, input4);
			append_dev(div15, t24);
			append_dev(div15, div12);
			append_dev(div12, p1);
			append_dev(p1, t25);
			append_dev(div12, t26);
			append_dev(div12, input5);
			append_dev(div15, t27);
			append_dev(div15, div13);
			append_dev(div13, p2);
			append_dev(p2, t28);
			append_dev(div13, t29);
			append_dev(div13, input6);
			append_dev(div15, t30);
			append_dev(div15, div14);
			append_dev(div14, p3);
			append_dev(p3, t31);
			append_dev(div14, t32);
			append_dev(div14, input7);
			if (remount) run_all(dispose);

			dispose = [
				listen_dev(form, "submit", prevent_default(handleSubmit), false, true, false),
				listen_dev(form, "invalid", /*validateMessageEmail*/ ctx[0], false, false, false),
				listen_dev(form, "changed", /*validateMessageEmail*/ ctx[0], false, false, false),
				listen_dev(form, "input", /*validateMessageEmail*/ ctx[0], false, false, false)
			];
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(form);
			if (detaching) detach_dev(t16);
			if (detaching) detach_dev(div9);
			if (detaching) detach_dev(t19);
			if (detaching) detach_dev(body);
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload({ params, query }) {
	return this.fetch(`new_sessions.json`).then(r => r.json()).then(options => {
		return { options };
	});
}

async function handleSubmit(event) {
	console.log(1);
	console.log(event);
	console.log(1);
	console.log(event.target);
	console.log(1);
	console.log(event.target.email.value);
	console.log(1);
	console.log(event.target.password.value);
}

function instance($$self, $$props, $$invalidate) {
	let { options } = $$props;
	let list = [];

	options.forEach(x => {
		list.push(x.features);
	});

	console.log(list);
	let error_boolean = false;

	function validateMessageEmail(event) {
		let textbox = event.target;
		error_boolean = false;

		if (textbox.value === "") {
			textbox.setCustomValidity("Required email address");
		} else if (textbox.validity.typeMismatch) {
			error_boolean = true;
			textbox.setCustomValidity("please enter a valid email address");
		} else {
			textbox.setCustomValidity("");
		}

		return true;
	}

	const writable_props = ["options"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<New_cycling> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("New_cycling", $$slots, []);

	$$self.$set = $$props => {
		if ("options" in $$props) $$invalidate(1, options = $$props.options);
	};

	$$self.$capture_state = () => ({
		preload,
		options,
		list,
		error_boolean,
		handleSubmit,
		validateMessageEmail
	});

	$$self.$inject_state = $$props => {
		if ("options" in $$props) $$invalidate(1, options = $$props.options);
		if ("list" in $$props) list = $$props.list;
		if ("error_boolean" in $$props) error_boolean = $$props.error_boolean;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [validateMessageEmail, options];
}

class New_cycling extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { options: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "New_cycling",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*options*/ ctx[1] === undefined && !("options" in props)) {
			console_1.warn("<New_cycling> was created without expected prop 'options'");
		}
	}

	get options() {
		throw new Error("<New_cycling>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set options(value) {
		throw new Error("<New_cycling>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default New_cycling;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_slots, e as element, t as text, a as space, w as create_component, f as claim_element, g as children, h as claim_text, b as detach_dev, c as claim_space, x as claim_component, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, y as mount_component, n as noop, z as transition_in, A as transition_out, B as destroy_component } from './client.c33e1ee7.js';
import './_commonjsHelpers.1e235def.js';
import './Chart.b2015135.js';
import Workoutpushups_radar from './workoutpushups-radar.3e05b60c.js';
import Workoutothers_radar from './workoutothers-radar.129696f9.js';
import Workoutabdo_radar from './workoutabdo-radar.f93da83e.js';
import Workoutlegs_radar from './workoutlegs-radar.6cd97436.js';

/* src/routes/sports/workout/workout.svelte generated by Svelte v3.22.3 */
const file = "src/routes/sports/workout/workout.svelte";

function create_fragment(ctx) {
	let div4;
	let div1;
	let div0;
	let t0;
	let t1;
	let div3;
	let div2;
	let img;
	let img_src_value;
	let t2;
	let div5;
	let t3;
	let t4;
	let div6;
	let t5;
	let t6;
	let t7;
	let t8;
	let t9;
	let div7;
	let t10;
	let t11;
	let div8;
	let t12;
	let t13;
	let t14;
	let t15;
	let t16;
	let div9;
	let t17;
	let t18;
	let div10;
	let t19;
	let t20;
	let t21;
	let t22;
	let t23;
	let div11;
	let t24;
	let t25;
	let div12;
	let t26;
	let t27;
	let t28;
	let t29;
	let current;

	const chartsradarleg = new Workoutlegs_radar({
			props: {
				data_leg_radar: /*data_leg_radar*/ ctx[0]
			},
			$$inline: true
		});

	const chartsradarpushups = new Workoutpushups_radar({
			props: {
				data_pushups_radar: /*data_pushups_radar*/ ctx[1]
			},
			$$inline: true
		});

	const chartsradarabdominals = new Workoutabdo_radar({
			props: {
				data_leg_radar: /*data_leg_radar*/ ctx[0]
			},
			$$inline: true
		});

	const chartsradarothers = new Workoutothers_radar({
			props: {
				data_leg_radar: /*data_leg_radar*/ ctx[0]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			div4 = element("div");
			div1 = element("div");
			div0 = element("div");
			t0 = text("Workout Performance");
			t1 = space();
			div3 = element("div");
			div2 = element("div");
			img = element("img");
			t2 = space();
			div5 = element("div");
			t3 = text("Legs");
			t4 = space();
			div6 = element("div");
			t5 = text("Your last session was ");
			t6 = text(/*leg_global_indicator*/ ctx[2]);
			t7 = text(" % of the average of the sessions where you worked on legs");
			t8 = space();
			create_component(chartsradarleg.$$.fragment);
			t9 = space();
			div7 = element("div");
			t10 = text("Push-Ups");
			t11 = space();
			div8 = element("div");
			t12 = text("Your last session was ");
			t13 = text(/*pushups_global_indicator*/ ctx[3]);
			t14 = text(" % of the average of the sessions where you worked on legs");
			t15 = space();
			create_component(chartsradarpushups.$$.fragment);
			t16 = space();
			div9 = element("div");
			t17 = text("Abdominals");
			t18 = space();
			div10 = element("div");
			t19 = text("Your last session was ");
			t20 = text(/*leg_global_indicator*/ ctx[2]);
			t21 = text(" % of the average of the sessions where you worked on legs");
			t22 = space();
			create_component(chartsradarabdominals.$$.fragment);
			t23 = space();
			div11 = element("div");
			t24 = text("Others");
			t25 = space();
			div12 = element("div");
			t26 = text("Your last session was ");
			t27 = text(/*leg_global_indicator*/ ctx[2]);
			t28 = text(" % of the average of the sessions where you worked on legs");
			t29 = space();
			create_component(chartsradarothers.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div4 = claim_element(nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, "Workout Performance");
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t1 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			img = claim_element(div2_nodes, "IMG", { src: true, alt: true });
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			div5 = claim_element(nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			t3 = claim_text(div5_nodes, "Legs");
			div5_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			div6 = claim_element(nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			t5 = claim_text(div6_nodes, "Your last session was ");
			t6 = claim_text(div6_nodes, /*leg_global_indicator*/ ctx[2]);
			t7 = claim_text(div6_nodes, " % of the average of the sessions where you worked on legs");
			div6_nodes.forEach(detach_dev);
			t8 = claim_space(nodes);
			claim_component(chartsradarleg.$$.fragment, nodes);
			t9 = claim_space(nodes);
			div7 = claim_element(nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			t10 = claim_text(div7_nodes, "Push-Ups");
			div7_nodes.forEach(detach_dev);
			t11 = claim_space(nodes);
			div8 = claim_element(nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			t12 = claim_text(div8_nodes, "Your last session was ");
			t13 = claim_text(div8_nodes, /*pushups_global_indicator*/ ctx[3]);
			t14 = claim_text(div8_nodes, " % of the average of the sessions where you worked on legs");
			div8_nodes.forEach(detach_dev);
			t15 = claim_space(nodes);
			claim_component(chartsradarpushups.$$.fragment, nodes);
			t16 = claim_space(nodes);
			div9 = claim_element(nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			t17 = claim_text(div9_nodes, "Abdominals");
			div9_nodes.forEach(detach_dev);
			t18 = claim_space(nodes);
			div10 = claim_element(nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			t19 = claim_text(div10_nodes, "Your last session was ");
			t20 = claim_text(div10_nodes, /*leg_global_indicator*/ ctx[2]);
			t21 = claim_text(div10_nodes, " % of the average of the sessions where you worked on legs");
			div10_nodes.forEach(detach_dev);
			t22 = claim_space(nodes);
			claim_component(chartsradarabdominals.$$.fragment, nodes);
			t23 = claim_space(nodes);
			div11 = claim_element(nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			t24 = claim_text(div11_nodes, "Others");
			div11_nodes.forEach(detach_dev);
			t25 = claim_space(nodes);
			div12 = claim_element(nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			t26 = claim_text(div12_nodes, "Your last session was ");
			t27 = claim_text(div12_nodes, /*leg_global_indicator*/ ctx[2]);
			t28 = claim_text(div12_nodes, " % of the average of the sessions where you worked on legs");
			div12_nodes.forEach(detach_dev);
			t29 = claim_space(nodes);
			claim_component(chartsradarothers.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "text-center p-2 text-2xl font-semibold bg-gray-100");
			add_location(div0, file, 171, 4, 5309);
			attr_dev(div1, "class", "flex-initial w-2/3 p-2");
			add_location(div1, file, 170, 2, 5268);
			if (img.src !== (img_src_value = "workout.jpg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "workout");
			add_location(img, file, 177, 4, 5495);
			attr_dev(div2, "class", " text-right p-2");
			add_location(div2, file, 176, 4, 5461);
			attr_dev(div3, "class", "flex-initial w-1/3 p-2");
			add_location(div3, file, 175, 2, 5420);
			attr_dev(div4, "class", "flex h-48");
			add_location(div4, file, 169, 0, 5242);
			attr_dev(div5, "class", "text-2xl font-semibold ");
			add_location(div5, file, 183, 0, 5562);
			attr_dev(div6, "class", "p-10");
			add_location(div6, file, 186, 0, 5612);
			attr_dev(div7, "class", "text-2xl font-semibold ");
			add_location(div7, file, 192, 0, 5784);
			attr_dev(div8, "class", "p-10");
			add_location(div8, file, 195, 0, 5838);
			attr_dev(div9, "class", "text-2xl font-semibold ");
			add_location(div9, file, 200, 0, 6021);
			attr_dev(div10, "class", "p-10");
			add_location(div10, file, 202, 0, 6076);
			attr_dev(div11, "class", "text-2xl font-semibold ");
			add_location(div11, file, 207, 0, 6254);
			attr_dev(div12, "class", "p-10");
			add_location(div12, file, 210, 0, 6306);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div4, anchor);
			append_dev(div4, div1);
			append_dev(div1, div0);
			append_dev(div0, t0);
			append_dev(div4, t1);
			append_dev(div4, div3);
			append_dev(div3, div2);
			append_dev(div2, img);
			insert_dev(target, t2, anchor);
			insert_dev(target, div5, anchor);
			append_dev(div5, t3);
			insert_dev(target, t4, anchor);
			insert_dev(target, div6, anchor);
			append_dev(div6, t5);
			append_dev(div6, t6);
			append_dev(div6, t7);
			insert_dev(target, t8, anchor);
			mount_component(chartsradarleg, target, anchor);
			insert_dev(target, t9, anchor);
			insert_dev(target, div7, anchor);
			append_dev(div7, t10);
			insert_dev(target, t11, anchor);
			insert_dev(target, div8, anchor);
			append_dev(div8, t12);
			append_dev(div8, t13);
			append_dev(div8, t14);
			insert_dev(target, t15, anchor);
			mount_component(chartsradarpushups, target, anchor);
			insert_dev(target, t16, anchor);
			insert_dev(target, div9, anchor);
			append_dev(div9, t17);
			insert_dev(target, t18, anchor);
			insert_dev(target, div10, anchor);
			append_dev(div10, t19);
			append_dev(div10, t20);
			append_dev(div10, t21);
			insert_dev(target, t22, anchor);
			mount_component(chartsradarabdominals, target, anchor);
			insert_dev(target, t23, anchor);
			insert_dev(target, div11, anchor);
			append_dev(div11, t24);
			insert_dev(target, t25, anchor);
			insert_dev(target, div12, anchor);
			append_dev(div12, t26);
			append_dev(div12, t27);
			append_dev(div12, t28);
			insert_dev(target, t29, anchor);
			mount_component(chartsradarothers, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(chartsradarleg.$$.fragment, local);
			transition_in(chartsradarpushups.$$.fragment, local);
			transition_in(chartsradarabdominals.$$.fragment, local);
			transition_in(chartsradarothers.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(chartsradarleg.$$.fragment, local);
			transition_out(chartsradarpushups.$$.fragment, local);
			transition_out(chartsradarabdominals.$$.fragment, local);
			transition_out(chartsradarothers.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(div5);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(div6);
			if (detaching) detach_dev(t8);
			destroy_component(chartsradarleg, detaching);
			if (detaching) detach_dev(t9);
			if (detaching) detach_dev(div7);
			if (detaching) detach_dev(t11);
			if (detaching) detach_dev(div8);
			if (detaching) detach_dev(t15);
			destroy_component(chartsradarpushups, detaching);
			if (detaching) detach_dev(t16);
			if (detaching) detach_dev(div9);
			if (detaching) detach_dev(t18);
			if (detaching) detach_dev(div10);
			if (detaching) detach_dev(t22);
			destroy_component(chartsradarabdominals, detaching);
			if (detaching) detach_dev(t23);
			if (detaching) detach_dev(div11);
			if (detaching) detach_dev(t25);
			if (detaching) detach_dev(div12);
			if (detaching) detach_dev(t29);
			destroy_component(chartsradarothers, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload({ params, query }) {
	return this.fetch(`sports/workout.json`).then(r => r.json()).then(data_raw => {
		return { data_raw };
	});
}

function push_series(x, exercise) {
	if (exercise in x) {
		return x[exercise]["Series"] * x[exercise]["Number"];
	} else return 0;
}

function last_element(list) {
	return list[list.length - 1];
}

function average_perf(list1, list2) {
	let count = 0;
	let length = 0;

	for (let i in list1) {
		if (list2[i] > 0) {
			count += list1[i] / list2[i];
			length += 1;
		}
	}

	return count / length * 100;
}

function round_1_decimal(float) {
	return Math.round(float * 10) / 10;
}

function mean_list_notnull(list) {
	let count = 0;
	let length = 0;

	list.forEach(elem => {
		if (elem > 0) {
			count += elem;
			length += 1;
		}
	});

	return count / length;
}

function instance($$self, $$props, $$invalidate) {
	let { data_raw } = $$props;

	const workout_exercise = [
		{
			"name": "Squats",
			"features": ["Series", "Number"],
			"group": "Legs"
		},
		{
			"name": "Stair Climbs",
			"features": ["Series", "Number"],
			"group": "Legs"
		},
		{
			"name": "Bench Climbs",
			"features": ["Series", "Number"],
			"group": "Legs"
		},
		{
			"name": "Leg Press",
			"features": ["Series", "Number"],
			"group": "Legs"
		},
		{
			"name": "Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Lateral Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Jumping Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Close Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Raised Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Abdominal",
			"features": ["Series", "Number"],
			"group": "Abdominals"
		},
		{
			"name": "Abdominal Lateral",
			"features": ["Series", "Number"],
			"group": "Abdominals"
		},
		{
			"name": "Core Abdominal",
			"features": ["Series", "Seconds"],
			"group": "Abdominals"
		},
		{
			"name": "Bench",
			"features": ["Series", "Weight"],
			"group": "Weight"
		},
		{
			"name": "Biceps Weight",
			"features": ["Series", "Weight"],
			"group": "Weight"
		},
		{
			"name": "Pull-Ups",
			"features": ["Series", "Weight"],
			"group": "Pull-Ups"
		}
	];

	const group_list = {
		"Legs": ["Squats", "Stair Climbs", "Bench Climbs", "Leg Press"],
		"Push-Ups": [
			"Push-Ups",
			"Lateral Push-Ups",
			"Jumping Push-Ups",
			"Close Push-Ups",
			"Raised Push-Ups"
		],
		"Abdominals": ["Abdominal"]
	};

	// LEGS : 
	let squats = [];

	let stair_climbs = [];
	let bench_climbs = [];
	let leg_press = [];

	data_raw.forEach(x => {
		squats.push(push_series(x, "Squats"));
		stair_climbs.push(push_series(x, "Stair Climbs"));
		bench_climbs.push(push_series(x, "Bench Climbs"));
		leg_press.push(push_series(x, "Leg Press"));
	});

	let last_legs = [
		last_element(squats),
		last_element(stair_climbs),
		last_element(bench_climbs),
		last_element(leg_press)
	];

	let mean_legs = [
		mean_list_notnull(squats),
		mean_list_notnull(stair_climbs),
		mean_list_notnull(bench_climbs),
		mean_list_notnull(leg_press)
	];

	const data_leg_radar = {
		labels: group_list["Legs"],
		datasets: [
			{ label: "Last session", data: last_legs },
			{
				label: "Average session",
				data: mean_legs
			}
		]
	};

	let leg_global_indicator = round_1_decimal(average_perf(last_legs, mean_legs));

	// PushUps : 
	//['Push-Ups', 'Lateral Push-Ups', 'Jumping Push-Ups', 'Close Push-Ups', 'Raised Push-Ups'],
	let pushups = [];

	let pushups_lateral = [];
	let pushups_jumping = [];
	let pushups_close = [];
	let raised_pushups = [];

	data_raw.forEach(x => {
		pushups.push(push_series(x, "Push-Ups"));
		pushups_lateral.push(push_series(x, "Lateral Push-Ups"));
		pushups_jumping.push(push_series(x, "Jumping Push-Ups"));
		pushups_close.push(push_series(x, "Close Push-Ups"));
		raised_pushups.push(push_series(x, "Raised Push-Ups"));
	});

	let last_pushups = [
		last_element(pushups),
		last_element(pushups_lateral),
		last_element(pushups_jumping),
		last_element(pushups_close),
		last_element(raised_pushups)
	];

	let mean_pushups = [
		mean_list_notnull(pushups),
		mean_list_notnull(pushups_lateral),
		mean_list_notnull(pushups_jumping),
		mean_list_notnull(pushups_close),
		mean_list_notnull(raised_pushups)
	];

	const data_pushups_radar = {
		labels: group_list["Push-Ups"],
		datasets: [
			{
				label: "Last session",
				data: last_pushups
			},
			{
				label: "Average session",
				data: mean_pushups
			}
		]
	};

	let pushups_global_indicator = round_1_decimal(average_perf(last_pushups, mean_pushups));
	const writable_props = ["data_raw"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Workout> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Workout", $$slots, []);

	$$self.$set = $$props => {
		if ("data_raw" in $$props) $$invalidate(4, data_raw = $$props.data_raw);
	};

	$$self.$capture_state = () => ({
		preload,
		ChartsRadarLeg: Workoutlegs_radar,
		ChartsRadarPushUps: Workoutpushups_radar,
		ChartsRadarAbdominals: Workoutabdo_radar,
		ChartsRadarOthers: Workoutothers_radar,
		data_raw,
		workout_exercise,
		group_list,
		push_series,
		last_element,
		average_perf,
		round_1_decimal,
		mean_list_notnull,
		squats,
		stair_climbs,
		bench_climbs,
		leg_press,
		last_legs,
		mean_legs,
		data_leg_radar,
		leg_global_indicator,
		pushups,
		pushups_lateral,
		pushups_jumping,
		pushups_close,
		raised_pushups,
		last_pushups,
		mean_pushups,
		data_pushups_radar,
		pushups_global_indicator
	});

	$$self.$inject_state = $$props => {
		if ("data_raw" in $$props) $$invalidate(4, data_raw = $$props.data_raw);
		if ("squats" in $$props) squats = $$props.squats;
		if ("stair_climbs" in $$props) stair_climbs = $$props.stair_climbs;
		if ("bench_climbs" in $$props) bench_climbs = $$props.bench_climbs;
		if ("leg_press" in $$props) leg_press = $$props.leg_press;
		if ("last_legs" in $$props) last_legs = $$props.last_legs;
		if ("mean_legs" in $$props) mean_legs = $$props.mean_legs;
		if ("leg_global_indicator" in $$props) $$invalidate(2, leg_global_indicator = $$props.leg_global_indicator);
		if ("pushups" in $$props) pushups = $$props.pushups;
		if ("pushups_lateral" in $$props) pushups_lateral = $$props.pushups_lateral;
		if ("pushups_jumping" in $$props) pushups_jumping = $$props.pushups_jumping;
		if ("pushups_close" in $$props) pushups_close = $$props.pushups_close;
		if ("raised_pushups" in $$props) raised_pushups = $$props.raised_pushups;
		if ("last_pushups" in $$props) last_pushups = $$props.last_pushups;
		if ("mean_pushups" in $$props) mean_pushups = $$props.mean_pushups;
		if ("pushups_global_indicator" in $$props) $$invalidate(3, pushups_global_indicator = $$props.pushups_global_indicator);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		data_leg_radar,
		data_pushups_radar,
		leg_global_indicator,
		pushups_global_indicator,
		data_raw
	];
}

class Workout extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance, create_fragment, safe_not_equal, {
			data_raw: 4,
			data_leg_radar: 0,
			data_pushups_radar: 1
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Workout",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*data_raw*/ ctx[4] === undefined && !("data_raw" in props)) {
			console.warn("<Workout> was created without expected prop 'data_raw'");
		}
	}

	get data_raw() {
		throw new Error("<Workout>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set data_raw(value) {
		throw new Error("<Workout>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get data_leg_radar() {
		return this.$$.ctx[0];
	}

	set data_leg_radar(value) {
		throw new Error("<Workout>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get data_pushups_radar() {
		return this.$$.ctx[1];
	}

	set data_pushups_radar(value) {
		throw new Error("<Workout>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Workout;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29ya291dC40ZGE5N2RkNi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9zcG9ydHMvd29ya291dC93b3Jrb3V0LnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuXHRleHBvcnQgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuXHRcdHJldHVybiB0aGlzLmZldGNoKGBzcG9ydHMvd29ya291dC5qc29uYCkudGhlbihyID0+IHIuanNvbigpKS50aGVuKGRhdGFfcmF3ID0+IHtcblx0XHRcdHJldHVybiB7IGRhdGFfcmF3IH07XG5cdFx0fSk7XG5cdH1cdFxuXG48L3NjcmlwdD5cblxuPHNjcmlwdD5cbiAgICBpbXBvcnQgQ2hhcnRzUmFkYXJMZWcgZnJvbSAnLi93b3Jrb3V0bGVncy1yYWRhci5zdmVsdGUnXG4gICAgaW1wb3J0IENoYXJ0c1JhZGFyUHVzaFVwcyBmcm9tICcuL3dvcmtvdXRwdXNodXBzLXJhZGFyLnN2ZWx0ZSdcbiAgICBpbXBvcnQgQ2hhcnRzUmFkYXJBYmRvbWluYWxzIGZyb20gJy4vd29ya291dGFiZG8tcmFkYXIuc3ZlbHRlJ1xuICAgIGltcG9ydCBDaGFydHNSYWRhck90aGVycyBmcm9tICcuL3dvcmtvdXRvdGhlcnMtcmFkYXIuc3ZlbHRlJ1xuXG4gICAgXG4gICAgZXhwb3J0IGxldCBkYXRhX3Jhd1xuICAgIFxuICAgIGNvbnN0IHdvcmtvdXRfZXhlcmNpc2UgPSBbXG4gICAgeyduYW1lJzogJ1NxdWF0cycsICdmZWF0dXJlcycgOiBbJ1NlcmllcycsICdOdW1iZXInXSwgJ2dyb3VwJyA6ICdMZWdzJ30sXG4gICAgeyduYW1lJzogJ1N0YWlyIENsaW1icycsICdmZWF0dXJlcycgOiBbJ1NlcmllcycsICdOdW1iZXInXSwgJ2dyb3VwJyA6ICdMZWdzJ30sXG4gICAgeyduYW1lJzogJ0JlbmNoIENsaW1icycsICdmZWF0dXJlcycgOiBbJ1NlcmllcycsICdOdW1iZXInXSwgJ2dyb3VwJyA6ICdMZWdzJ30sXG4gICAgeyduYW1lJzogJ0xlZyBQcmVzcycsICdmZWF0dXJlcycgOiBbJ1NlcmllcycsICdOdW1iZXInXSwgJ2dyb3VwJyA6ICdMZWdzJ30sXG4gICAgXG4gICAgeyduYW1lJzogJ1B1c2gtVXBzJywnZmVhdHVyZXMnIDogWydTZXJpZXMnLCAnTnVtYmVyJ10sJ2dyb3VwJyA6ICdQdXNoLVVwcyd9LFxuICAgIHsnbmFtZSc6ICdMYXRlcmFsIFB1c2gtVXBzJywnZmVhdHVyZXMnIDogWydTZXJpZXMnLCAnTnVtYmVyJ10sICdncm91cCcgOiAnUHVzaC1VcHMnfSxcbiAgICB7J25hbWUnOiAnSnVtcGluZyBQdXNoLVVwcycsJ2ZlYXR1cmVzJyA6IFsnU2VyaWVzJywgJ051bWJlciddLCAnZ3JvdXAnIDogJ1B1c2gtVXBzJ30sXG4gICAgeyduYW1lJzogJ0Nsb3NlIFB1c2gtVXBzJywnZmVhdHVyZXMnIDogWydTZXJpZXMnLCAnTnVtYmVyJ10sICdncm91cCcgOiAnUHVzaC1VcHMnfSxcbiAgICB7J25hbWUnOiAnUmFpc2VkIFB1c2gtVXBzJywnZmVhdHVyZXMnIDogWydTZXJpZXMnLCAnTnVtYmVyJ10sICdncm91cCcgOiAnUHVzaC1VcHMnfSxcblxuICAgIHsnbmFtZSc6ICdBYmRvbWluYWwnLCdmZWF0dXJlcycgOiBbJ1NlcmllcycsICdOdW1iZXInXSwgJ2dyb3VwJyA6ICdBYmRvbWluYWxzJ30sXG4gICAgeyduYW1lJzogJ0FiZG9taW5hbCBMYXRlcmFsJywnZmVhdHVyZXMnIDogWydTZXJpZXMnLCAnTnVtYmVyJ10sICdncm91cCcgOiAnQWJkb21pbmFscyd9LFxuICAgIHsnbmFtZSc6ICdDb3JlIEFiZG9taW5hbCcsJ2ZlYXR1cmVzJyA6IFsnU2VyaWVzJywgJ1NlY29uZHMnXSwgJ2dyb3VwJyA6ICdBYmRvbWluYWxzJ30sXG4gICAgXG4gICAgXG4gICAgeyduYW1lJzogJ0JlbmNoJywgJ2ZlYXR1cmVzJyA6IFsnU2VyaWVzJywgJ1dlaWdodCddLCAnZ3JvdXAnIDogJ1dlaWdodCd9LFxuICAgIHsnbmFtZSc6ICdCaWNlcHMgV2VpZ2h0JywgJ2ZlYXR1cmVzJyA6IFsnU2VyaWVzJywgJ1dlaWdodCddLCdncm91cCcgOiAnV2VpZ2h0J30sXG4gICAgeyduYW1lJzogJ1B1bGwtVXBzJywgJ2ZlYXR1cmVzJyA6IFsnU2VyaWVzJywgJ1dlaWdodCddLCdncm91cCcgOiAnUHVsbC1VcHMnfSxcbiAgICBdXG5cblxuICAgIGNvbnN0IGdyb3VwX2xpc3QgPSB7J0xlZ3MnOiBbJ1NxdWF0cycsICdTdGFpciBDbGltYnMnLCAnQmVuY2ggQ2xpbWJzJywgJ0xlZyBQcmVzcyddLFxuICAgICdQdXNoLVVwcycgOiBbJ1B1c2gtVXBzJywgJ0xhdGVyYWwgUHVzaC1VcHMnLCAnSnVtcGluZyBQdXNoLVVwcycsICdDbG9zZSBQdXNoLVVwcycsICdSYWlzZWQgUHVzaC1VcHMnXSxcbiAgICAnQWJkb21pbmFscyc6IFsnQWJkb21pbmFsJ119XG4gICAgXG4gICAgZnVuY3Rpb24gcHVzaF9zZXJpZXMoeCwgZXhlcmNpc2Upe1xuICAgICAgICBpZiAoZXhlcmNpc2UgaW4geCl7XG4gICAgICAgICAgICByZXR1cm4geFtleGVyY2lzZV1bJ1NlcmllcyddICogeFtleGVyY2lzZV1bJ051bWJlciddXG4gICAgICAgIH0gZWxzZSByZXR1cm4gMFxuICAgIH1cbiAgICBmdW5jdGlvbiBsYXN0X2VsZW1lbnQobGlzdCl7XG4gICAgICAgIHJldHVybiBsaXN0W2xpc3QubGVuZ3RoLTFdXG4gICAgfVxuICAgIGZ1bmN0aW9uIGF2ZXJhZ2VfcGVyZihsaXN0MSwgbGlzdDIpe1xuICAgICAgICBsZXQgY291bnQgPSAwXG4gICAgICAgIGxldCBsZW5ndGggPSAwXG4gICAgICAgIGZvciAobGV0IGkgaW4gbGlzdDEpe1xuICAgICAgICAgICAgaWYgKGxpc3QyW2ldID4wICl7XG4gICAgICAgICAgICAgICAgY291bnQgKz0gbGlzdDFbaV0vbGlzdDJbaV1cbiAgICAgICAgICAgICAgICBsZW5ndGggKz0xXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNvdW50L2xlbmd0aCAqMTAwXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcm91bmRfMV9kZWNpbWFsKGZsb2F0KXtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQoZmxvYXQgKiAxMCkgLzEwXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbWVhbl9saXN0X25vdG51bGwobGlzdCl7XG4gICAgICAgIGxldCBjb3VudCA9IDBcbiAgICAgICAgbGV0IGxlbmd0aCA9IDBcbiAgICAgICAgbGlzdC5mb3JFYWNoKGVsZW0gPT4geyBcbiAgICAgICAgICAgIGlmIChlbGVtID4gMCl7XG4gICAgICAgICAgICAgICAgY291bnQgKz0gZWxlbVxuICAgICAgICAgICAgICAgIGxlbmd0aCArPSAxXG4gICAgICAgICAgICB9fSlcbiAgICAgICAgcmV0dXJuIGNvdW50IC8gbGVuZ3RoXG4gICAgfVxuXG5cbiAgICAvLyBMRUdTIDogXG4gICAgbGV0IHNxdWF0cyA9IFtdXG4gICAgbGV0IHN0YWlyX2NsaW1icyA9IFtdXG4gICAgbGV0IGJlbmNoX2NsaW1icyA9IFtdXG4gICAgbGV0IGxlZ19wcmVzcyA9IFtdXG5cbiAgICBkYXRhX3Jhdy5mb3JFYWNoKHggPT4ge1xuICAgICAgICBzcXVhdHMucHVzaChwdXNoX3Nlcmllcyh4LCAnU3F1YXRzJykpXG4gICAgICAgIHN0YWlyX2NsaW1icy5wdXNoKHB1c2hfc2VyaWVzKHgsICdTdGFpciBDbGltYnMnKSlcbiAgICAgICAgYmVuY2hfY2xpbWJzLnB1c2gocHVzaF9zZXJpZXMoeCwgJ0JlbmNoIENsaW1icycpKVxuICAgICAgICBsZWdfcHJlc3MucHVzaChwdXNoX3Nlcmllcyh4LCAnTGVnIFByZXNzJykpXG4gICAgICAgIFxuICAgIH0pXG5cbiAgICBsZXQgbGFzdF9sZWdzID0gW2xhc3RfZWxlbWVudChzcXVhdHMpLFxuICAgIGxhc3RfZWxlbWVudChzdGFpcl9jbGltYnMpLCBcbiAgICBsYXN0X2VsZW1lbnQoYmVuY2hfY2xpbWJzKSwgXG4gICAgbGFzdF9lbGVtZW50KGxlZ19wcmVzcyldXG5cbiAgICBsZXQgbWVhbl9sZWdzID0gW21lYW5fbGlzdF9ub3RudWxsKHNxdWF0cyksXG4gICAgbWVhbl9saXN0X25vdG51bGwoc3RhaXJfY2xpbWJzKSwgXG4gICAgbWVhbl9saXN0X25vdG51bGwoYmVuY2hfY2xpbWJzKSwgXG4gICAgbWVhbl9saXN0X25vdG51bGwobGVnX3ByZXNzKV1cblxuICAgICBleHBvcnQgY29uc3QgZGF0YV9sZWdfcmFkYXIgPSB7XG4gICAgbGFiZWxzOiBncm91cF9saXN0WydMZWdzJ10sXG4gICAgZGF0YXNldHM6IFt7XG4gICAgICAgIGxhYmVsOiAnTGFzdCBzZXNzaW9uJyxcbiAgICAgICAgZGF0YTpsYXN0X2xlZ3MsXG4gICAgfSwgXG4gICAge1xuICAgICAgICBsYWJlbDogJ0F2ZXJhZ2Ugc2Vzc2lvbicsXG4gICAgICAgIGRhdGE6bWVhbl9sZWdzLFxuICAgIH1cbiAgICBdfVxuXG4gICAgbGV0IGxlZ19nbG9iYWxfaW5kaWNhdG9yID0gcm91bmRfMV9kZWNpbWFsKGF2ZXJhZ2VfcGVyZihsYXN0X2xlZ3MsIG1lYW5fbGVncykpXG5cbi8vIFB1c2hVcHMgOiBcbi8vWydQdXNoLVVwcycsICdMYXRlcmFsIFB1c2gtVXBzJywgJ0p1bXBpbmcgUHVzaC1VcHMnLCAnQ2xvc2UgUHVzaC1VcHMnLCAnUmFpc2VkIFB1c2gtVXBzJ10sXG5cbiAgICBsZXQgcHVzaHVwcyA9IFtdXG4gICAgbGV0IHB1c2h1cHNfbGF0ZXJhbCA9IFtdXG4gICAgbGV0IHB1c2h1cHNfanVtcGluZyA9IFtdXG4gICAgbGV0IHB1c2h1cHNfY2xvc2UgPSBbXVxuICAgIGxldCByYWlzZWRfcHVzaHVwcyA9IFtdXG5cbiAgICBkYXRhX3Jhdy5mb3JFYWNoKHggPT4ge1xuICAgICAgICBwdXNodXBzLnB1c2gocHVzaF9zZXJpZXMoeCwgJ1B1c2gtVXBzJykpXG4gICAgICAgIHB1c2h1cHNfbGF0ZXJhbC5wdXNoKHB1c2hfc2VyaWVzKHgsICdMYXRlcmFsIFB1c2gtVXBzJykpXG4gICAgICAgIHB1c2h1cHNfanVtcGluZy5wdXNoKHB1c2hfc2VyaWVzKHgsICdKdW1waW5nIFB1c2gtVXBzJykpXG4gICAgICAgIHB1c2h1cHNfY2xvc2UucHVzaChwdXNoX3Nlcmllcyh4LCAnQ2xvc2UgUHVzaC1VcHMnKSlcbiAgICAgICAgcmFpc2VkX3B1c2h1cHMucHVzaChwdXNoX3Nlcmllcyh4LCAnUmFpc2VkIFB1c2gtVXBzJykpXG4gICAgfSlcblxuICAgIGxldCBsYXN0X3B1c2h1cHMgPSBbbGFzdF9lbGVtZW50KHB1c2h1cHMpLFxuICAgIGxhc3RfZWxlbWVudChwdXNodXBzX2xhdGVyYWwpLCBcbiAgICBsYXN0X2VsZW1lbnQocHVzaHVwc19qdW1waW5nKSwgXG4gICAgbGFzdF9lbGVtZW50KHB1c2h1cHNfY2xvc2UpLFxuICAgIGxhc3RfZWxlbWVudChyYWlzZWRfcHVzaHVwcyksXG4gICAgXVxuXG4gICAgbGV0IG1lYW5fcHVzaHVwcyA9IFttZWFuX2xpc3Rfbm90bnVsbChwdXNodXBzKSxcbiAgICBtZWFuX2xpc3Rfbm90bnVsbChwdXNodXBzX2xhdGVyYWwpLCBcbiAgICBtZWFuX2xpc3Rfbm90bnVsbChwdXNodXBzX2p1bXBpbmcpLCBcbiAgICBtZWFuX2xpc3Rfbm90bnVsbChwdXNodXBzX2Nsb3NlKSxcbiAgICBtZWFuX2xpc3Rfbm90bnVsbChyYWlzZWRfcHVzaHVwcyldXG5cbiAgICAgZXhwb3J0IGNvbnN0IGRhdGFfcHVzaHVwc19yYWRhciA9IHtcbiAgICBsYWJlbHM6IGdyb3VwX2xpc3RbJ1B1c2gtVXBzJ10sXG4gICAgZGF0YXNldHM6IFt7XG4gICAgICAgIGxhYmVsOiAnTGFzdCBzZXNzaW9uJyxcbiAgICAgICAgZGF0YTpsYXN0X3B1c2h1cHMsXG4gICAgfSwgXG4gICAge1xuICAgICAgICBsYWJlbDogJ0F2ZXJhZ2Ugc2Vzc2lvbicsXG4gICAgICAgIGRhdGE6bWVhbl9wdXNodXBzLFxuICAgIH1cbiAgICBdfVxuXG4gICAgbGV0IHB1c2h1cHNfZ2xvYmFsX2luZGljYXRvciA9IHJvdW5kXzFfZGVjaW1hbChhdmVyYWdlX3BlcmYobGFzdF9wdXNodXBzLCBtZWFuX3B1c2h1cHMpKVxuXG5cblxuXG48L3NjcmlwdD4gXG5cbjxkaXYgY2xhc3M9XCJmbGV4IGgtNDhcIj5cbiAgPGRpdiBjbGFzcz1cImZsZXgtaW5pdGlhbCB3LTIvMyBwLTJcIj5cbiAgICA8ZGl2IGNsYXNzPVwidGV4dC1jZW50ZXIgcC0yIHRleHQtMnhsIGZvbnQtc2VtaWJvbGQgYmctZ3JheS0xMDBcIj5cbiAgICBXb3Jrb3V0IFBlcmZvcm1hbmNlXG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwiZmxleC1pbml0aWFsIHctMS8zIHAtMlwiPlxuICAgIDxkaXYgY2xhc3M9XCIgdGV4dC1yaWdodCBwLTJcIj5cbiAgICA8aW1nIHNyYz1cIndvcmtvdXQuanBnXCIgYWx0PVwid29ya291dFwiPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuXG5cbjxkaXYgY2xhc3M9XCJ0ZXh0LTJ4bCBmb250LXNlbWlib2xkIFwiPlxuTGVnc1xuPC9kaXY+XG48ZGl2IGNsYXNzPVwicC0xMFwiPlxuICAgIFlvdXIgbGFzdCBzZXNzaW9uIHdhcyB7bGVnX2dsb2JhbF9pbmRpY2F0b3J9ICUgb2YgdGhlIGF2ZXJhZ2Ugb2YgdGhlIHNlc3Npb25zIHdoZXJlIHlvdSB3b3JrZWQgb24gbGVnc1xuPC9kaXY+XG5cbjxDaGFydHNSYWRhckxlZyB7ZGF0YV9sZWdfcmFkYXJ9IC8+IFxuXG48ZGl2IGNsYXNzPVwidGV4dC0yeGwgZm9udC1zZW1pYm9sZCBcIj5cblB1c2gtVXBzXG48L2Rpdj5cbjxkaXYgY2xhc3M9XCJwLTEwXCI+XG4gICAgWW91ciBsYXN0IHNlc3Npb24gd2FzIHtwdXNodXBzX2dsb2JhbF9pbmRpY2F0b3J9ICUgb2YgdGhlIGF2ZXJhZ2Ugb2YgdGhlIHNlc3Npb25zIHdoZXJlIHlvdSB3b3JrZWQgb24gbGVnc1xuPC9kaXY+XG48Q2hhcnRzUmFkYXJQdXNoVXBzIHtkYXRhX3B1c2h1cHNfcmFkYXJ9IC8+IFxuXG48ZGl2IGNsYXNzPVwidGV4dC0yeGwgZm9udC1zZW1pYm9sZCBcIj5cbkFiZG9taW5hbHM8L2Rpdj5cbjxkaXYgY2xhc3M9XCJwLTEwXCI+XG4gICAgWW91ciBsYXN0IHNlc3Npb24gd2FzIHtsZWdfZ2xvYmFsX2luZGljYXRvcn0gJSBvZiB0aGUgYXZlcmFnZSBvZiB0aGUgc2Vzc2lvbnMgd2hlcmUgeW91IHdvcmtlZCBvbiBsZWdzXG48L2Rpdj5cbjxDaGFydHNSYWRhckFiZG9taW5hbHMge2RhdGFfbGVnX3JhZGFyfSAvPiBcblxuPGRpdiBjbGFzcz1cInRleHQtMnhsIGZvbnQtc2VtaWJvbGQgXCI+XG5PdGhlcnNcbjwvZGl2PlxuPGRpdiBjbGFzcz1cInAtMTBcIj5cbiAgICBZb3VyIGxhc3Qgc2Vzc2lvbiB3YXMge2xlZ19nbG9iYWxfaW5kaWNhdG9yfSAlIG9mIHRoZSBhdmVyYWdlIG9mIHRoZSBzZXNzaW9ucyB3aGVyZSB5b3Ugd29ya2VkIG9uIGxlZ3NcbjwvZGl2PlxuPENoYXJ0c1JhZGFyT3RoZXJzIHtkYXRhX2xlZ19yYWRhcn0gLz4gXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztzQ0EyTDJCLEdBQW9COzs7Ozs7Ozs7OzJDQVNwQixHQUF3Qjs7Ozs7Ozs7Ozt1Q0FPeEIsR0FBb0I7Ozs7Ozs7Ozs7dUNBUXBCLEdBQW9COzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dEQXhCcEIsR0FBb0I7Ozs7Ozs7Ozs7Ozs7OzZEQVNwQixHQUF3Qjs7Ozs7Ozs7Ozs7Ozs7MERBT3hCLEdBQW9COzs7Ozs7Ozs7Ozs7OzswREFRcEIsR0FBb0I7Ozs7Ozs7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QVM7OztPQUViLGNBQWM7RUFDNUIsTUFBTSxFQUFFLFVBQVUsQ0FBQyxNQUFNO0VBQ3pCLFFBQVE7S0FDSixLQUFLLEVBQUUsY0FBYyxFQUNyQixJQUFJLEVBQUMsU0FBUzs7SUFHZCxLQUFLLEVBQUUsaUJBQWlCO0lBQ3hCLElBQUksRUFBQyxTQUFTOzs7OztLQUlkLG9CQUFvQixHQUFHLGVBQWUsQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLFNBQVM7Ozs7S0FLeEUsT0FBTzs7S0FDUCxlQUFlO0tBQ2YsZUFBZTtLQUNmLGFBQWE7S0FDYixjQUFjOztDQUVsQixRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7RUFDZCxPQUFPLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUUsVUFBVTtFQUN0QyxlQUFlLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUUsa0JBQWtCO0VBQ3RELGVBQWUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxrQkFBa0I7RUFDdEQsYUFBYSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUFFLGdCQUFnQjtFQUNsRCxjQUFjLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUUsaUJBQWlCOzs7S0FHcEQsWUFBWTtFQUFJLFlBQVksQ0FBQyxPQUFPO0VBQ3hDLFlBQVksQ0FBQyxlQUFlO0VBQzVCLFlBQVksQ0FBQyxlQUFlO0VBQzVCLFlBQVksQ0FBQyxhQUFhO0VBQzFCLFlBQVksQ0FBQyxjQUFjOzs7S0FHdkIsWUFBWTtFQUFJLGlCQUFpQixDQUFDLE9BQU87RUFDN0MsaUJBQWlCLENBQUMsZUFBZTtFQUNqQyxpQkFBaUIsQ0FBQyxlQUFlO0VBQ2pDLGlCQUFpQixDQUFDLGFBQWE7RUFDL0IsaUJBQWlCLENBQUMsY0FBYzs7O09BRWxCLGtCQUFrQjtFQUNoQyxNQUFNLEVBQUUsVUFBVSxDQUFDLFVBQVU7RUFDN0IsUUFBUTs7SUFDSixLQUFLLEVBQUUsY0FBYztJQUNyQixJQUFJLEVBQUMsWUFBWTs7O0lBR2pCLEtBQUssRUFBRSxpQkFBaUI7SUFDeEIsSUFBSSxFQUFDLFlBQVk7Ozs7O0tBSWpCLHdCQUF3QixHQUFHLGVBQWUsQ0FBQyxZQUFZLENBQUMsWUFBWSxFQUFFLFlBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==

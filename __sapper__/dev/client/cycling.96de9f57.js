import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_each_argument, a as validate_slots, e as element, t as text, c as claim_element, b as children, f as claim_text, g as detach_dev, h as attr_dev, j as add_location, k as insert_dev, l as append_dev, n as noop, m as space, o as claim_space, y as create_component, z as claim_component, A as mount_component, B as transition_in, C as transition_out, p as destroy_each, D as destroy_component } from './client.03909a54.js';
import './_commonjsHelpers.1e235def.js';
import './Chart.b2015135.js';
import Cycling_charts from './cycling-charts.f944ee94.js';

/* src/routes/sports/cycling/cycling.svelte generated by Svelte v3.22.3 */
const file = "src/routes/sports/cycling/cycling.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[30] = list[i];
	child_ctx[32] = i;
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[33] = list[i];
	return child_ctx;
}

// (149:12) {#each get_last_nb_sessions(3, list_date) as date}
function create_each_block_1(ctx) {
	let div;
	let t_value = /*date*/ ctx[33] + "";
	let t;

	const block = {
		c: function create() {
			div = element("div");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			t = claim_text(div_nodes, t_value);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "text-center");
			add_location(div, file, 149, 12, 4356);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, t);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(149:12) {#each get_last_nb_sessions(3, list_date) as date}",
		ctx
	});

	return block;
}

// (216:16) {#each distance_3_session as distance, i}
function create_each_block(ctx) {
	let tr;
	let td0;
	let t0_value = /*date_3_session*/ ctx[8][/*i*/ ctx[32]] + "";
	let t0;
	let t1;
	let td1;
	let t2_value = /*distance*/ ctx[30] + "";
	let t2;
	let t3;
	let td2;
	let t4_value = /*minutes_3_session*/ ctx[6][/*i*/ ctx[32]] + "";
	let t4;
	let t5;
	let td3;
	let t6_value = round_2_decimal(/*distance*/ ctx[30] / 1000 / (/*minutes_3_session*/ ctx[6][/*i*/ ctx[32]] / 60)) + "";
	let t6;
	let t7;
	let td4;
	let t8_value = /*elevation_3_session*/ ctx[7][/*i*/ ctx[32]] + "";
	let t8;
	let t9;

	const block = {
		c: function create() {
			tr = element("tr");
			td0 = element("td");
			t0 = text(t0_value);
			t1 = space();
			td1 = element("td");
			t2 = text(t2_value);
			t3 = space();
			td2 = element("td");
			t4 = text(t4_value);
			t5 = space();
			td3 = element("td");
			t6 = text(t6_value);
			t7 = space();
			td4 = element("td");
			t8 = text(t8_value);
			t9 = space();
			this.h();
		},
		l: function claim(nodes) {
			tr = claim_element(nodes, "TR", {});
			var tr_nodes = children(tr);
			td0 = claim_element(tr_nodes, "TD", { class: true });
			var td0_nodes = children(td0);
			t0 = claim_text(td0_nodes, t0_value);
			td0_nodes.forEach(detach_dev);
			t1 = claim_space(tr_nodes);
			td1 = claim_element(tr_nodes, "TD", { class: true });
			var td1_nodes = children(td1);
			t2 = claim_text(td1_nodes, t2_value);
			td1_nodes.forEach(detach_dev);
			t3 = claim_space(tr_nodes);
			td2 = claim_element(tr_nodes, "TD", { class: true });
			var td2_nodes = children(td2);
			t4 = claim_text(td2_nodes, t4_value);
			td2_nodes.forEach(detach_dev);
			t5 = claim_space(tr_nodes);
			td3 = claim_element(tr_nodes, "TD", { class: true });
			var td3_nodes = children(td3);
			t6 = claim_text(td3_nodes, t6_value);
			td3_nodes.forEach(detach_dev);
			t7 = claim_space(tr_nodes);
			td4 = claim_element(tr_nodes, "TD", { class: true });
			var td4_nodes = children(td4);
			t8 = claim_text(td4_nodes, t8_value);
			td4_nodes.forEach(detach_dev);
			t9 = claim_space(tr_nodes);
			tr_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(td0, "class", "border px-4 py-2");
			add_location(td0, file, 217, 16, 7583);
			attr_dev(td1, "class", "border px-4 py-2");
			add_location(td1, file, 218, 16, 7653);
			attr_dev(td2, "class", "border px-4 py-2");
			add_location(td2, file, 219, 16, 7714);
			attr_dev(td3, "class", "border px-4 py-2");
			add_location(td3, file, 220, 16, 7787);
			attr_dev(td4, "class", "border px-4 py-2");
			add_location(td4, file, 221, 16, 7901);
			add_location(tr, file, 216, 16, 7562);
		},
		m: function mount(target, anchor) {
			insert_dev(target, tr, anchor);
			append_dev(tr, td0);
			append_dev(td0, t0);
			append_dev(tr, t1);
			append_dev(tr, td1);
			append_dev(td1, t2);
			append_dev(tr, t3);
			append_dev(tr, td2);
			append_dev(td2, t4);
			append_dev(tr, t5);
			append_dev(tr, td3);
			append_dev(td3, t6);
			append_dev(tr, t7);
			append_dev(tr, td4);
			append_dev(td4, t8);
			append_dev(tr, t9);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(tr);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(216:16) {#each distance_3_session as distance, i}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div9;
	let div0;
	let img;
	let img_src_value;
	let t0;
	let div2;
	let div1;
	let t1;
	let t2;
	let div4;
	let h10;
	let t3;
	let t4;
	let div3;
	let t5;
	let div8;
	let h11;
	let t6;
	let t7;
	let div5;
	let table0;
	let caption0;
	let t8;
	let t9;
	let thead0;
	let tr0;
	let th0;
	let t10;
	let t11;
	let th1;
	let t12;
	let t13;
	let th2;
	let t14;
	let t15;
	let th3;
	let t16;
	let t17;
	let tbody0;
	let tr1;
	let td0;
	let t18;
	let t19;
	let td1;
	let t20;
	let t21;
	let td2;
	let t22_value = Math.round(/*average_3_distance*/ ctx[9]) + "";
	let t22;
	let t23;
	let td3;
	let t24;
	let t25;
	let t26;
	let td4;
	let t27_value = round_2_decimal(/*average_10_distance*/ ctx[15]) + "";
	let t27;
	let t28;
	let td5;
	let t29;
	let t30;
	let t31;
	let tr2;
	let td6;
	let t32;
	let t33;
	let td7;
	let t34_value = round_2_decimal(/*last_speed*/ ctx[3]) + "";
	let t34;
	let t35;
	let td8;
	let t36_value = round_2_decimal(/*average_3_speed*/ ctx[11]) + "";
	let t36;
	let t37;
	let td9;
	let t38;
	let t39;
	let t40;
	let td10;
	let t41_value = round_2_decimal(/*average_10_speed*/ ctx[17]) + "";
	let t41;
	let t42;
	let td11;
	let t43;
	let t44;
	let t45;
	let tr3;
	let td12;
	let t46;
	let t47;
	let td13;
	let t48;
	let t49;
	let td14;
	let t50_value = round_2_decimal(/*average_3_elevation*/ ctx[10]) + "";
	let t50;
	let t51;
	let td15;
	let t52;
	let t53;
	let t54;
	let td16;
	let t55_value = round_2_decimal(/*average_10_elevation*/ ctx[16]) + "";
	let t55;
	let t56;
	let td17;
	let t57;
	let t58;
	let t59;
	let div6;
	let table1;
	let caption1;
	let t60;
	let t61;
	let thead1;
	let tr4;
	let th4;
	let t62;
	let t63;
	let th5;
	let t64;
	let t65;
	let th6;
	let t66;
	let t67;
	let th7;
	let t68;
	let t69;
	let th8;
	let t70;
	let t71;
	let tbody1;
	let t72;
	let div7;
	let h12;
	let t73;
	let t74;
	let current;
	let each_value_1 = get_last_nb_sessions(3, /*list_date*/ ctx[1]);
	validate_each_argument(each_value_1);
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	let each_value = /*distance_3_session*/ ctx[5];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const charts = new Cycling_charts({
			props: { data: /*data*/ ctx[0] },
			$$inline: true
		});

	const block = {
		c: function create() {
			div9 = element("div");
			div0 = element("div");
			img = element("img");
			t0 = space();
			div2 = element("div");
			div1 = element("div");
			t1 = text("Cycling Performance");
			t2 = space();
			div4 = element("div");
			h10 = element("h1");
			t3 = text("Last Sessions");
			t4 = space();
			div3 = element("div");

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t5 = space();
			div8 = element("div");
			h11 = element("h1");
			t6 = text("Performance Tables");
			t7 = space();
			div5 = element("div");
			table0 = element("table");
			caption0 = element("caption");
			t8 = text("Performance evolution of main metrics");
			t9 = space();
			thead0 = element("thead");
			tr0 = element("tr");
			th0 = element("th");
			t10 = text("Metrics");
			t11 = space();
			th1 = element("th");
			t12 = text("Value");
			t13 = space();
			th2 = element("th");
			t14 = text("vs. Last 3 sessions");
			t15 = space();
			th3 = element("th");
			t16 = text("vs. Last 10 sessions");
			t17 = space();
			tbody0 = element("tbody");
			tr1 = element("tr");
			td0 = element("td");
			t18 = text("Distance (m)");
			t19 = space();
			td1 = element("td");
			t20 = text(/*last_distance*/ ctx[2]);
			t21 = space();
			td2 = element("td");
			t22 = text(t22_value);
			t23 = space();
			td3 = element("td");
			t24 = text(/*variation_3_distance*/ ctx[12]);
			t25 = text("%");
			t26 = space();
			td4 = element("td");
			t27 = text(t27_value);
			t28 = space();
			td5 = element("td");
			t29 = text(/*variation_10_distance*/ ctx[18]);
			t30 = text("%");
			t31 = space();
			tr2 = element("tr");
			td6 = element("td");
			t32 = text("Speed (km/h)");
			t33 = space();
			td7 = element("td");
			t34 = text(t34_value);
			t35 = space();
			td8 = element("td");
			t36 = text(t36_value);
			t37 = space();
			td9 = element("td");
			t38 = text(/*variation_3_speed*/ ctx[13]);
			t39 = text("%");
			t40 = space();
			td10 = element("td");
			t41 = text(t41_value);
			t42 = space();
			td11 = element("td");
			t43 = text(/*variation_10_speed*/ ctx[19]);
			t44 = text("%");
			t45 = space();
			tr3 = element("tr");
			td12 = element("td");
			t46 = text("Elevation");
			t47 = space();
			td13 = element("td");
			t48 = text(/*last_elevation*/ ctx[4]);
			t49 = space();
			td14 = element("td");
			t50 = text(t50_value);
			t51 = space();
			td15 = element("td");
			t52 = text(/*variation_3_elevation*/ ctx[14]);
			t53 = text("%");
			t54 = space();
			td16 = element("td");
			t55 = text(t55_value);
			t56 = space();
			td17 = element("td");
			t57 = text(/*variation_10_elevation*/ ctx[20]);
			t58 = text("%");
			t59 = space();
			div6 = element("div");
			table1 = element("table");
			caption1 = element("caption");
			t60 = text("Performance of last sessions");
			t61 = space();
			thead1 = element("thead");
			tr4 = element("tr");
			th4 = element("th");
			t62 = text("Date");
			t63 = space();
			th5 = element("th");
			t64 = text("Distance (m)");
			t65 = space();
			th6 = element("th");
			t66 = text("Time (min)");
			t67 = space();
			th7 = element("th");
			t68 = text("Speed (km/h)");
			t69 = space();
			th8 = element("th");
			t70 = text("Elevation (m)");
			t71 = space();
			tbody1 = element("tbody");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t72 = space();
			div7 = element("div");
			h12 = element("h1");
			t73 = text("Performance Chart");
			t74 = space();
			create_component(charts.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div9 = claim_element(nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div0 = claim_element(div9_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, alt: true, class: true });
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(div9_nodes);
			div2 = claim_element(div9_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t1 = claim_text(div1_nodes, "Cycling Performance");
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t2 = claim_space(div9_nodes);
			div4 = claim_element(div9_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			h10 = claim_element(div4_nodes, "H1", { class: true });
			var h10_nodes = children(h10);
			t3 = claim_text(h10_nodes, "Last Sessions");
			h10_nodes.forEach(detach_dev);
			t4 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].l(div3_nodes);
			}

			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t5 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			h11 = claim_element(div8_nodes, "H1", { class: true });
			var h11_nodes = children(h11);
			t6 = claim_text(h11_nodes, "Performance Tables");
			h11_nodes.forEach(detach_dev);
			t7 = claim_space(div8_nodes);
			div5 = claim_element(div8_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			table0 = claim_element(div5_nodes, "TABLE", { class: true });
			var table0_nodes = children(table0);
			caption0 = claim_element(table0_nodes, "CAPTION", { class: true });
			var caption0_nodes = children(caption0);
			t8 = claim_text(caption0_nodes, "Performance evolution of main metrics");
			caption0_nodes.forEach(detach_dev);
			t9 = claim_space(table0_nodes);
			thead0 = claim_element(table0_nodes, "THEAD", { class: true });
			var thead0_nodes = children(thead0);
			tr0 = claim_element(thead0_nodes, "TR", { class: true });
			var tr0_nodes = children(tr0);
			th0 = claim_element(tr0_nodes, "TH", { class: true });
			var th0_nodes = children(th0);
			t10 = claim_text(th0_nodes, "Metrics");
			th0_nodes.forEach(detach_dev);
			t11 = claim_space(tr0_nodes);
			th1 = claim_element(tr0_nodes, "TH", { class: true });
			var th1_nodes = children(th1);
			t12 = claim_text(th1_nodes, "Value");
			th1_nodes.forEach(detach_dev);
			t13 = claim_space(tr0_nodes);
			th2 = claim_element(tr0_nodes, "TH", { colspan: true, class: true });
			var th2_nodes = children(th2);
			t14 = claim_text(th2_nodes, "vs. Last 3 sessions");
			th2_nodes.forEach(detach_dev);
			t15 = claim_space(tr0_nodes);
			th3 = claim_element(tr0_nodes, "TH", { colspan: true, class: true });
			var th3_nodes = children(th3);
			t16 = claim_text(th3_nodes, "vs. Last 10 sessions");
			th3_nodes.forEach(detach_dev);
			tr0_nodes.forEach(detach_dev);
			thead0_nodes.forEach(detach_dev);
			t17 = claim_space(table0_nodes);
			tbody0 = claim_element(table0_nodes, "TBODY", {});
			var tbody0_nodes = children(tbody0);
			tr1 = claim_element(tbody0_nodes, "TR", {});
			var tr1_nodes = children(tr1);
			td0 = claim_element(tr1_nodes, "TD", { class: true });
			var td0_nodes = children(td0);
			t18 = claim_text(td0_nodes, "Distance (m)");
			td0_nodes.forEach(detach_dev);
			t19 = claim_space(tr1_nodes);
			td1 = claim_element(tr1_nodes, "TD", { class: true });
			var td1_nodes = children(td1);
			t20 = claim_text(td1_nodes, /*last_distance*/ ctx[2]);
			td1_nodes.forEach(detach_dev);
			t21 = claim_space(tr1_nodes);
			td2 = claim_element(tr1_nodes, "TD", { class: true });
			var td2_nodes = children(td2);
			t22 = claim_text(td2_nodes, t22_value);
			td2_nodes.forEach(detach_dev);
			t23 = claim_space(tr1_nodes);
			td3 = claim_element(tr1_nodes, "TD", { class: true });
			var td3_nodes = children(td3);
			t24 = claim_text(td3_nodes, /*variation_3_distance*/ ctx[12]);
			t25 = claim_text(td3_nodes, "%");
			td3_nodes.forEach(detach_dev);
			t26 = claim_space(tr1_nodes);
			td4 = claim_element(tr1_nodes, "TD", { class: true });
			var td4_nodes = children(td4);
			t27 = claim_text(td4_nodes, t27_value);
			td4_nodes.forEach(detach_dev);
			t28 = claim_space(tr1_nodes);
			td5 = claim_element(tr1_nodes, "TD", { class: true });
			var td5_nodes = children(td5);
			t29 = claim_text(td5_nodes, /*variation_10_distance*/ ctx[18]);
			t30 = claim_text(td5_nodes, "%");
			td5_nodes.forEach(detach_dev);
			tr1_nodes.forEach(detach_dev);
			t31 = claim_space(tbody0_nodes);
			tr2 = claim_element(tbody0_nodes, "TR", { class: true });
			var tr2_nodes = children(tr2);
			td6 = claim_element(tr2_nodes, "TD", { class: true });
			var td6_nodes = children(td6);
			t32 = claim_text(td6_nodes, "Speed (km/h)");
			td6_nodes.forEach(detach_dev);
			t33 = claim_space(tr2_nodes);
			td7 = claim_element(tr2_nodes, "TD", { class: true });
			var td7_nodes = children(td7);
			t34 = claim_text(td7_nodes, t34_value);
			td7_nodes.forEach(detach_dev);
			t35 = claim_space(tr2_nodes);
			td8 = claim_element(tr2_nodes, "TD", { class: true });
			var td8_nodes = children(td8);
			t36 = claim_text(td8_nodes, t36_value);
			td8_nodes.forEach(detach_dev);
			t37 = claim_space(tr2_nodes);
			td9 = claim_element(tr2_nodes, "TD", { class: true });
			var td9_nodes = children(td9);
			t38 = claim_text(td9_nodes, /*variation_3_speed*/ ctx[13]);
			t39 = claim_text(td9_nodes, "%");
			td9_nodes.forEach(detach_dev);
			t40 = claim_space(tr2_nodes);
			td10 = claim_element(tr2_nodes, "TD", { class: true });
			var td10_nodes = children(td10);
			t41 = claim_text(td10_nodes, t41_value);
			td10_nodes.forEach(detach_dev);
			t42 = claim_space(tr2_nodes);
			td11 = claim_element(tr2_nodes, "TD", { class: true });
			var td11_nodes = children(td11);
			t43 = claim_text(td11_nodes, /*variation_10_speed*/ ctx[19]);
			t44 = claim_text(td11_nodes, "%");
			td11_nodes.forEach(detach_dev);
			tr2_nodes.forEach(detach_dev);
			t45 = claim_space(tbody0_nodes);
			tr3 = claim_element(tbody0_nodes, "TR", {});
			var tr3_nodes = children(tr3);
			td12 = claim_element(tr3_nodes, "TD", { class: true });
			var td12_nodes = children(td12);
			t46 = claim_text(td12_nodes, "Elevation");
			td12_nodes.forEach(detach_dev);
			t47 = claim_space(tr3_nodes);
			td13 = claim_element(tr3_nodes, "TD", { class: true });
			var td13_nodes = children(td13);
			t48 = claim_text(td13_nodes, /*last_elevation*/ ctx[4]);
			td13_nodes.forEach(detach_dev);
			t49 = claim_space(tr3_nodes);
			td14 = claim_element(tr3_nodes, "TD", { class: true });
			var td14_nodes = children(td14);
			t50 = claim_text(td14_nodes, t50_value);
			td14_nodes.forEach(detach_dev);
			t51 = claim_space(tr3_nodes);
			td15 = claim_element(tr3_nodes, "TD", { class: true });
			var td15_nodes = children(td15);
			t52 = claim_text(td15_nodes, /*variation_3_elevation*/ ctx[14]);
			t53 = claim_text(td15_nodes, "%");
			td15_nodes.forEach(detach_dev);
			t54 = claim_space(tr3_nodes);
			td16 = claim_element(tr3_nodes, "TD", { class: true });
			var td16_nodes = children(td16);
			t55 = claim_text(td16_nodes, t55_value);
			td16_nodes.forEach(detach_dev);
			t56 = claim_space(tr3_nodes);
			td17 = claim_element(tr3_nodes, "TD", { class: true });
			var td17_nodes = children(td17);
			t57 = claim_text(td17_nodes, /*variation_10_elevation*/ ctx[20]);
			t58 = claim_text(td17_nodes, "%");
			td17_nodes.forEach(detach_dev);
			tr3_nodes.forEach(detach_dev);
			tbody0_nodes.forEach(detach_dev);
			table0_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t59 = claim_space(div8_nodes);
			div6 = claim_element(div8_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			table1 = claim_element(div6_nodes, "TABLE", { class: true });
			var table1_nodes = children(table1);
			caption1 = claim_element(table1_nodes, "CAPTION", { class: true });
			var caption1_nodes = children(caption1);
			t60 = claim_text(caption1_nodes, "Performance of last sessions");
			caption1_nodes.forEach(detach_dev);
			t61 = claim_space(table1_nodes);
			thead1 = claim_element(table1_nodes, "THEAD", { class: true });
			var thead1_nodes = children(thead1);
			tr4 = claim_element(thead1_nodes, "TR", { class: true });
			var tr4_nodes = children(tr4);
			th4 = claim_element(tr4_nodes, "TH", { class: true });
			var th4_nodes = children(th4);
			t62 = claim_text(th4_nodes, "Date");
			th4_nodes.forEach(detach_dev);
			t63 = claim_space(tr4_nodes);
			th5 = claim_element(tr4_nodes, "TH", { class: true });
			var th5_nodes = children(th5);
			t64 = claim_text(th5_nodes, "Distance (m)");
			th5_nodes.forEach(detach_dev);
			t65 = claim_space(tr4_nodes);
			th6 = claim_element(tr4_nodes, "TH", { class: true });
			var th6_nodes = children(th6);
			t66 = claim_text(th6_nodes, "Time (min)");
			th6_nodes.forEach(detach_dev);
			t67 = claim_space(tr4_nodes);
			th7 = claim_element(tr4_nodes, "TH", { class: true });
			var th7_nodes = children(th7);
			t68 = claim_text(th7_nodes, "Speed (km/h)");
			th7_nodes.forEach(detach_dev);
			t69 = claim_space(tr4_nodes);
			th8 = claim_element(tr4_nodes, "TH", { class: true });
			var th8_nodes = children(th8);
			t70 = claim_text(th8_nodes, "Elevation (m)");
			th8_nodes.forEach(detach_dev);
			tr4_nodes.forEach(detach_dev);
			thead1_nodes.forEach(detach_dev);
			t71 = claim_space(table1_nodes);
			tbody1 = claim_element(table1_nodes, "TBODY", {});
			var tbody1_nodes = children(tbody1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(tbody1_nodes);
			}

			tbody1_nodes.forEach(detach_dev);
			table1_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t72 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			h12 = claim_element(div7_nodes, "H1", { class: true });
			var h12_nodes = children(h12);
			t73 = claim_text(h12_nodes, "Performance Chart");
			h12_nodes.forEach(detach_dev);
			t74 = claim_space(div7_nodes);
			claim_component(charts.$$.fragment, div7_nodes);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "bycicle21.jpg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "cycling");
			attr_dev(img, "class", "object-cover h-48 w-full shadow rounded-md");
			add_location(img, file, 134, 8, 3730);
			attr_dev(div0, "class", "mb-6 shadow ");
			add_location(div0, file, 133, 4, 3695);
			attr_dev(div1, "class", "font-sans Arial text-center p-2 text-3xl text-blue-700 font-semibold bg-blue-100 px-8 tracking-widest");
			add_location(div1, file, 139, 8, 3946);
			attr_dev(div2, "class", "flex justify-center mb-16 bg-blue-700 border-2 border-gray-300 shadow-lg rounded-t-md");
			add_location(div2, file, 138, 4, 3838);
			attr_dev(h10, "class", "text-blue-800  mb-8 ");
			add_location(h10, file, 145, 8, 4152);
			attr_dev(div3, "class", "italic grid grid-cols-3 divide-x divide-gray-400");
			add_location(div3, file, 147, 8, 4218);
			attr_dev(div4, "class", "pb-8");
			add_location(div4, file, 144, 4, 4125);
			attr_dev(h11, "class", "text-blue-800");
			add_location(h11, file, 155, 8, 4482);
			attr_dev(caption0, "class", "font-semibold mb-6 mt-8 text-xl italic text-blue-700");
			add_location(caption0, file, 158, 12, 4658);
			attr_dev(th0, "class", "px-4 py-2");
			add_location(th0, file, 161, 16, 4907);
			attr_dev(th1, "class", "px-4 py-2");
			add_location(th1, file, 162, 16, 4958);
			attr_dev(th2, "colspan", "2");
			attr_dev(th2, "class", "px-4 py-2 ");
			add_location(th2, file, 163, 16, 5007);
			attr_dev(th3, "colspan", "2");
			attr_dev(th3, "class", "px-4 py-2");
			add_location(th3, file, 164, 16, 5081);
			attr_dev(tr0, "class", "bg-blue-100 border border-gray-300");
			add_location(tr0, file, 160, 16, 4843);
			attr_dev(thead0, "class", "border-gray-300 italic");
			add_location(thead0, file, 159, 12, 4788);
			attr_dev(td0, "class", "border px-4 py-2");
			add_location(td0, file, 169, 16, 5239);
			attr_dev(td1, "class", "border px-4 py-2");
			add_location(td1, file, 170, 16, 5302);
			attr_dev(td2, "class", "border px-4 py-2");
			add_location(td2, file, 171, 16, 5368);
			attr_dev(td3, "class", "border px-4 py-2");
			add_location(td3, file, 172, 16, 5451);
			attr_dev(td4, "class", "border px-4 py-2");
			add_location(td4, file, 173, 16, 5525);
			attr_dev(td5, "class", "border px-4 py-2");
			add_location(td5, file, 174, 16, 5614);
			add_location(tr1, file, 168, 16, 5218);
			attr_dev(td6, "class", "border px-4 py-2");
			add_location(td6, file, 177, 16, 5741);
			attr_dev(td7, "class", "border px-4 py-2");
			add_location(td7, file, 178, 16, 5804);
			attr_dev(td8, "class", "border px-4 py-2");
			add_location(td8, file, 179, 16, 5884);
			attr_dev(td9, "class", "border px-4 py-2");
			add_location(td9, file, 180, 16, 5969);
			attr_dev(td10, "class", "border px-4 py-2");
			add_location(td10, file, 181, 16, 6040);
			attr_dev(td11, "class", "border px-4 py-2");
			add_location(td11, file, 182, 16, 6126);
			attr_dev(tr2, "class", "");
			add_location(tr2, file, 176, 16, 5711);
			attr_dev(td12, "class", "border px-4 py-2");
			add_location(td12, file, 185, 16, 6241);
			attr_dev(td13, "class", "border px-4 py-2");
			add_location(td13, file, 186, 16, 6301);
			attr_dev(td14, "class", "border px-4 py-2");
			add_location(td14, file, 187, 16, 6368);
			attr_dev(td15, "class", "border px-4 py-2");
			add_location(td15, file, 188, 16, 6457);
			attr_dev(td16, "class", "border px-4 py-2");
			add_location(td16, file, 189, 16, 6532);
			attr_dev(td17, "class", "border px-4 py-2");
			add_location(td17, file, 190, 16, 6622);
			add_location(tr3, file, 184, 16, 6220);
			add_location(tbody0, file, 167, 12, 5194);
			attr_dev(table0, "class", "table-auto text-center container mx-auto");
			add_location(table0, file, 157, 12, 4589);
			attr_dev(div5, "class", "m-12 container mx-auto");
			add_location(div5, file, 156, 8, 4540);
			attr_dev(caption1, "class", "font-semibold mb-6 mt-8 text-xl italic text-blue-700");
			add_location(caption1, file, 201, 12, 6899);
			attr_dev(th4, "class", "px-4 py-2");
			add_location(th4, file, 204, 16, 7139);
			attr_dev(th5, "class", "px-4 py-2");
			add_location(th5, file, 205, 16, 7187);
			attr_dev(th6, "class", "px-4 py-2");
			add_location(th6, file, 206, 16, 7243);
			attr_dev(th7, "class", "px-4 py-2");
			add_location(th7, file, 207, 16, 7297);
			attr_dev(th8, "class", "px-4 py-2");
			add_location(th8, file, 208, 16, 7353);
			attr_dev(tr4, "class", "bg-blue-100 border border-gray-300");
			add_location(tr4, file, 203, 16, 7075);
			attr_dev(thead1, "class", "italic border-gray-300");
			add_location(thead1, file, 202, 12, 7020);
			add_location(tbody1, file, 213, 12, 7467);
			attr_dev(table1, "class", "table-auto text-center container mx-auto");
			add_location(table1, file, 200, 12, 6830);
			attr_dev(div6, "class", "m-12 container mx-auto");
			add_location(div6, file, 199, 8, 6781);
			attr_dev(h12, "class", "text-blue-800 mb-8 mt-16");
			add_location(h12, file, 230, 12, 8120);
			attr_dev(div7, "class", "mt-8");
			add_location(div7, file, 229, 8, 8089);
			attr_dev(div8, "class", "divide-y mt-16");
			add_location(div8, file, 154, 4, 4445);
			attr_dev(div9, "class", "mb-20");
			add_location(div9, file, 132, 0, 3671);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div9, anchor);
			append_dev(div9, div0);
			append_dev(div0, img);
			append_dev(div9, t0);
			append_dev(div9, div2);
			append_dev(div2, div1);
			append_dev(div1, t1);
			append_dev(div9, t2);
			append_dev(div9, div4);
			append_dev(div4, h10);
			append_dev(h10, t3);
			append_dev(div4, t4);
			append_dev(div4, div3);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].m(div3, null);
			}

			append_dev(div9, t5);
			append_dev(div9, div8);
			append_dev(div8, h11);
			append_dev(h11, t6);
			append_dev(div8, t7);
			append_dev(div8, div5);
			append_dev(div5, table0);
			append_dev(table0, caption0);
			append_dev(caption0, t8);
			append_dev(table0, t9);
			append_dev(table0, thead0);
			append_dev(thead0, tr0);
			append_dev(tr0, th0);
			append_dev(th0, t10);
			append_dev(tr0, t11);
			append_dev(tr0, th1);
			append_dev(th1, t12);
			append_dev(tr0, t13);
			append_dev(tr0, th2);
			append_dev(th2, t14);
			append_dev(tr0, t15);
			append_dev(tr0, th3);
			append_dev(th3, t16);
			append_dev(table0, t17);
			append_dev(table0, tbody0);
			append_dev(tbody0, tr1);
			append_dev(tr1, td0);
			append_dev(td0, t18);
			append_dev(tr1, t19);
			append_dev(tr1, td1);
			append_dev(td1, t20);
			append_dev(tr1, t21);
			append_dev(tr1, td2);
			append_dev(td2, t22);
			append_dev(tr1, t23);
			append_dev(tr1, td3);
			append_dev(td3, t24);
			append_dev(td3, t25);
			append_dev(tr1, t26);
			append_dev(tr1, td4);
			append_dev(td4, t27);
			append_dev(tr1, t28);
			append_dev(tr1, td5);
			append_dev(td5, t29);
			append_dev(td5, t30);
			append_dev(tbody0, t31);
			append_dev(tbody0, tr2);
			append_dev(tr2, td6);
			append_dev(td6, t32);
			append_dev(tr2, t33);
			append_dev(tr2, td7);
			append_dev(td7, t34);
			append_dev(tr2, t35);
			append_dev(tr2, td8);
			append_dev(td8, t36);
			append_dev(tr2, t37);
			append_dev(tr2, td9);
			append_dev(td9, t38);
			append_dev(td9, t39);
			append_dev(tr2, t40);
			append_dev(tr2, td10);
			append_dev(td10, t41);
			append_dev(tr2, t42);
			append_dev(tr2, td11);
			append_dev(td11, t43);
			append_dev(td11, t44);
			append_dev(tbody0, t45);
			append_dev(tbody0, tr3);
			append_dev(tr3, td12);
			append_dev(td12, t46);
			append_dev(tr3, t47);
			append_dev(tr3, td13);
			append_dev(td13, t48);
			append_dev(tr3, t49);
			append_dev(tr3, td14);
			append_dev(td14, t50);
			append_dev(tr3, t51);
			append_dev(tr3, td15);
			append_dev(td15, t52);
			append_dev(td15, t53);
			append_dev(tr3, t54);
			append_dev(tr3, td16);
			append_dev(td16, t55);
			append_dev(tr3, t56);
			append_dev(tr3, td17);
			append_dev(td17, t57);
			append_dev(td17, t58);
			append_dev(div8, t59);
			append_dev(div8, div6);
			append_dev(div6, table1);
			append_dev(table1, caption1);
			append_dev(caption1, t60);
			append_dev(table1, t61);
			append_dev(table1, thead1);
			append_dev(thead1, tr4);
			append_dev(tr4, th4);
			append_dev(th4, t62);
			append_dev(tr4, t63);
			append_dev(tr4, th5);
			append_dev(th5, t64);
			append_dev(tr4, t65);
			append_dev(tr4, th6);
			append_dev(th6, t66);
			append_dev(tr4, t67);
			append_dev(tr4, th7);
			append_dev(th7, t68);
			append_dev(tr4, t69);
			append_dev(tr4, th8);
			append_dev(th8, t70);
			append_dev(table1, t71);
			append_dev(table1, tbody1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(tbody1, null);
			}

			append_dev(div8, t72);
			append_dev(div8, div7);
			append_dev(div7, h12);
			append_dev(h12, t73);
			append_dev(div7, t74);
			mount_component(charts, div7, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*list_date*/ 2) {
				each_value_1 = get_last_nb_sessions(3, /*list_date*/ ctx[1]);
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
					} else {
						each_blocks_1[i] = create_each_block_1(child_ctx);
						each_blocks_1[i].c();
						each_blocks_1[i].m(div3, null);
					}
				}

				for (; i < each_blocks_1.length; i += 1) {
					each_blocks_1[i].d(1);
				}

				each_blocks_1.length = each_value_1.length;
			}

			if (dirty[0] & /*elevation_3_session, distance_3_session, minutes_3_session, date_3_session*/ 480) {
				each_value = /*distance_3_session*/ ctx[5];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(tbody1, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(charts.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(charts.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div9);
			destroy_each(each_blocks_1, detaching);
			destroy_each(each_blocks, detaching);
			destroy_component(charts);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload({ params, query }) {
	return this.fetch(`sports/cycling.json`).then(r => r.json()).then(data_raw => {
		return { data_raw };
	});
}

const nb_displayed = 3;

// Sort list of Json by dates (closest dates to last positions)
function custom_sort(a, b) {
	return new Date(a.date).getTime() - new Date(b.date).getTime();
}

// TODO: right now including last session, probably should not
// TODO: colors green or red for variations
function get_last_nb_sessions(int, list) {
	return list.slice(Math.max(list.length - int, 0));
}

function dividevector(a, b) {
	return a.map((e, i) => e / b[i]);
}

function variation(x_new, x_old) {
	const variation = Math.round((x_new - x_old) / x_old * 100);
	return variation;
}

function round_1_decimal(float) {
	return Math.round(float * 10) / 10;
}

function round_2_decimal(float) {
	return Math.round(float * 100) / 100;
}

function instance($$self, $$props, $$invalidate) {
	let { data_raw } = $$props;
	data_raw = data_raw.sort(custom_sort);

	// Compute data for charts
	let list_meters = [];

	let list_date = [];
	let list_elevation = [];
	let list_minutes = [];

	data_raw.forEach(x => {
		list_meters.push(x.meters);
		list_date.push(x.date);
		list_elevation.push(x.elevation);
		list_minutes.push(x.minutes);
	});

	const data = {
		labels: list_date,
		datasets: [
			{
				label: "Meters covered",
				yAxisID: "Meters covered",
				data: list_meters,
				borderColor: "#3e95cd",
				fill: false
			},
			{
				label: "elevation",
				data: list_elevation,
				yAxisID: "elevation",
				borderColor: "#8e5ea2",
				fill: false
			}
		]
	};

	// TODO: verifiy ordering of dates and sessions
	const average = arr => arr.reduce((p, c) => p + c, 0) / arr.length;

	// Compute average distance, speed, elevation, 
	// Last session
	const last_distance = list_meters[list_meters.length - 1];

	const last_hours = list_minutes[list_minutes.length - 1] / 60;
	const last_speed = last_distance / 1000 / last_hours;
	const last_elevation = list_elevation[list_elevation.length - 1];

	// Last 3 sessions
	//const distance_3_session = list_meters.slice(Math.max(list_meters.length - 3, 0))
	const distance_3_session = get_last_nb_sessions(3, list_meters);

	const minutes_3_session = get_last_nb_sessions(3, list_minutes);
	const elevation_3_session = get_last_nb_sessions(3, list_elevation);
	const date_3_session = get_last_nb_sessions(3, list_date);
	const average_3_distance = average(distance_3_session);
	const average_3_elevation = average(elevation_3_session);
	const average_3_speed = average(dividevector(distance_3_session, minutes_3_session)) * 60 / 1000;
	const variation_3_distance = variation(last_distance, average_3_distance);
	const variation_3_speed = variation(last_speed, average_3_speed);
	const variation_3_elevation = variation(last_elevation, average_3_elevation);

	// Last 10 sessions
	const distance_10_session = get_last_nb_sessions(10, list_meters);

	const minutes_10_session = get_last_nb_sessions(10, list_minutes);
	const elevation_10_session = get_last_nb_sessions(10, list_elevation);
	const average_10_distance = average(distance_10_session);
	const average_10_elevation = average(elevation_10_session);
	const average_10_speed = average(dividevector(distance_10_session, minutes_10_session)) * 60 / 1000;
	const variation_10_distance = variation(last_distance, average_10_distance);
	const variation_10_speed = variation(last_speed, average_10_speed);
	const variation_10_elevation = variation(last_elevation, average_10_elevation);
	const writable_props = ["data_raw"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Cycling> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Cycling", $$slots, []);

	$$self.$set = $$props => {
		if ("data_raw" in $$props) $$invalidate(21, data_raw = $$props.data_raw);
	};

	$$self.$capture_state = () => ({
		preload,
		Charts: Cycling_charts,
		data_raw,
		custom_sort,
		list_meters,
		list_date,
		list_elevation,
		list_minutes,
		data,
		average,
		get_last_nb_sessions,
		dividevector,
		variation,
		round_1_decimal,
		round_2_decimal,
		last_distance,
		last_hours,
		last_speed,
		last_elevation,
		distance_3_session,
		minutes_3_session,
		elevation_3_session,
		date_3_session,
		average_3_distance,
		average_3_elevation,
		average_3_speed,
		variation_3_distance,
		variation_3_speed,
		variation_3_elevation,
		distance_10_session,
		minutes_10_session,
		elevation_10_session,
		average_10_distance,
		average_10_elevation,
		average_10_speed,
		variation_10_distance,
		variation_10_speed,
		variation_10_elevation,
		nb_displayed
	});

	$$self.$inject_state = $$props => {
		if ("data_raw" in $$props) $$invalidate(21, data_raw = $$props.data_raw);
		if ("list_meters" in $$props) list_meters = $$props.list_meters;
		if ("list_date" in $$props) $$invalidate(1, list_date = $$props.list_date);
		if ("list_elevation" in $$props) list_elevation = $$props.list_elevation;
		if ("list_minutes" in $$props) list_minutes = $$props.list_minutes;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		data,
		list_date,
		last_distance,
		last_speed,
		last_elevation,
		distance_3_session,
		minutes_3_session,
		elevation_3_session,
		date_3_session,
		average_3_distance,
		average_3_elevation,
		average_3_speed,
		variation_3_distance,
		variation_3_speed,
		variation_3_elevation,
		average_10_distance,
		average_10_elevation,
		average_10_speed,
		variation_10_distance,
		variation_10_speed,
		variation_10_elevation,
		data_raw
	];
}

class Cycling extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { data_raw: 21, data: 0 }, [-1, -1]);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Cycling",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*data_raw*/ ctx[21] === undefined && !("data_raw" in props)) {
			console.warn("<Cycling> was created without expected prop 'data_raw'");
		}
	}

	get data_raw() {
		throw new Error("<Cycling>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set data_raw(value) {
		throw new Error("<Cycling>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get data() {
		return this.$$.ctx[0];
	}

	set data(value) {
		throw new Error("<Cycling>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Cycling;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3ljbGluZy45NmRlOWY1Ny5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9zcG9ydHMvY3ljbGluZy9jeWNsaW5nLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XG5cdGV4cG9ydCBmdW5jdGlvbiBwcmVsb2FkKHsgcGFyYW1zLCBxdWVyeSB9KSB7XG5cdFx0cmV0dXJuIHRoaXMuZmV0Y2goYHNwb3J0cy9jeWNsaW5nLmpzb25gKS50aGVuKHIgPT4gci5qc29uKCkpLnRoZW4oZGF0YV9yYXcgPT4ge1xuXHRcdFx0cmV0dXJuIHsgZGF0YV9yYXcgfTtcblx0XHR9KTtcblx0fVx0XG4gICAgXG5cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuICAgIGltcG9ydCBDaGFydHMgZnJvbSAnLi9jeWNsaW5nLWNoYXJ0cy5zdmVsdGUnXG4gICAgZXhwb3J0IGxldCBkYXRhX3Jhd1xuICAgIFxuICAgIC8vIFNvcnQgbGlzdCBvZiBKc29uIGJ5IGRhdGVzIChjbG9zZXN0IGRhdGVzIHRvIGxhc3QgcG9zaXRpb25zKVxuICAgIGZ1bmN0aW9uIGN1c3RvbV9zb3J0KGEsIGIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKGEuZGF0ZSkuZ2V0VGltZSgpIC0gbmV3IERhdGUoYi5kYXRlKS5nZXRUaW1lKCk7XG4gICAgfVxuICAgIGRhdGFfcmF3ID0gZGF0YV9yYXcuc29ydChjdXN0b21fc29ydClcblxuLy8gQ29tcHV0ZSBkYXRhIGZvciBjaGFydHNcblxuICAgIGxldCBsaXN0X21ldGVycyA9IFtdO1xuICAgIGxldCBsaXN0X2RhdGUgPSBbXTtcbiAgICBsZXQgbGlzdF9lbGV2YXRpb24gPSBbXTtcbiAgICBsZXQgbGlzdF9taW51dGVzID0gW107XG5cbiAgICBkYXRhX3Jhdy5mb3JFYWNoKHggPT4ge1xuICAgICAgICBsaXN0X21ldGVycy5wdXNoKHgubWV0ZXJzKVxuICAgICAgICBsaXN0X2RhdGUucHVzaCh4LmRhdGUpXG4gICAgICAgIGxpc3RfZWxldmF0aW9uLnB1c2goeC5lbGV2YXRpb24pXG4gICAgICAgIGxpc3RfbWludXRlcy5wdXNoKHgubWludXRlcylcbiAgICB9KVxuXG4gICAgZXhwb3J0IGNvbnN0IGRhdGEgPSB7XG4gICAgbGFiZWxzOiBsaXN0X2RhdGUsXG4gICAgZGF0YXNldHM6IFt7XG4gICAgICAgIGxhYmVsOiAnTWV0ZXJzIGNvdmVyZWQnLFxuICAgICAgICB5QXhpc0lEIDogJ01ldGVycyBjb3ZlcmVkJyxcbiAgICAgICAgZGF0YTpsaXN0X21ldGVycyxcbiAgICAgICAgYm9yZGVyQ29sb3I6IFwiIzNlOTVjZFwiLFxuICAgICAgICBmaWxsOiBmYWxzZVxuICAgIH0sXG4gICAge1xuICAgICAgICBsYWJlbDogJ2VsZXZhdGlvbicsXG4gICAgICAgIGRhdGE6bGlzdF9lbGV2YXRpb24sXG4gICAgICAgIHlBeGlzSUQgOiAnZWxldmF0aW9uJyxcbiAgICAgICAgYm9yZGVyQ29sb3I6IFwiIzhlNWVhMlwiLFxuICAgICAgICBmaWxsOiBmYWxzZVxuICAgIH1dXG59XG5cbi8vIFRPRE86IHZlcmlmaXkgb3JkZXJpbmcgb2YgZGF0ZXMgYW5kIHNlc3Npb25zXG5cbmNvbnN0IGF2ZXJhZ2UgPSBhcnIgPT4gYXJyLnJlZHVjZSggKCBwLCBjICkgPT4gcCArIGMsIDAgKSAvIGFyci5sZW5ndGg7XG5cblxuLy8gVE9ETzogcmlnaHQgbm93IGluY2x1ZGluZyBsYXN0IHNlc3Npb24sIHByb2JhYmx5IHNob3VsZCBub3RcblxuLy8gVE9ETzogY29sb3JzIGdyZWVuIG9yIHJlZCBmb3IgdmFyaWF0aW9uc1xuZnVuY3Rpb24gZ2V0X2xhc3RfbmJfc2Vzc2lvbnMoaW50LCBsaXN0KXtcbiAgICByZXR1cm4gbGlzdC5zbGljZShNYXRoLm1heChsaXN0Lmxlbmd0aCAtIGludCwgMCkpXG59XG5cbmZ1bmN0aW9uIGRpdmlkZXZlY3RvcihhLGIpe1xuICAgIHJldHVybiBhLm1hcCgoZSxpKSA9PiBlIC8gYltpXSk7XG59XG5cbmZ1bmN0aW9uIHZhcmlhdGlvbih4X25ldywgeF9vbGQpe1xuICAgIGNvbnN0IHZhcmlhdGlvbiA9IE1hdGgucm91bmQoKHhfbmV3LXhfb2xkKS94X29sZCoxMDApXG4gICAgcmV0dXJuIHZhcmlhdGlvblxufVxuXG5mdW5jdGlvbiByb3VuZF8xX2RlY2ltYWwoZmxvYXQpe1xuICAgIHJldHVybiBNYXRoLnJvdW5kKGZsb2F0ICogMTApIC8xMFxufVxuXG5mdW5jdGlvbiByb3VuZF8yX2RlY2ltYWwoZmxvYXQpe1xuICAgIHJldHVybiBNYXRoLnJvdW5kKGZsb2F0ICogMTAwKSAvIDEwMFxufVxuXG4vLyBDb21wdXRlIGF2ZXJhZ2UgZGlzdGFuY2UsIHNwZWVkLCBlbGV2YXRpb24sIFxuLy8gTGFzdCBzZXNzaW9uXG5jb25zdCBsYXN0X2Rpc3RhbmNlID0gbGlzdF9tZXRlcnNbbGlzdF9tZXRlcnMubGVuZ3RoLTFdXG5jb25zdCBsYXN0X2hvdXJzID0gbGlzdF9taW51dGVzW2xpc3RfbWludXRlcy5sZW5ndGgtMV0vNjBcbmNvbnN0IGxhc3Rfc3BlZWQgPSBsYXN0X2Rpc3RhbmNlLzEwMDAvbGFzdF9ob3Vyc1xuY29uc3QgbGFzdF9lbGV2YXRpb24gPSBsaXN0X2VsZXZhdGlvbltsaXN0X2VsZXZhdGlvbi5sZW5ndGgtMV1cblxuXG4vLyBMYXN0IDMgc2Vzc2lvbnNcbi8vY29uc3QgZGlzdGFuY2VfM19zZXNzaW9uID0gbGlzdF9tZXRlcnMuc2xpY2UoTWF0aC5tYXgobGlzdF9tZXRlcnMubGVuZ3RoIC0gMywgMCkpXG5cbmNvbnN0IGRpc3RhbmNlXzNfc2Vzc2lvbiA9IGdldF9sYXN0X25iX3Nlc3Npb25zKDMsIGxpc3RfbWV0ZXJzKVxuY29uc3QgbWludXRlc18zX3Nlc3Npb24gPSBnZXRfbGFzdF9uYl9zZXNzaW9ucygzLCBsaXN0X21pbnV0ZXMpXG5jb25zdCBlbGV2YXRpb25fM19zZXNzaW9uID0gZ2V0X2xhc3RfbmJfc2Vzc2lvbnMoMywgbGlzdF9lbGV2YXRpb24pXG5jb25zdCBkYXRlXzNfc2Vzc2lvbiA9IGdldF9sYXN0X25iX3Nlc3Npb25zKDMsIGxpc3RfZGF0ZSlcblxuXG5cbmNvbnN0IGF2ZXJhZ2VfM19kaXN0YW5jZSA9IGF2ZXJhZ2UoZGlzdGFuY2VfM19zZXNzaW9uKVxuY29uc3QgYXZlcmFnZV8zX2VsZXZhdGlvbiA9IGF2ZXJhZ2UoZWxldmF0aW9uXzNfc2Vzc2lvbilcbmNvbnN0IGF2ZXJhZ2VfM19zcGVlZCA9IGF2ZXJhZ2UoZGl2aWRldmVjdG9yKGRpc3RhbmNlXzNfc2Vzc2lvbiAsIG1pbnV0ZXNfM19zZXNzaW9uKSkgKiA2MC8xMDAwICBcblxuY29uc3QgdmFyaWF0aW9uXzNfZGlzdGFuY2UgPSB2YXJpYXRpb24obGFzdF9kaXN0YW5jZSwgYXZlcmFnZV8zX2Rpc3RhbmNlKVxuY29uc3QgdmFyaWF0aW9uXzNfc3BlZWQgPSB2YXJpYXRpb24obGFzdF9zcGVlZCwgYXZlcmFnZV8zX3NwZWVkKVxuY29uc3QgdmFyaWF0aW9uXzNfZWxldmF0aW9uID0gdmFyaWF0aW9uKGxhc3RfZWxldmF0aW9uLCBhdmVyYWdlXzNfZWxldmF0aW9uKVxuXG4vLyBMYXN0IDEwIHNlc3Npb25zXG5jb25zdCBkaXN0YW5jZV8xMF9zZXNzaW9uID0gZ2V0X2xhc3RfbmJfc2Vzc2lvbnMoMTAsIGxpc3RfbWV0ZXJzKVxuY29uc3QgbWludXRlc18xMF9zZXNzaW9uID0gZ2V0X2xhc3RfbmJfc2Vzc2lvbnMoMTAsIGxpc3RfbWludXRlcylcbmNvbnN0IGVsZXZhdGlvbl8xMF9zZXNzaW9uID0gZ2V0X2xhc3RfbmJfc2Vzc2lvbnMoMTAsIGxpc3RfZWxldmF0aW9uKVxuXG5jb25zdCBhdmVyYWdlXzEwX2Rpc3RhbmNlID0gYXZlcmFnZShkaXN0YW5jZV8xMF9zZXNzaW9uKVxuY29uc3QgYXZlcmFnZV8xMF9lbGV2YXRpb24gPSBhdmVyYWdlKGVsZXZhdGlvbl8xMF9zZXNzaW9uKVxuY29uc3QgYXZlcmFnZV8xMF9zcGVlZCA9IGF2ZXJhZ2UoZGl2aWRldmVjdG9yKGRpc3RhbmNlXzEwX3Nlc3Npb24gLCBtaW51dGVzXzEwX3Nlc3Npb24pKSAqIDYwLzEwMDBcblxuY29uc3QgdmFyaWF0aW9uXzEwX2Rpc3RhbmNlID0gdmFyaWF0aW9uKGxhc3RfZGlzdGFuY2UsIGF2ZXJhZ2VfMTBfZGlzdGFuY2UpXG5jb25zdCB2YXJpYXRpb25fMTBfc3BlZWQgPSB2YXJpYXRpb24obGFzdF9zcGVlZCwgYXZlcmFnZV8xMF9zcGVlZClcbmNvbnN0IHZhcmlhdGlvbl8xMF9lbGV2YXRpb24gPSB2YXJpYXRpb24obGFzdF9lbGV2YXRpb24sIGF2ZXJhZ2VfMTBfZWxldmF0aW9uKVxuXG5jb25zdCBuYl9kaXNwbGF5ZWQgPSAzXG5cblxuXG48L3NjcmlwdD5cblxuXG48c3R5bGU+XG5cbjwvc3R5bGU+XG48ZGl2IGNsYXNzPVwibWItMjBcIj5cbiAgICA8ZGl2IGNsYXNzPVwibWItNiBzaGFkb3cgXCI+XG4gICAgICAgIDxpbWcgc3JjPVwiYnljaWNsZTIxLmpwZ1wiIGFsdD1cImN5Y2xpbmdcIiBjbGFzcz1cIm9iamVjdC1jb3ZlciBoLTQ4IHctZnVsbCBzaGFkb3cgcm91bmRlZC1tZFwiPlxuICAgIDwvZGl2PlxuXG5cbiAgICA8ZGl2IGNsYXNzPVwiZmxleCBqdXN0aWZ5LWNlbnRlciBtYi0xNiBiZy1ibHVlLTcwMCBib3JkZXItMiBib3JkZXItZ3JheS0zMDAgc2hhZG93LWxnIHJvdW5kZWQtdC1tZFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZm9udC1zYW5zIEFyaWFsIHRleHQtY2VudGVyIHAtMiB0ZXh0LTN4bCB0ZXh0LWJsdWUtNzAwIGZvbnQtc2VtaWJvbGQgYmctYmx1ZS0xMDAgcHgtOCB0cmFja2luZy13aWRlc3RcIj5cbiAgICAgICAgICAgIEN5Y2xpbmcgUGVyZm9ybWFuY2VcbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPSdwYi04Jz5cbiAgICAgICAgPGgxIGNsYXNzPVwidGV4dC1ibHVlLTgwMCAgbWItOCBcIj5MYXN0IFNlc3Npb25zPC9oMT5cbiAgICAgXG4gICAgICAgIDxkaXYgY2xhc3M9XCJpdGFsaWMgZ3JpZCBncmlkLWNvbHMtMyBkaXZpZGUteCBkaXZpZGUtZ3JheS00MDBcIj5cbiAgICAgICAgICAgIHsjZWFjaCBnZXRfbGFzdF9uYl9zZXNzaW9ucygzLCBsaXN0X2RhdGUpIGFzIGRhdGV9XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1jZW50ZXJcIj57ZGF0ZX08L2Rpdj5cbiAgICAgICAgICAgIHsvZWFjaH1cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwiZGl2aWRlLXkgbXQtMTZcIj5cbiAgICAgICAgPGgxIGNsYXNzPVwidGV4dC1ibHVlLTgwMFwiPlBlcmZvcm1hbmNlIFRhYmxlczwvaDE+XG4gICAgICAgIDxkaXYgY2xhc3M9J20tMTIgY29udGFpbmVyIG14LWF1dG8nPlxuICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVwidGFibGUtYXV0byB0ZXh0LWNlbnRlciBjb250YWluZXIgbXgtYXV0b1wiPlxuICAgICAgICAgICAgPGNhcHRpb24gY2xhc3M9XCJmb250LXNlbWlib2xkIG1iLTYgbXQtOCB0ZXh0LXhsIGl0YWxpYyB0ZXh0LWJsdWUtNzAwXCI+UGVyZm9ybWFuY2UgZXZvbHV0aW9uIG9mIG1haW4gbWV0cmljczwvY2FwdGlvbj5cbiAgICAgICAgICAgIDx0aGVhZCBjbGFzcz1cImJvcmRlci1ncmF5LTMwMCBpdGFsaWNcIj5cbiAgICAgICAgICAgICAgICA8dHIgY2xhc3M9XCJiZy1ibHVlLTEwMCBib3JkZXIgYm9yZGVyLWdyYXktMzAwXCI+XG4gICAgICAgICAgICAgICAgPHRoIGNsYXNzPVwicHgtNCBweS0yXCI+TWV0cmljczwvdGg+XG4gICAgICAgICAgICAgICAgPHRoIGNsYXNzPVwicHgtNCBweS0yXCI+VmFsdWU8L3RoPlxuICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPTIgY2xhc3M9XCJweC00IHB5LTIgXCI+dnMuIExhc3QgMyBzZXNzaW9uczwvdGg+XG4gICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49MiBjbGFzcz1cInB4LTQgcHktMlwiPnZzLiBMYXN0IDEwIHNlc3Npb25zPC90aD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPkRpc3RhbmNlIChtKTwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntsYXN0X2Rpc3RhbmNlfTwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntNYXRoLnJvdW5kKGF2ZXJhZ2VfM19kaXN0YW5jZSl9PC90ZD5cbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+e3ZhcmlhdGlvbl8zX2Rpc3RhbmNlfSU8L3RkPlxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImJvcmRlciBweC00IHB5LTJcIj57cm91bmRfMl9kZWNpbWFsKGF2ZXJhZ2VfMTBfZGlzdGFuY2UpfTwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPnt2YXJpYXRpb25fMTBfZGlzdGFuY2V9JTwvdGQ+XG4gICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICA8dHIgY2xhc3M9XCJcIj5cbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+U3BlZWQgKGttL2gpPC90ZD5cbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+e3JvdW5kXzJfZGVjaW1hbChsYXN0X3NwZWVkKX08L3RkPlxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImJvcmRlciBweC00IHB5LTJcIj57cm91bmRfMl9kZWNpbWFsKGF2ZXJhZ2VfM19zcGVlZCl9PC90ZD5cbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+e3ZhcmlhdGlvbl8zX3NwZWVkfSU8L3RkPlxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImJvcmRlciBweC00IHB5LTJcIj57cm91bmRfMl9kZWNpbWFsKGF2ZXJhZ2VfMTBfc3BlZWQpfTwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPnt2YXJpYXRpb25fMTBfc3BlZWR9JTwvdGQ+XG4gICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPkVsZXZhdGlvbjwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntsYXN0X2VsZXZhdGlvbn08L3RkPlxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImJvcmRlciBweC00IHB5LTJcIj57cm91bmRfMl9kZWNpbWFsKGF2ZXJhZ2VfM19lbGV2YXRpb24pfTwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPnt2YXJpYXRpb25fM19lbGV2YXRpb259JTwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntyb3VuZF8yX2RlY2ltYWwoYXZlcmFnZV8xMF9lbGV2YXRpb24pfTwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPnt2YXJpYXRpb25fMTBfZWxldmF0aW9ufSU8L3RkPlxuICAgICAgICBcbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgIDwvZGl2PlxuXG5cblxuICAgICAgICA8ZGl2IGNsYXNzPSdtLTEyIGNvbnRhaW5lciBteC1hdXRvJz5cbiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz1cInRhYmxlLWF1dG8gdGV4dC1jZW50ZXIgY29udGFpbmVyIG14LWF1dG9cIj5cbiAgICAgICAgICAgIDxjYXB0aW9uIGNsYXNzPVwiZm9udC1zZW1pYm9sZCBtYi02IG10LTggdGV4dC14bCBpdGFsaWMgdGV4dC1ibHVlLTcwMFwiPlBlcmZvcm1hbmNlIG9mIGxhc3Qgc2Vzc2lvbnM8L2NhcHRpb24+XG4gICAgICAgICAgICA8dGhlYWQgY2xhc3M9XCJpdGFsaWMgYm9yZGVyLWdyYXktMzAwXCI+XG4gICAgICAgICAgICAgICAgPHRyIGNsYXNzPVwiYmctYmx1ZS0xMDAgYm9yZGVyIGJvcmRlci1ncmF5LTMwMFwiPlxuICAgICAgICAgICAgICAgIDx0aCBjbGFzcz1cInB4LTQgcHktMlwiPkRhdGU8L3RoPlxuICAgICAgICAgICAgICAgIDx0aCBjbGFzcz1cInB4LTQgcHktMlwiPkRpc3RhbmNlIChtKTwvdGg+XG4gICAgICAgICAgICAgICAgPHRoIGNsYXNzPVwicHgtNCBweS0yXCI+VGltZSAobWluKTwvdGg+XG4gICAgICAgICAgICAgICAgPHRoIGNsYXNzPVwicHgtNCBweS0yXCI+U3BlZWQgKGttL2gpPC90aD5cbiAgICAgICAgICAgICAgICA8dGggY2xhc3M9XCJweC00IHB5LTJcIj5FbGV2YXRpb24gKG0pPC90aD5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgPC90aGVhZD5cblxuICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgeyNlYWNoIGRpc3RhbmNlXzNfc2Vzc2lvbiBhcyBkaXN0YW5jZSwgaX1cbiAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntkYXRlXzNfc2Vzc2lvbltpXX08L3RkPlxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImJvcmRlciBweC00IHB5LTJcIj57ZGlzdGFuY2V9PC90ZD5cbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+e21pbnV0ZXNfM19zZXNzaW9uW2ldfTwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntyb3VuZF8yX2RlY2ltYWwoKGRpc3RhbmNlLzEwMDApIC8gKG1pbnV0ZXNfM19zZXNzaW9uW2ldLzYwKSkgfTwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntlbGV2YXRpb25fM19zZXNzaW9uW2ldfTwvdGQ+XG4gICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIHsvZWFjaH1cbiAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm10LThcIj5cbiAgICAgICAgICAgIDxoMSBjbGFzcz1cInRleHQtYmx1ZS04MDAgbWItOCBtdC0xNlwiPlBlcmZvcm1hbmNlIENoYXJ0PC9oMT5cbiAgICAgICAgICAgIDxDaGFydHMge2RhdGF9IC8+IFxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbjwvZGl2PlxuXG5cblxuXG5cblxuPCEtLSBcbjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuXHRleHBvcnQgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuXHRcdHJldHVybiB0aGlzLmZldGNoKGBzcG9ydHMvY3ljbGluZy5qc29uYCkudGhlbihyID0+IHIuanNvbigpKS50aGVuKGRhdGFfcmF3ID0+IHtcblx0XHRcdHJldHVybiB7IGRhdGFfcmF3IH07XG5cdFx0fSk7XG5cdH1cdFxuICAgIFxuXG48L3NjcmlwdD5cblxuPHNjcmlwdD5cbiAgICBpbXBvcnQgQ2hhcnRzIGZyb20gJy4vY3ljbGluZy1jaGFydHMuc3ZlbHRlJ1xuICAgIGV4cG9ydCBsZXQgZGF0YV9yYXdcblxuXG4vLyBDb21wdXRlIGRhdGEgZm9yIGNoYXJ0c1xuXG4gICAgbGV0IGxpc3RfbWV0ZXJzID0gW107XG4gICAgbGV0IGxpc3RfZGF0ZSA9IFtdO1xuICAgIGxldCBsaXN0X2VsZXZhdGlvbiA9IFtdO1xuICAgIGxldCBsaXN0X21pbnV0ZXMgPSBbXTtcblxuICAgIGRhdGFfcmF3LmZvckVhY2goeCA9PiB7XG4gICAgICAgIGxpc3RfbWV0ZXJzLnB1c2goeC5tZXRlcnMpXG4gICAgICAgIGxpc3RfZGF0ZS5wdXNoKHguZGF0ZSlcbiAgICAgICAgbGlzdF9lbGV2YXRpb24ucHVzaCh4LmVsZXZhdGlvbilcbiAgICAgICAgbGlzdF9taW51dGVzLnB1c2goeC5taW51dGVzKVxuICAgIH0pXG5cbiAgICBleHBvcnQgY29uc3QgZGF0YSA9IHtcbiAgICBsYWJlbHM6IGxpc3RfZGF0ZSxcbiAgICBkYXRhc2V0czogW3tcbiAgICAgICAgbGFiZWw6ICdNZXRlcnMgY292ZXJlZCcsXG4gICAgICAgIHlBeGlzSUQgOiAnTWV0ZXJzIGNvdmVyZWQnLFxuICAgICAgICBkYXRhOmxpc3RfbWV0ZXJzLFxuICAgICAgICBib3JkZXJDb2xvcjogXCIjM2U5NWNkXCIsXG4gICAgICAgIGZpbGw6IGZhbHNlXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGxhYmVsOiAnZWxldmF0aW9uJyxcbiAgICAgICAgZGF0YTpsaXN0X2VsZXZhdGlvbixcbiAgICAgICAgeUF4aXNJRCA6ICdlbGV2YXRpb24nLFxuICAgICAgICBib3JkZXJDb2xvcjogXCIjOGU1ZWEyXCIsXG4gICAgICAgIGZpbGw6IGZhbHNlXG4gICAgfV1cbn1cblxuLy8gVE9ETzogdmVyaWZpeSBvcmRlcmluZyBvZiBkYXRlcyBhbmQgc2Vzc2lvbnNcblxuY29uc3QgYXZlcmFnZSA9IGFyciA9PiBhcnIucmVkdWNlKCAoIHAsIGMgKSA9PiBwICsgYywgMCApIC8gYXJyLmxlbmd0aDtcblxuXG4vLyBUT0RPOiByaWdodCBub3cgaW5jbHVkaW5nIGxhc3Qgc2Vzc2lvbiwgcHJvYmFibHkgc2hvdWxkIG5vdFxuXG4vLyBUT0RPOiBjb2xvcnMgZ3JlZW4gb3IgcmVkIGZvciB2YXJpYXRpb25zXG5mdW5jdGlvbiBnZXRfbGFzdF9uYl9zZXNzaW9ucyhpbnQsIGxpc3Qpe1xuICAgIHJldHVybiBsaXN0LnNsaWNlKE1hdGgubWF4KGxpc3QubGVuZ3RoIC0gaW50LCAwKSlcbn1cblxuZnVuY3Rpb24gZGl2aWRldmVjdG9yKGEsYil7XG4gICAgcmV0dXJuIGEubWFwKChlLGkpID0+IGUgLyBiW2ldKTtcbn1cblxuZnVuY3Rpb24gdmFyaWF0aW9uKHhfbmV3LCB4X29sZCl7XG4gICAgY29uc3QgdmFyaWF0aW9uID0gTWF0aC5yb3VuZCgoeF9uZXcteF9vbGQpL3hfb2xkKjEwMClcbiAgICByZXR1cm4gdmFyaWF0aW9uXG59XG5cbmZ1bmN0aW9uIHJvdW5kXzFfZGVjaW1hbChmbG9hdCl7XG4gICAgcmV0dXJuIE1hdGgucm91bmQoZmxvYXQgKiAxMCkgLzEwXG59XG5cbmZ1bmN0aW9uIHJvdW5kXzJfZGVjaW1hbChmbG9hdCl7XG4gICAgcmV0dXJuIE1hdGgucm91bmQoZmxvYXQgKiAxMDApIC8gMTAwXG59XG5cbi8vIENvbXB1dGUgYXZlcmFnZSBkaXN0YW5jZSwgc3BlZWQsIGVsZXZhdGlvbiwgXG4vLyBMYXN0IHNlc3Npb25cbmNvbnN0IGxhc3RfZGlzdGFuY2UgPSBsaXN0X21ldGVyc1tsaXN0X21ldGVycy5sZW5ndGgtMV1cbmNvbnN0IGxhc3RfaG91cnMgPSBsaXN0X21pbnV0ZXNbbGlzdF9taW51dGVzLmxlbmd0aC0xXS82MFxuY29uc3QgbGFzdF9zcGVlZCA9IGxhc3RfZGlzdGFuY2UvMTAwMC9sYXN0X2hvdXJzXG5jb25zdCBsYXN0X2VsZXZhdGlvbiA9IGxpc3RfZWxldmF0aW9uW2xpc3RfZWxldmF0aW9uLmxlbmd0aC0xXVxuXG5cbi8vIExhc3QgMyBzZXNzaW9uc1xuLy9jb25zdCBkaXN0YW5jZV8zX3Nlc3Npb24gPSBsaXN0X21ldGVycy5zbGljZShNYXRoLm1heChsaXN0X21ldGVycy5sZW5ndGggLSAzLCAwKSlcblxuY29uc3QgZGlzdGFuY2VfM19zZXNzaW9uID0gZ2V0X2xhc3RfbmJfc2Vzc2lvbnMoMywgbGlzdF9tZXRlcnMpXG5jb25zdCBtaW51dGVzXzNfc2Vzc2lvbiA9IGdldF9sYXN0X25iX3Nlc3Npb25zKDMsIGxpc3RfbWludXRlcylcbmNvbnN0IGVsZXZhdGlvbl8zX3Nlc3Npb24gPSBnZXRfbGFzdF9uYl9zZXNzaW9ucygzLCBsaXN0X2VsZXZhdGlvbilcbmNvbnN0IGRhdGVfM19zZXNzaW9uID0gZ2V0X2xhc3RfbmJfc2Vzc2lvbnMoMywgbGlzdF9kYXRlKVxuXG5cblxuY29uc3QgYXZlcmFnZV8zX2Rpc3RhbmNlID0gYXZlcmFnZShkaXN0YW5jZV8zX3Nlc3Npb24pXG5jb25zdCBhdmVyYWdlXzNfZWxldmF0aW9uID0gYXZlcmFnZShlbGV2YXRpb25fM19zZXNzaW9uKVxuY29uc3QgYXZlcmFnZV8zX3NwZWVkID0gYXZlcmFnZShkaXZpZGV2ZWN0b3IoZGlzdGFuY2VfM19zZXNzaW9uICwgbWludXRlc18zX3Nlc3Npb24pKSAqIDYwLzEwMDAgIFxuXG5jb25zdCB2YXJpYXRpb25fM19kaXN0YW5jZSA9IHZhcmlhdGlvbihsYXN0X2Rpc3RhbmNlLCBhdmVyYWdlXzNfZGlzdGFuY2UpXG5jb25zdCB2YXJpYXRpb25fM19zcGVlZCA9IHZhcmlhdGlvbihsYXN0X3NwZWVkLCBhdmVyYWdlXzNfc3BlZWQpXG5jb25zdCB2YXJpYXRpb25fM19lbGV2YXRpb24gPSB2YXJpYXRpb24obGFzdF9lbGV2YXRpb24sIGF2ZXJhZ2VfM19lbGV2YXRpb24pXG5cbi8vIExhc3QgMTAgc2Vzc2lvbnNcbmNvbnN0IGRpc3RhbmNlXzEwX3Nlc3Npb24gPSBnZXRfbGFzdF9uYl9zZXNzaW9ucygxMCwgbGlzdF9tZXRlcnMpXG5jb25zdCBtaW51dGVzXzEwX3Nlc3Npb24gPSBnZXRfbGFzdF9uYl9zZXNzaW9ucygxMCwgbGlzdF9taW51dGVzKVxuY29uc3QgZWxldmF0aW9uXzEwX3Nlc3Npb24gPSBnZXRfbGFzdF9uYl9zZXNzaW9ucygxMCwgbGlzdF9lbGV2YXRpb24pXG5cbmNvbnN0IGF2ZXJhZ2VfMTBfZGlzdGFuY2UgPSBhdmVyYWdlKGRpc3RhbmNlXzEwX3Nlc3Npb24pXG5jb25zdCBhdmVyYWdlXzEwX2VsZXZhdGlvbiA9IGF2ZXJhZ2UoZWxldmF0aW9uXzEwX3Nlc3Npb24pXG5jb25zdCBhdmVyYWdlXzEwX3NwZWVkID0gYXZlcmFnZShkaXZpZGV2ZWN0b3IoZGlzdGFuY2VfMTBfc2Vzc2lvbiAsIG1pbnV0ZXNfMTBfc2Vzc2lvbikpICogNjAvMTAwMFxuXG5jb25zdCB2YXJpYXRpb25fMTBfZGlzdGFuY2UgPSB2YXJpYXRpb24obGFzdF9kaXN0YW5jZSwgYXZlcmFnZV8xMF9kaXN0YW5jZSlcbmNvbnN0IHZhcmlhdGlvbl8xMF9zcGVlZCA9IHZhcmlhdGlvbihsYXN0X3NwZWVkLCBhdmVyYWdlXzEwX3NwZWVkKVxuY29uc3QgdmFyaWF0aW9uXzEwX2VsZXZhdGlvbiA9IHZhcmlhdGlvbihsYXN0X2VsZXZhdGlvbiwgYXZlcmFnZV8xMF9lbGV2YXRpb24pXG5cbmNvbnN0IG5iX2Rpc3BsYXllZCA9IDNcblxuXG5cbjwvc2NyaXB0PlxuXG5cbjxzdHlsZT5cblxuPC9zdHlsZT5cblxuPGRpdiBjbGFzcz1cImZsZXggaC00OFwiPlxuICA8ZGl2IGNsYXNzPVwiZmxleC1pbml0aWFsIHctMi8zIHAtMlwiPlxuICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LWNlbnRlciBwLTIgdGV4dC0yeGwgZm9udC1zZW1pYm9sZCBiZy1ncmF5LTEwMFwiPlxuICAgIEN5Y2xpbmcgUGVyZm9ybWFuY2VcbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJmbGV4LWluaXRpYWwgdy0xLzMgcC0yXCI+XG4gICAgPGRpdiBjbGFzcz1cIiB0ZXh0LXJpZ2h0IHAtMlwiPlxuICAgIDxpbWcgc3JjPVwiY3ljbGluZy5qcGdcIiBhbHQ9XCJjeWNsaW5nXCI+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG5cblxuPGRpdiBjbGFzcz0ncHgtMTAnPlxuWW91ciBsYXN0IHNlc3Npb25zIHRvb2sgcGxhY2Ugb246IFxuICAgIDxsdT5cbiAgICB7I2VhY2ggZ2V0X2xhc3RfbmJfc2Vzc2lvbnMoMywgbGlzdF9kYXRlKSBhcyBkYXRlfVxuICAgIDxsaT57ZGF0ZX08L2xpPlxuICAgIHsvZWFjaH1cbiAgICA8L2x1PlxuPC9kaXY+XG5cblxuPGRpdiBjbGFzcz0ncC0xMCc+XG4gICAgPHRhYmxlIGNsYXNzPVwidGFibGUtYXV0byB0ZXh0LWNlbnRlciBcIj5cbiAgICA8dGhlYWQ+XG4gICAgICAgIDx0cj5cbiAgICAgICAgPHRoIGNsYXNzPVwicHgtNCBweS0yXCI+TWV0cmljczwvdGg+XG4gICAgICAgIDx0aCBjbGFzcz1cInB4LTQgcHktMlwiPlZhbHVlPC90aD5cbiAgICAgICAgPHRoIGNvbHNwYW49MiBjbGFzcz1cInB4LTQgcHktMiBcIj52cy4gTGFzdCAzIHNlc3Npb25zPC90aD5cbiAgICAgICAgPHRoIGNvbHNwYW49MiBjbGFzcz1cInB4LTQgcHktMlwiPnZzLiBMYXN0IDEwIHNlc3Npb25zPC90aD5cbiAgICAgICAgPC90cj5cbiAgICA8L3RoZWFkPlxuICAgIDx0Ym9keT5cbiAgICAgICAgPHRyPlxuICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+RGlzdGFuY2UgKG0pPC90ZD5cbiAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntsYXN0X2Rpc3RhbmNlfTwvdGQ+XG4gICAgICAgIDx0ZCBjbGFzcz1cImJvcmRlciBweC00IHB5LTJcIj57TWF0aC5yb3VuZChhdmVyYWdlXzNfZGlzdGFuY2UpfTwvdGQ+XG4gICAgICAgIDx0ZCBjbGFzcz1cImJvcmRlciBweC00IHB5LTJcIj57dmFyaWF0aW9uXzNfZGlzdGFuY2V9JTwvdGQ+XG4gICAgICAgIDx0ZCBjbGFzcz1cImJvcmRlciBweC00IHB5LTJcIj57cm91bmRfMl9kZWNpbWFsKGF2ZXJhZ2VfMTBfZGlzdGFuY2UpfTwvdGQ+XG4gICAgICAgIDx0ZCBjbGFzcz1cImJvcmRlciBweC00IHB5LTJcIj57dmFyaWF0aW9uXzEwX2Rpc3RhbmNlfSU8L3RkPlxuICAgICAgICA8L3RyPlxuICAgICAgICA8dHIgY2xhc3M9XCJiZy1ncmF5LTEwMFwiPlxuICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+U3BlZWQgKGttL2gpPC90ZD5cbiAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntyb3VuZF8yX2RlY2ltYWwobGFzdF9zcGVlZCl9PC90ZD5cbiAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntyb3VuZF8yX2RlY2ltYWwoYXZlcmFnZV8zX3NwZWVkKX08L3RkPlxuICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+e3ZhcmlhdGlvbl8zX3NwZWVkfSU8L3RkPlxuICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+e3JvdW5kXzJfZGVjaW1hbChhdmVyYWdlXzEwX3NwZWVkKX08L3RkPlxuICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+e3ZhcmlhdGlvbl8xMF9zcGVlZH0lPC90ZD5cbiAgICAgICAgPC90cj5cbiAgICAgICAgPHRyPlxuICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+RWxldmF0aW9uPC90ZD5cbiAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntsYXN0X2VsZXZhdGlvbn08L3RkPlxuICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+e3JvdW5kXzJfZGVjaW1hbChhdmVyYWdlXzNfZWxldmF0aW9uKX08L3RkPlxuICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+e3ZhcmlhdGlvbl8zX2VsZXZhdGlvbn0lPC90ZD5cbiAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntyb3VuZF8yX2RlY2ltYWwoYXZlcmFnZV8xMF9lbGV2YXRpb24pfTwvdGQ+XG4gICAgICAgIDx0ZCBjbGFzcz1cImJvcmRlciBweC00IHB5LTJcIj57dmFyaWF0aW9uXzEwX2VsZXZhdGlvbn0lPC90ZD5cbiBcbiAgICAgICAgPC90cj5cbiAgICA8L3Rib2R5PlxuICAgIDwvdGFibGU+XG48L2Rpdj5cblxuXG5cbjxkaXYgY2xhc3M9J3B4LTEwIHB5LTUnPlxuR2V0IHRoZSBkYXRhIGF2YWlsYWJsZSBpbiB0YWJsZVxuXG4gICAgPGRpdiBjbGFzcz0ncHktNSc+XG4gICAgICAgIDx0YWJsZSBjbGFzcz1cInRhYmxlLWF1dG8gdGV4dC1jZW50ZXIgXCI+XG4gICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0aCBjbGFzcz1cInB4LTQgcHktMlwiPkRhdGU8L3RoPlxuICAgICAgICAgICAgPHRoIGNsYXNzPVwicHgtNCBweS0yXCI+RGlzdGFuY2UgKG0pPC90aD5cbiAgICAgICAgICAgIDx0aCBjbGFzcz1cInB4LTQgcHktMlwiPlRpbWUgKG1pbik8L3RoPlxuICAgICAgICAgICAgPHRoIGNsYXNzPVwicHgtNCBweS0yXCI+U3BlZWQgKGttL2gpPC90aD5cbiAgICAgICAgICAgIDx0aCBjbGFzcz1cInB4LTQgcHktMlwiPkVsZXZhdGlvbiAobSk8L3RoPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8L3RyPlxuICAgICAgICA8L3RoZWFkPlxuXG4gICAgICAgIDx0Ym9keT5cbiAgICAgICAgXG4gICAgICAgICAgICB7I2VhY2ggZGlzdGFuY2VfM19zZXNzaW9uIGFzIGRpc3RhbmNlLCBpfVxuICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntkYXRlXzNfc2Vzc2lvbltpXX08L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntkaXN0YW5jZX08L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPnttaW51dGVzXzNfc2Vzc2lvbltpXX08L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzPVwiYm9yZGVyIHB4LTQgcHktMlwiPntyb3VuZF8yX2RlY2ltYWwoKGRpc3RhbmNlLzEwMDApIC8gKG1pbnV0ZXNfM19zZXNzaW9uW2ldLzYwKSkgfTwvdGQ+XG4gICAgICAgICAgICA8dGQgY2xhc3M9XCJib3JkZXIgcHgtNCBweS0yXCI+e2VsZXZhdGlvbl8zX3Nlc3Npb25baV19PC90ZD5cbiAgICAgICAgICAgIFxuXG4gICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgey9lYWNofVxuICAgICAgICA8L3Rib2R5PlxuICAgICAgICA8L3RhYmxlPlxuICAgIDwvZGl2PlxuXG5cbjwvZGl2PlxuXG5cbjxkaXYgY2xhc3M9XCJweC0xMCBweS01XCI+XG5cdDxoMyA+U2VlIHlvdXIgZXZvbHV0aW9uIGluIHRoaXMgY2hhcnQ6PC9oMz5cbiAgICAgPENoYXJ0cyB7ZGF0YX0gLz4gXG48L2Rpdj5cbiAtLT5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7d0JBcUpzQyxHQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bUNBb0VJLEdBQWMsVUFBQyxHQUFDOzs7OzZCQUNoQixHQUFROzs7O3NDQUNSLEdBQWlCLFVBQUMsR0FBQzs7OztnQkFDbkIsZUFBZSxjQUFFLEdBQVEsT0FBQyxJQUFJLDBCQUFLLEdBQWlCLFVBQUMsR0FBQyxRQUFFLEVBQUU7Ozs7d0NBQzFELEdBQW1CLFVBQUMsR0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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

import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_slots, C as globals, e as element, a as space, t as text, f as claim_element, g as children, b as detach_dev, c as claim_space, h as claim_text, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, D as set_input_value, E as run_all, F as listen_dev, G as prevent_default, H as to_number, n as noop } from './client.66e71a20.js';

/* src/routes/new_sessions/workout/new_workout.svelte generated by Svelte v3.22.3 */

const { console: console_1 } = globals;
const file = "src/routes/new_sessions/workout/new_workout.svelte";

function create_fragment(ctx) {
	let div18;
	let div0;
	let img;
	let img_src_value;
	let t0;
	let div17;
	let div1;
	let t1;
	let t2;
	let div16;
	let form;
	let div3;
	let label0;
	let t3;
	let t4;
	let div2;
	let input0;
	let t5;
	let br0;
	let t6;
	let label1;
	let t7;
	let t8;
	let div6;
	let label2;
	let t9;
	let t10;
	let div4;
	let input1;
	let t11;
	let div5;
	let input2;
	let t12;
	let br1;
	let t13;
	let div9;
	let label3;
	let t14;
	let t15;
	let div7;
	let input3;
	let t16;
	let div8;
	let input4;
	let t17;
	let br2;
	let t18;
	let div12;
	let label4;
	let t19;
	let t20;
	let div10;
	let input5;
	let t21;
	let div11;
	let input6;
	let t22;
	let br3;
	let t23;
	let div14;
	let div13;
	let button;
	let t24;
	let t25;
	let br4;
	let t26;
	let div15;
	let dispose;

	const block = {
		c: function create() {
			div18 = element("div");
			div0 = element("div");
			img = element("img");
			t0 = space();
			div17 = element("div");
			div1 = element("div");
			t1 = text("Workout New Session");
			t2 = space();
			div16 = element("div");
			form = element("form");
			div3 = element("div");
			label0 = element("label");
			t3 = text("Date");
			t4 = space();
			div2 = element("div");
			input0 = element("input");
			t5 = space();
			br0 = element("br");
			t6 = space();
			label1 = element("label");
			t7 = text("Legs");
			t8 = space();
			div6 = element("div");
			label2 = element("label");
			t9 = text("Squats");
			t10 = space();
			div4 = element("div");
			input1 = element("input");
			t11 = space();
			div5 = element("div");
			input2 = element("input");
			t12 = space();
			br1 = element("br");
			t13 = space();
			div9 = element("div");
			label3 = element("label");
			t14 = text("Squats");
			t15 = space();
			div7 = element("div");
			input3 = element("input");
			t16 = space();
			div8 = element("div");
			input4 = element("input");
			t17 = space();
			br2 = element("br");
			t18 = space();
			div12 = element("div");
			label4 = element("label");
			t19 = text("Stair Climbs");
			t20 = space();
			div10 = element("div");
			input5 = element("input");
			t21 = space();
			div11 = element("div");
			input6 = element("input");
			t22 = space();
			br3 = element("br");
			t23 = space();
			div14 = element("div");
			div13 = element("div");
			button = element("button");
			t24 = text("Add Session");
			t25 = space();
			br4 = element("br");
			t26 = space();
			div15 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			div18 = claim_element(nodes, "DIV", { class: true });
			var div18_nodes = children(div18);
			div0 = claim_element(div18_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { class: true, src: true, alt: true });
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(div18_nodes);
			div17 = claim_element(div18_nodes, "DIV", { class: true });
			var div17_nodes = children(div17);
			div1 = claim_element(div17_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t1 = claim_text(div1_nodes, "Workout New Session");
			div1_nodes.forEach(detach_dev);
			t2 = claim_space(div17_nodes);
			div16 = claim_element(div17_nodes, "DIV", { class: true });
			var div16_nodes = children(div16);
			form = claim_element(div16_nodes, "FORM", {});
			var form_nodes = children(form);
			div3 = claim_element(form_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			label0 = claim_element(div3_nodes, "LABEL", { for: true, class: true });
			var label0_nodes = children(label0);
			t3 = claim_text(label0_nodes, "Date");
			label0_nodes.forEach(detach_dev);
			t4 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);

			input0 = claim_element(div2_nodes, "INPUT", {
				placeholder: true,
				required: true,
				type: true,
				id: true,
				class: true
			});

			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t5 = claim_space(form_nodes);
			br0 = claim_element(form_nodes, "BR", {});
			t6 = claim_space(form_nodes);
			label1 = claim_element(form_nodes, "LABEL", { class: true });
			var label1_nodes = children(label1);
			t7 = claim_text(label1_nodes, "Legs");
			label1_nodes.forEach(detach_dev);
			t8 = claim_space(form_nodes);
			div6 = claim_element(form_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			label2 = claim_element(div6_nodes, "LABEL", { class: true });
			var label2_nodes = children(label2);
			t9 = claim_text(label2_nodes, "Squats");
			label2_nodes.forEach(detach_dev);
			t10 = claim_space(div6_nodes);
			div4 = claim_element(div6_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);

			input1 = claim_element(div4_nodes, "INPUT", {
				placeholder: true,
				type: true,
				class: true
			});

			div4_nodes.forEach(detach_dev);
			t11 = claim_space(div6_nodes);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);

			input2 = claim_element(div5_nodes, "INPUT", {
				placeholder: true,
				type: true,
				class: true
			});

			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t12 = claim_space(form_nodes);
			br1 = claim_element(form_nodes, "BR", {});
			t13 = claim_space(form_nodes);
			div9 = claim_element(form_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			label3 = claim_element(div9_nodes, "LABEL", { class: true });
			var label3_nodes = children(label3);
			t14 = claim_text(label3_nodes, "Squats");
			label3_nodes.forEach(detach_dev);
			t15 = claim_space(div9_nodes);
			div7 = claim_element(div9_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);

			input3 = claim_element(div7_nodes, "INPUT", {
				placeholder: true,
				type: true,
				class: true
			});

			div7_nodes.forEach(detach_dev);
			t16 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);

			input4 = claim_element(div8_nodes, "INPUT", {
				placeholder: true,
				type: true,
				class: true
			});

			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			t17 = claim_space(form_nodes);
			br2 = claim_element(form_nodes, "BR", {});
			t18 = claim_space(form_nodes);
			div12 = claim_element(form_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			label4 = claim_element(div12_nodes, "LABEL", { class: true });
			var label4_nodes = children(label4);
			t19 = claim_text(label4_nodes, "Stair Climbs");
			label4_nodes.forEach(detach_dev);
			t20 = claim_space(div12_nodes);
			div10 = claim_element(div12_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);

			input5 = claim_element(div10_nodes, "INPUT", {
				placeholder: true,
				type: true,
				class: true
			});

			div10_nodes.forEach(detach_dev);
			t21 = claim_space(div12_nodes);
			div11 = claim_element(div12_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);

			input6 = claim_element(div11_nodes, "INPUT", {
				placeholder: true,
				type: true,
				class: true
			});

			div11_nodes.forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			t22 = claim_space(form_nodes);
			br3 = claim_element(form_nodes, "BR", {});
			t23 = claim_space(form_nodes);
			div14 = claim_element(form_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			div13 = claim_element(div14_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			button = claim_element(div13_nodes, "BUTTON", { type: true, class: true });
			var button_nodes = children(button);
			t24 = claim_text(button_nodes, "Add Session");
			button_nodes.forEach(detach_dev);
			div13_nodes.forEach(detach_dev);
			div14_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			t25 = claim_space(div16_nodes);
			br4 = claim_element(div16_nodes, "BR", {});
			t26 = claim_space(div16_nodes);
			div15 = claim_element(div16_nodes, "DIV", { id: true });
			var div15_nodes = children(div15);
			div15_nodes.forEach(detach_dev);
			div16_nodes.forEach(detach_dev);
			div17_nodes.forEach(detach_dev);
			div18_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(img, "class", "w-full");
			if (img.src !== (img_src_value = "workout_draw.png")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "cycling");
			add_location(img, file, 111, 4, 4368);
			attr_dev(div0, "class", " w-1/3 p-4");
			add_location(div0, file, 108, 2, 4272);
			attr_dev(div1, "class", "block uppercase text-center p-2 text-2xl font-semibold mb-5");
			add_location(div1, file, 116, 2, 4504);
			attr_dev(label0, "for", "date");
			attr_dev(label0, "class", "block uppercase tracking-wide text-grey-darker text-xs font-bold m-2 p-2");
			add_location(label0, file, 128, 16, 4901);
			attr_dev(input0, "placeholder", "date");
			input0.required = true;
			attr_dev(input0, "type", "date");
			attr_dev(input0, "id", "date");
			attr_dev(input0, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded p-2 m-2");
			add_location(input0, file, 132, 21, 5105);
			attr_dev(div2, "class", "flex-1");
			add_location(div2, file, 131, 16, 5063);
			attr_dev(div3, "class", "flex");
			add_location(div3, file, 127, 12, 4866);
			add_location(br0, file, 135, 12, 5345);
			attr_dev(label1, "class", "block uppercase p-2 tracking-wide text-grey-darker text-xl font-bold m-2");
			add_location(label1, file, 137, 12, 5365);
			attr_dev(label2, "class", "block uppercase p-2 tracking-wide text-grey-darker text-xs font-bold m-3");
			add_location(label2, file, 141, 16, 5535);
			attr_dev(input1, "placeholder", "series");
			attr_dev(input1, "type", "number");
			attr_dev(input1, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded p-2");
			add_location(input1, file, 145, 20, 5741);
			attr_dev(div4, "class", "flex w-1/2 m-2");
			add_location(div4, file, 144, 16, 5692);
			attr_dev(input2, "placeholder", "repetitions");
			attr_dev(input2, "type", "number");
			attr_dev(input2, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded p-2");
			add_location(input2, file, 148, 20, 6000);
			attr_dev(div5, "class", "flex w-1/2 m-2");
			add_location(div5, file, 147, 16, 5951);
			attr_dev(div6, "class", "flex");
			add_location(div6, file, 140, 12, 5500);
			add_location(br1, file, 152, 12, 6224);
			attr_dev(label3, "class", "block uppercase p-2 tracking-wide text-grey-darker text-xs font-bold m-3");
			add_location(label3, file, 156, 16, 6280);
			attr_dev(input3, "placeholder", "series");
			attr_dev(input3, "type", "number");
			attr_dev(input3, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded p-2");
			add_location(input3, file, 160, 20, 6486);
			attr_dev(div7, "class", "flex w-1/2 m-2");
			add_location(div7, file, 159, 16, 6437);
			attr_dev(input4, "placeholder", "repetitions");
			attr_dev(input4, "type", "number");
			attr_dev(input4, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded p-2");
			add_location(input4, file, 163, 20, 6752);
			attr_dev(div8, "class", "flex w-1/2 m-2");
			add_location(div8, file, 162, 16, 6703);
			attr_dev(div9, "class", "flex");
			add_location(div9, file, 155, 12, 6245);
			add_location(br2, file, 167, 12, 6983);
			attr_dev(label4, "class", "block uppercase p-2 tracking-wide text-grey-darker text-xs font-bold m-3");
			add_location(label4, file, 170, 16, 7050);
			attr_dev(input5, "placeholder", "series");
			attr_dev(input5, "type", "number");
			attr_dev(input5, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded p-2");
			add_location(input5, file, 174, 20, 7262);
			attr_dev(div10, "class", "flex w-1/2 m-2");
			add_location(div10, file, 173, 16, 7213);
			attr_dev(input6, "placeholder", "repetitions");
			attr_dev(input6, "type", "number");
			attr_dev(input6, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded p-2");
			add_location(input6, file, 177, 20, 7534);
			attr_dev(div11, "class", "flex w-1/2 m-2");
			add_location(div11, file, 176, 16, 7485);
			attr_dev(div12, "class", "flex");
			add_location(div12, file, 169, 24, 7015);
			add_location(br3, file, 181, 12, 7771);
			attr_dev(button, "type", "submit");
			attr_dev(button, "class", "bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded");
			add_location(button, file, 187, 8, 7858);
			attr_dev(div13, "class", "flex");
			add_location(div13, file, 186, 8, 7831);
			attr_dev(div14, "class", "flex justify-center");
			add_location(div14, file, 185, 8, 7789);
			add_location(form, file, 120, 8, 4644);
			add_location(br4, file, 195, 12, 8139);
			attr_dev(div15, "id", "add_to_me");
			add_location(div15, file, 199, 8, 8157);
			attr_dev(div16, "class", " p-2");
			add_location(div16, file, 119, 4, 4617);
			attr_dev(div17, "class", "flex-initial w-2/3 p-2");
			add_location(div17, file, 115, 2, 4465);
			attr_dev(div18, "class", "flex ");
			add_location(div18, file, 107, 0, 4250);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div18, anchor);
			append_dev(div18, div0);
			append_dev(div0, img);
			append_dev(div18, t0);
			append_dev(div18, div17);
			append_dev(div17, div1);
			append_dev(div1, t1);
			append_dev(div17, t2);
			append_dev(div17, div16);
			append_dev(div16, form);
			append_dev(form, div3);
			append_dev(div3, label0);
			append_dev(label0, t3);
			append_dev(div3, t4);
			append_dev(div3, div2);
			append_dev(div2, input0);
			set_input_value(input0, /*date*/ ctx[0]);
			append_dev(form, t5);
			append_dev(form, br0);
			append_dev(form, t6);
			append_dev(form, label1);
			append_dev(label1, t7);
			append_dev(form, t8);
			append_dev(form, div6);
			append_dev(div6, label2);
			append_dev(label2, t9);
			append_dev(div6, t10);
			append_dev(div6, div4);
			append_dev(div4, input1);
			set_input_value(input1, /*meters*/ ctx[1]);
			append_dev(div6, t11);
			append_dev(div6, div5);
			append_dev(div5, input2);
			set_input_value(input2, /*meters*/ ctx[1]);
			append_dev(form, t12);
			append_dev(form, br1);
			append_dev(form, t13);
			append_dev(form, div9);
			append_dev(div9, label3);
			append_dev(label3, t14);
			append_dev(div9, t15);
			append_dev(div9, div7);
			append_dev(div7, input3);
			set_input_value(input3, /*squats_series*/ ctx[2]);
			append_dev(div9, t16);
			append_dev(div9, div8);
			append_dev(div8, input4);
			set_input_value(input4, /*squats_number*/ ctx[4]);
			append_dev(form, t17);
			append_dev(form, br2);
			append_dev(form, t18);
			append_dev(form, div12);
			append_dev(div12, label4);
			append_dev(label4, t19);
			append_dev(div12, t20);
			append_dev(div12, div10);
			append_dev(div10, input5);
			set_input_value(input5, /*stair_climbs_series*/ ctx[3]);
			append_dev(div12, t21);
			append_dev(div12, div11);
			append_dev(div11, input6);
			set_input_value(input6, /*stair_climbs_number*/ ctx[5]);
			append_dev(form, t22);
			append_dev(form, br3);
			append_dev(form, t23);
			append_dev(form, div14);
			append_dev(div14, div13);
			append_dev(div13, button);
			append_dev(button, t24);
			append_dev(div16, t25);
			append_dev(div16, br4);
			append_dev(div16, t26);
			append_dev(div16, div15);
			if (remount) run_all(dispose);

			dispose = [
				listen_dev(input0, "input", /*input0_input_handler*/ ctx[39]),
				listen_dev(input1, "input", /*input1_input_handler*/ ctx[40]),
				listen_dev(input2, "input", /*input2_input_handler*/ ctx[41]),
				listen_dev(input3, "input", /*input3_input_handler*/ ctx[42]),
				listen_dev(input4, "input", /*input4_input_handler*/ ctx[43]),
				listen_dev(input5, "input", /*input5_input_handler*/ ctx[44]),
				listen_dev(input6, "input", /*input6_input_handler*/ ctx[45]),
				listen_dev(form, "submit", prevent_default(/*handleSubmit*/ ctx[6]), false, true, false),
				listen_dev(form, "invalid", /*validateMessageEmail*/ ctx[7], false, false, false),
				listen_dev(form, "changed", /*validateMessageEmail*/ ctx[7], false, false, false),
				listen_dev(form, "input", /*validateMessageEmail*/ ctx[7], false, false, false)
			];
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*date*/ 1) {
				set_input_value(input0, /*date*/ ctx[0]);
			}

			if (dirty[0] & /*meters*/ 2 && to_number(input1.value) !== /*meters*/ ctx[1]) {
				set_input_value(input1, /*meters*/ ctx[1]);
			}

			if (dirty[0] & /*meters*/ 2 && to_number(input2.value) !== /*meters*/ ctx[1]) {
				set_input_value(input2, /*meters*/ ctx[1]);
			}

			if (dirty[0] & /*squats_series*/ 4 && to_number(input3.value) !== /*squats_series*/ ctx[2]) {
				set_input_value(input3, /*squats_series*/ ctx[2]);
			}

			if (dirty[0] & /*squats_number*/ 16 && to_number(input4.value) !== /*squats_number*/ ctx[4]) {
				set_input_value(input4, /*squats_number*/ ctx[4]);
			}

			if (dirty[0] & /*stair_climbs_series*/ 8 && to_number(input5.value) !== /*stair_climbs_series*/ ctx[3]) {
				set_input_value(input5, /*stair_climbs_series*/ ctx[3]);
			}

			if (dirty[0] & /*stair_climbs_number*/ 32 && to_number(input6.value) !== /*stair_climbs_number*/ ctx[5]) {
				set_input_value(input6, /*stair_climbs_number*/ ctx[5]);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div18);
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload({ params, query }) {
	return this.fetch(`new_sessions/workout.json`).then(r => r.json()).then(options => {
		return { options };
	});
}

function instance($$self, $$props, $$invalidate) {
	let sport = "workout";
	let date = null, meters = null, minutes = null, elevation = null;
	let error_boolean = false;
	let squats_series = null;
	let stair_climbs_series = null;
	let bench_climbs_series = null;
	let leg_press_series = null;
	let pushups_series = null;
	let pushups_lateral_series = null;
	let pushups_jumping_series = null;
	let pushups_closing_series = null;
	let pushups_raised_series = null;
	let abdominal_series = null;
	let abdominal_lateral_series = null;
	let abdominal_core_series = null;
	let bench_series = null;
	let biceps_weight_series = null;
	let pullups_series = null;
	let squats_number = null;
	let stair_climbs_number = null;
	let bench_climbs_number = null;
	let leg_press_number = null;
	let pushups_number = null;
	let pushups_lateral_number = null;
	let pushups_jumping_number = null;
	let pushups_closing_number = null;
	let pushups_raised_number = null;
	let abdominal_number = null;
	let abdominal_lateral_number = null;
	let abdominal_core_number = null;
	let bench_number = null;
	let biceps_weight_number = null;
	let pullups_number = null;

	const workout_exercise = [
		{
			"name": "Squats",
			"features": ["Series", "Number"],
			"group": "Legs"
		},
		{
			"name": "Stair Climbs",
			"features": ["Series", "Number"],
			"group": "Legs"
		},
		{
			"name": "Bench Climbs",
			"features": ["Series", "Number"],
			"group": "Legs"
		},
		{
			"name": "Leg Press",
			"features": ["Series", "Number"],
			"group": "Legs"
		},
		{
			"name": "Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Lateral Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Jumping Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Close Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Raised Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Abdominal",
			"features": ["Series", "Number"],
			"group": "Abdominals"
		},
		{
			"name": "Abdominal Lateral",
			"features": ["Series", "Number"],
			"group": "Abdominals"
		},
		{
			"name": "Core Abdominal",
			"features": ["Series", "Number"],
			"group": "Abdominals"
		},
		{
			"name": "Bench",
			"features": ["Series", "Number"],
			"group": "Weight"
		},
		{
			"name": "Biceps Weight",
			"features": ["Series", "Number"],
			"group": "Weight"
		},
		{
			"name": "Pull-Ups",
			"features": ["Series", "Number"],
			"group": "Pull-Ups"
		}
	];

	async function handleSubmit(event) {
		const post = { sport, date, meters, minutes, elevation };

		await fetch(`new_sessions.json`, {
			method: "POST",
			headers: { "Content-type": "application/json" },
			body: JSON.stringify(post)
		});

		document.getElementById("add_to_me").innerHTML += "<div class='bg-teal-100 border-t-4 border-teal-500 rounded-b text-teal-900 px-4 py-3 shadow-md' role='alert'><div class='flex'><div class='py-1'><svg class='fill-current h-6 w-6 text-teal-500 mr-4' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path d='M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z'/></svg></div><div><p class='font-bold'>Session was successfully added</p></div></div></div><br/>";

		if (response.ok) {
			const result = await response.json();
			console.log("result", result);
		}
	}

	function validateMessageEmail(event) {
		let textbox = event.target;
		error_boolean = false;

		if (textbox.value === "") {
			textbox.setCustomValidity("Number required");
		} else if (textbox.validity.typeMismatch) {
			error_boolean = true;
			textbox.setCustomValidity("please enter a valid input");
		} else {
			textbox.setCustomValidity("");
		}

		return true;
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<New_workout> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("New_workout", $$slots, []);

	function input0_input_handler() {
		date = this.value;
		$$invalidate(0, date);
	}

	function input1_input_handler() {
		meters = to_number(this.value);
		$$invalidate(1, meters);
	}

	function input2_input_handler() {
		meters = to_number(this.value);
		$$invalidate(1, meters);
	}

	function input3_input_handler() {
		squats_series = to_number(this.value);
		$$invalidate(2, squats_series);
	}

	function input4_input_handler() {
		squats_number = to_number(this.value);
		$$invalidate(4, squats_number);
	}

	function input5_input_handler() {
		stair_climbs_series = to_number(this.value);
		$$invalidate(3, stair_climbs_series);
	}

	function input6_input_handler() {
		stair_climbs_number = to_number(this.value);
		$$invalidate(5, stair_climbs_number);
	}

	$$self.$capture_state = () => ({
		preload,
		sport,
		date,
		meters,
		minutes,
		elevation,
		error_boolean,
		squats_series,
		stair_climbs_series,
		bench_climbs_series,
		leg_press_series,
		pushups_series,
		pushups_lateral_series,
		pushups_jumping_series,
		pushups_closing_series,
		pushups_raised_series,
		abdominal_series,
		abdominal_lateral_series,
		abdominal_core_series,
		bench_series,
		biceps_weight_series,
		pullups_series,
		squats_number,
		stair_climbs_number,
		bench_climbs_number,
		leg_press_number,
		pushups_number,
		pushups_lateral_number,
		pushups_jumping_number,
		pushups_closing_number,
		pushups_raised_number,
		abdominal_number,
		abdominal_lateral_number,
		abdominal_core_number,
		bench_number,
		biceps_weight_number,
		pullups_number,
		workout_exercise,
		handleSubmit,
		validateMessageEmail
	});

	$$self.$inject_state = $$props => {
		if ("sport" in $$props) sport = $$props.sport;
		if ("date" in $$props) $$invalidate(0, date = $$props.date);
		if ("meters" in $$props) $$invalidate(1, meters = $$props.meters);
		if ("minutes" in $$props) minutes = $$props.minutes;
		if ("elevation" in $$props) elevation = $$props.elevation;
		if ("error_boolean" in $$props) error_boolean = $$props.error_boolean;
		if ("squats_series" in $$props) $$invalidate(2, squats_series = $$props.squats_series);
		if ("stair_climbs_series" in $$props) $$invalidate(3, stair_climbs_series = $$props.stair_climbs_series);
		if ("bench_climbs_series" in $$props) bench_climbs_series = $$props.bench_climbs_series;
		if ("leg_press_series" in $$props) leg_press_series = $$props.leg_press_series;
		if ("pushups_series" in $$props) pushups_series = $$props.pushups_series;
		if ("pushups_lateral_series" in $$props) pushups_lateral_series = $$props.pushups_lateral_series;
		if ("pushups_jumping_series" in $$props) pushups_jumping_series = $$props.pushups_jumping_series;
		if ("pushups_closing_series" in $$props) pushups_closing_series = $$props.pushups_closing_series;
		if ("pushups_raised_series" in $$props) pushups_raised_series = $$props.pushups_raised_series;
		if ("abdominal_series" in $$props) abdominal_series = $$props.abdominal_series;
		if ("abdominal_lateral_series" in $$props) abdominal_lateral_series = $$props.abdominal_lateral_series;
		if ("abdominal_core_series" in $$props) abdominal_core_series = $$props.abdominal_core_series;
		if ("bench_series" in $$props) bench_series = $$props.bench_series;
		if ("biceps_weight_series" in $$props) biceps_weight_series = $$props.biceps_weight_series;
		if ("pullups_series" in $$props) pullups_series = $$props.pullups_series;
		if ("squats_number" in $$props) $$invalidate(4, squats_number = $$props.squats_number);
		if ("stair_climbs_number" in $$props) $$invalidate(5, stair_climbs_number = $$props.stair_climbs_number);
		if ("bench_climbs_number" in $$props) bench_climbs_number = $$props.bench_climbs_number;
		if ("leg_press_number" in $$props) leg_press_number = $$props.leg_press_number;
		if ("pushups_number" in $$props) pushups_number = $$props.pushups_number;
		if ("pushups_lateral_number" in $$props) pushups_lateral_number = $$props.pushups_lateral_number;
		if ("pushups_jumping_number" in $$props) pushups_jumping_number = $$props.pushups_jumping_number;
		if ("pushups_closing_number" in $$props) pushups_closing_number = $$props.pushups_closing_number;
		if ("pushups_raised_number" in $$props) pushups_raised_number = $$props.pushups_raised_number;
		if ("abdominal_number" in $$props) abdominal_number = $$props.abdominal_number;
		if ("abdominal_lateral_number" in $$props) abdominal_lateral_number = $$props.abdominal_lateral_number;
		if ("abdominal_core_number" in $$props) abdominal_core_number = $$props.abdominal_core_number;
		if ("bench_number" in $$props) bench_number = $$props.bench_number;
		if ("biceps_weight_number" in $$props) biceps_weight_number = $$props.biceps_weight_number;
		if ("pullups_number" in $$props) pullups_number = $$props.pullups_number;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		date,
		meters,
		squats_series,
		stair_climbs_series,
		squats_number,
		stair_climbs_number,
		handleSubmit,
		validateMessageEmail,
		error_boolean,
		sport,
		minutes,
		elevation,
		bench_climbs_series,
		leg_press_series,
		pushups_series,
		pushups_lateral_series,
		pushups_jumping_series,
		pushups_closing_series,
		pushups_raised_series,
		abdominal_series,
		abdominal_lateral_series,
		abdominal_core_series,
		bench_series,
		biceps_weight_series,
		pullups_series,
		bench_climbs_number,
		leg_press_number,
		pushups_number,
		pushups_lateral_number,
		pushups_jumping_number,
		pushups_closing_number,
		pushups_raised_number,
		abdominal_number,
		abdominal_lateral_number,
		abdominal_core_number,
		bench_number,
		biceps_weight_number,
		pullups_number,
		workout_exercise,
		input0_input_handler,
		input1_input_handler,
		input2_input_handler,
		input3_input_handler,
		input4_input_handler,
		input5_input_handler,
		input6_input_handler
	];
}

class New_workout extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {}, [-1, -1]);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "New_workout",
			options,
			id: create_fragment.name
		});
	}
}

export default New_workout;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

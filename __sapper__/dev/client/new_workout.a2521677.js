import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_slots, C as globals, e as element, a as space, t as text, f as claim_element, g as children, b as detach_dev, c as claim_space, h as claim_text, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, D as set_input_value, E as run_all, F as listen_dev, G as prevent_default, H as to_number, n as noop } from './client.081614e9.js';

/* src/routes/new_sessions/workout/new_workout.svelte generated by Svelte v3.22.3 */

const { console: console_1 } = globals;
const file = "src/routes/new_sessions/workout/new_workout.svelte";

function create_fragment(ctx) {
	let div10;
	let div0;
	let img;
	let img_src_value;
	let t0;
	let div9;
	let div1;
	let t1;
	let t2;
	let div8;
	let form;
	let div3;
	let label0;
	let t3;
	let t4;
	let div2;
	let input0;
	let t5;
	let label1;
	let t6;
	let t7;
	let input1;
	let t8;
	let br0;
	let t9;
	let label2;
	let t10;
	let t11;
	let div6;
	let label3;
	let t12;
	let t13;
	let div4;
	let input2;
	let t14;
	let div5;
	let input3;
	let t15;
	let br1;
	let t16;
	let label4;
	let t17;
	let t18;
	let input4;
	let t19;
	let br2;
	let t20;
	let label5;
	let t21;
	let t22;
	let input5;
	let t23;
	let br3;
	let t24;
	let label6;
	let t25;
	let t26;
	let input6;
	let t27;
	let br4;
	let t28;
	let label7;
	let t29;
	let t30;
	let input7;
	let t31;
	let br5;
	let t32;
	let label8;
	let t33;
	let t34;
	let input8;
	let t35;
	let br6;
	let t36;
	let label9;
	let t37;
	let t38;
	let input9;
	let t39;
	let br7;
	let t40;
	let button;
	let t41;
	let t42;
	let br8;
	let t43;
	let div7;
	let dispose;

	const block = {
		c: function create() {
			div10 = element("div");
			div0 = element("div");
			img = element("img");
			t0 = space();
			div9 = element("div");
			div1 = element("div");
			t1 = text("Workout New Session");
			t2 = space();
			div8 = element("div");
			form = element("form");
			div3 = element("div");
			label0 = element("label");
			t3 = text("Date");
			t4 = space();
			div2 = element("div");
			input0 = element("input");
			t5 = space();
			label1 = element("label");
			t6 = text("Date");
			t7 = space();
			input1 = element("input");
			t8 = space();
			br0 = element("br");
			t9 = space();
			label2 = element("label");
			t10 = text("Legs");
			t11 = space();
			div6 = element("div");
			label3 = element("label");
			t12 = text("Squats");
			t13 = space();
			div4 = element("div");
			input2 = element("input");
			t14 = space();
			div5 = element("div");
			input3 = element("input");
			t15 = space();
			br1 = element("br");
			t16 = space();
			label4 = element("label");
			t17 = text("Distance (m)");
			t18 = space();
			input4 = element("input");
			t19 = space();
			br2 = element("br");
			t20 = space();
			label5 = element("label");
			t21 = text("Distance (m)");
			t22 = space();
			input5 = element("input");
			t23 = space();
			br3 = element("br");
			t24 = space();
			label6 = element("label");
			t25 = text("Distance (m)");
			t26 = space();
			input6 = element("input");
			t27 = space();
			br4 = element("br");
			t28 = space();
			label7 = element("label");
			t29 = text("Distance (m)");
			t30 = space();
			input7 = element("input");
			t31 = space();
			br5 = element("br");
			t32 = space();
			label8 = element("label");
			t33 = text("Minutes");
			t34 = space();
			input8 = element("input");
			t35 = space();
			br6 = element("br");
			t36 = space();
			label9 = element("label");
			t37 = text("Elevation (m)");
			t38 = space();
			input9 = element("input");
			t39 = space();
			br7 = element("br");
			t40 = space();
			button = element("button");
			t41 = text("Add Session");
			t42 = space();
			br8 = element("br");
			t43 = space();
			div7 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			div10 = claim_element(nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			div0 = claim_element(div10_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { class: true, src: true, alt: true });
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(div10_nodes);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div1 = claim_element(div9_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t1 = claim_text(div1_nodes, "Workout New Session");
			div1_nodes.forEach(detach_dev);
			t2 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			form = claim_element(div8_nodes, "FORM", {});
			var form_nodes = children(form);
			div3 = claim_element(form_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			label0 = claim_element(div3_nodes, "LABEL", { for: true, class: true });
			var label0_nodes = children(label0);
			t3 = claim_text(label0_nodes, "Date");
			label0_nodes.forEach(detach_dev);
			t4 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", {});
			var div2_nodes = children(div2);

			input0 = claim_element(div2_nodes, "INPUT", {
				placeholder: true,
				required: true,
				type: true,
				id: true,
				class: true
			});

			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t5 = claim_space(form_nodes);
			label1 = claim_element(form_nodes, "LABEL", { for: true, class: true });
			var label1_nodes = children(label1);
			t6 = claim_text(label1_nodes, "Date");
			label1_nodes.forEach(detach_dev);
			t7 = claim_space(form_nodes);

			input1 = claim_element(form_nodes, "INPUT", {
				placeholder: true,
				required: true,
				type: true,
				id: true,
				class: true
			});

			t8 = claim_space(form_nodes);
			br0 = claim_element(form_nodes, "BR", {});
			t9 = claim_space(form_nodes);
			label2 = claim_element(form_nodes, "LABEL", { class: true });
			var label2_nodes = children(label2);
			t10 = claim_text(label2_nodes, "Legs");
			label2_nodes.forEach(detach_dev);
			t11 = claim_space(form_nodes);
			div6 = claim_element(form_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			label3 = claim_element(div6_nodes, "LABEL", { class: true });
			var label3_nodes = children(label3);
			t12 = claim_text(label3_nodes, "Squats");
			label3_nodes.forEach(detach_dev);
			t13 = claim_space(div6_nodes);
			div4 = claim_element(div6_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);

			input2 = claim_element(div4_nodes, "INPUT", {
				placeholder: true,
				required: true,
				type: true,
				id: true,
				class: true
			});

			div4_nodes.forEach(detach_dev);
			t14 = claim_space(div6_nodes);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);

			input3 = claim_element(div5_nodes, "INPUT", {
				placeholder: true,
				required: true,
				type: true,
				id: true,
				class: true
			});

			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t15 = claim_space(form_nodes);
			br1 = claim_element(form_nodes, "BR", {});
			t16 = claim_space(form_nodes);
			label4 = claim_element(form_nodes, "LABEL", { for: true, class: true });
			var label4_nodes = children(label4);
			t17 = claim_text(label4_nodes, "Distance (m)");
			label4_nodes.forEach(detach_dev);
			t18 = claim_space(form_nodes);

			input4 = claim_element(form_nodes, "INPUT", {
				placeholder: true,
				required: true,
				type: true,
				id: true,
				class: true
			});

			t19 = claim_space(form_nodes);
			br2 = claim_element(form_nodes, "BR", {});
			t20 = claim_space(form_nodes);
			label5 = claim_element(form_nodes, "LABEL", { for: true, class: true });
			var label5_nodes = children(label5);
			t21 = claim_text(label5_nodes, "Distance (m)");
			label5_nodes.forEach(detach_dev);
			t22 = claim_space(form_nodes);

			input5 = claim_element(form_nodes, "INPUT", {
				placeholder: true,
				required: true,
				type: true,
				id: true,
				class: true
			});

			t23 = claim_space(form_nodes);
			br3 = claim_element(form_nodes, "BR", {});
			t24 = claim_space(form_nodes);
			label6 = claim_element(form_nodes, "LABEL", { for: true, class: true });
			var label6_nodes = children(label6);
			t25 = claim_text(label6_nodes, "Distance (m)");
			label6_nodes.forEach(detach_dev);
			t26 = claim_space(form_nodes);

			input6 = claim_element(form_nodes, "INPUT", {
				placeholder: true,
				required: true,
				type: true,
				id: true,
				class: true
			});

			t27 = claim_space(form_nodes);
			br4 = claim_element(form_nodes, "BR", {});
			t28 = claim_space(form_nodes);
			label7 = claim_element(form_nodes, "LABEL", { for: true, class: true });
			var label7_nodes = children(label7);
			t29 = claim_text(label7_nodes, "Distance (m)");
			label7_nodes.forEach(detach_dev);
			t30 = claim_space(form_nodes);

			input7 = claim_element(form_nodes, "INPUT", {
				placeholder: true,
				required: true,
				type: true,
				id: true,
				class: true
			});

			t31 = claim_space(form_nodes);
			br5 = claim_element(form_nodes, "BR", {});
			t32 = claim_space(form_nodes);
			label8 = claim_element(form_nodes, "LABEL", { for: true, class: true });
			var label8_nodes = children(label8);
			t33 = claim_text(label8_nodes, "Minutes");
			label8_nodes.forEach(detach_dev);
			t34 = claim_space(form_nodes);

			input8 = claim_element(form_nodes, "INPUT", {
				placeholder: true,
				required: true,
				type: true,
				id: true,
				class: true
			});

			t35 = claim_space(form_nodes);
			br6 = claim_element(form_nodes, "BR", {});
			t36 = claim_space(form_nodes);
			label9 = claim_element(form_nodes, "LABEL", { for: true, class: true });
			var label9_nodes = children(label9);
			t37 = claim_text(label9_nodes, "Elevation (m)");
			label9_nodes.forEach(detach_dev);
			t38 = claim_space(form_nodes);

			input9 = claim_element(form_nodes, "INPUT", {
				placeholder: true,
				required: true,
				type: true,
				id: true,
				class: true
			});

			t39 = claim_space(form_nodes);
			br7 = claim_element(form_nodes, "BR", {});
			t40 = claim_space(form_nodes);
			button = claim_element(form_nodes, "BUTTON", { type: true, class: true });
			var button_nodes = children(button);
			t41 = claim_text(button_nodes, "Add Session");
			button_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			t42 = claim_space(div8_nodes);
			br8 = claim_element(div8_nodes, "BR", {});
			t43 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { id: true });
			var div7_nodes = children(div7);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(img, "class", "w-full");
			if (img.src !== (img_src_value = "workout_draw.png")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "cycling");
			add_location(img, file, 111, 4, 4368);
			attr_dev(div0, "class", " w-1/3 p-4");
			add_location(div0, file, 108, 2, 4272);
			attr_dev(div1, "class", "block uppercase text-center p-2 text-2xl font-semibold");
			add_location(div1, file, 116, 2, 4504);
			attr_dev(label0, "for", "date");
			attr_dev(label0, "class", "block uppercase tracking-wide text-grey-darker text-xs font-bold m-3");
			add_location(label0, file, 128, 16, 4896);
			attr_dev(input0, "placeholder", "date");
			input0.required = true;
			attr_dev(input0, "type", "date");
			attr_dev(input0, "id", "date");
			attr_dev(input0, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3");
			add_location(input0, file, 133, 21, 5091);
			add_location(div2, file, 132, 16, 5063);
			attr_dev(div3, "class", "flex");
			add_location(div3, file, 127, 12, 4861);
			attr_dev(label1, "for", "date");
			attr_dev(label1, "class", "block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2");
			add_location(label1, file, 141, 12, 5350);
			attr_dev(input1, "placeholder", "date");
			input1.required = true;
			attr_dev(input1, "type", "date");
			attr_dev(input1, "id", "date");
			attr_dev(input1, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3");
			add_location(input1, file, 144, 12, 5497);
			add_location(br0, file, 145, 12, 5697);
			attr_dev(label2, "class", "block uppercase p-4 tracking-wide text-grey-darker text-xl font-bold mb-2");
			add_location(label2, file, 147, 12, 5717);
			attr_dev(label3, "class", "block uppercase p-2 tracking-wide text-grey-darker text-xs font-bold m-3");
			add_location(label3, file, 151, 16, 5888);
			attr_dev(input2, "placeholder", "meters");
			input2.required = true;
			attr_dev(input2, "type", "number");
			attr_dev(input2, "id", "meters");
			attr_dev(input2, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded p-2");
			add_location(input2, file, 155, 20, 6094);
			attr_dev(div4, "class", "flex w-1/2 m-3");
			add_location(div4, file, 154, 16, 6045);
			attr_dev(input3, "placeholder", "meters");
			input3.required = true;
			attr_dev(input3, "type", "number");
			attr_dev(input3, "id", "meters");
			attr_dev(input3, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded p-2");
			add_location(input3, file, 160, 20, 6377);
			attr_dev(div5, "class", "flex w-1/2 m-3");
			add_location(div5, file, 159, 16, 6328);
			attr_dev(div6, "class", "flex");
			add_location(div6, file, 150, 12, 5853);
			add_location(br1, file, 167, 11, 6619);
			attr_dev(label4, "for", "meters");
			attr_dev(label4, "class", "block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2");
			add_location(label4, file, 168, 8, 6634);
			attr_dev(input4, "placeholder", "meters");
			input4.required = true;
			attr_dev(input4, "type", "number");
			attr_dev(input4, "id", "meters");
			attr_dev(input4, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3");
			add_location(input4, file, 173, 8, 6773);
			add_location(br2, file, 174, 12, 6981);
			attr_dev(label5, "for", "meters");
			attr_dev(label5, "class", "block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2");
			add_location(label5, file, 175, 8, 6996);
			attr_dev(input5, "placeholder", "meters");
			input5.required = true;
			attr_dev(input5, "type", "number");
			attr_dev(input5, "id", "meters");
			attr_dev(input5, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3");
			add_location(input5, file, 177, 8, 7132);
			add_location(br3, file, 178, 12, 7340);
			attr_dev(label6, "for", "meters");
			attr_dev(label6, "class", "block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2");
			add_location(label6, file, 179, 8, 7355);
			attr_dev(input6, "placeholder", "meters");
			input6.required = true;
			attr_dev(input6, "type", "number");
			attr_dev(input6, "id", "meters");
			attr_dev(input6, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3");
			add_location(input6, file, 181, 8, 7491);
			add_location(br4, file, 182, 12, 7699);
			attr_dev(label7, "for", "meters");
			attr_dev(label7, "class", "block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2");
			add_location(label7, file, 184, 8, 7715);
			attr_dev(input7, "placeholder", "meters");
			input7.required = true;
			attr_dev(input7, "type", "number");
			attr_dev(input7, "id", "meters");
			attr_dev(input7, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3");
			add_location(input7, file, 186, 8, 7851);
			add_location(br5, file, 187, 12, 8059);
			attr_dev(label8, "for", "minutes");
			attr_dev(label8, "class", "block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2");
			add_location(label8, file, 189, 8, 8075);
			attr_dev(input8, "placeholder", "minutes");
			input8.required = true;
			attr_dev(input8, "type", "number");
			attr_dev(input8, "id", "minutes");
			attr_dev(input8, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3");
			add_location(input8, file, 191, 8, 8207);
			add_location(br6, file, 192, 12, 8418);
			attr_dev(label9, "for", "elevation");
			attr_dev(label9, "class", "block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2");
			add_location(label9, file, 194, 8, 8434);
			attr_dev(input9, "placeholder", "elevation");
			input9.required = true;
			attr_dev(input9, "type", "number");
			attr_dev(input9, "id", "elevation");
			attr_dev(input9, "class", "appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3");
			add_location(input9, file, 196, 8, 8574);
			add_location(br7, file, 197, 12, 8791);
			attr_dev(button, "type", "submit");
			attr_dev(button, "class", "bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded");
			add_location(button, file, 199, 8, 8807);
			add_location(form, file, 120, 8, 4639);
			add_location(br8, file, 202, 12, 9039);
			attr_dev(div7, "id", "add_to_me");
			add_location(div7, file, 206, 8, 9057);
			attr_dev(div8, "class", " p-2");
			add_location(div8, file, 119, 4, 4612);
			attr_dev(div9, "class", "flex-initial w-2/3 p-2");
			add_location(div9, file, 115, 2, 4465);
			attr_dev(div10, "class", "flex ");
			add_location(div10, file, 107, 0, 4250);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div10, anchor);
			append_dev(div10, div0);
			append_dev(div0, img);
			append_dev(div10, t0);
			append_dev(div10, div9);
			append_dev(div9, div1);
			append_dev(div1, t1);
			append_dev(div9, t2);
			append_dev(div9, div8);
			append_dev(div8, form);
			append_dev(form, div3);
			append_dev(div3, label0);
			append_dev(label0, t3);
			append_dev(div3, t4);
			append_dev(div3, div2);
			append_dev(div2, input0);
			set_input_value(input0, /*date*/ ctx[0]);
			append_dev(form, t5);
			append_dev(form, label1);
			append_dev(label1, t6);
			append_dev(form, t7);
			append_dev(form, input1);
			set_input_value(input1, /*date*/ ctx[0]);
			append_dev(form, t8);
			append_dev(form, br0);
			append_dev(form, t9);
			append_dev(form, label2);
			append_dev(label2, t10);
			append_dev(form, t11);
			append_dev(form, div6);
			append_dev(div6, label3);
			append_dev(label3, t12);
			append_dev(div6, t13);
			append_dev(div6, div4);
			append_dev(div4, input2);
			set_input_value(input2, /*meters*/ ctx[1]);
			append_dev(div6, t14);
			append_dev(div6, div5);
			append_dev(div5, input3);
			set_input_value(input3, /*meters*/ ctx[1]);
			append_dev(form, t15);
			append_dev(form, br1);
			append_dev(form, t16);
			append_dev(form, label4);
			append_dev(label4, t17);
			append_dev(form, t18);
			append_dev(form, input4);
			set_input_value(input4, /*meters*/ ctx[1]);
			append_dev(form, t19);
			append_dev(form, br2);
			append_dev(form, t20);
			append_dev(form, label5);
			append_dev(label5, t21);
			append_dev(form, t22);
			append_dev(form, input5);
			set_input_value(input5, /*meters*/ ctx[1]);
			append_dev(form, t23);
			append_dev(form, br3);
			append_dev(form, t24);
			append_dev(form, label6);
			append_dev(label6, t25);
			append_dev(form, t26);
			append_dev(form, input6);
			set_input_value(input6, /*meters*/ ctx[1]);
			append_dev(form, t27);
			append_dev(form, br4);
			append_dev(form, t28);
			append_dev(form, label7);
			append_dev(label7, t29);
			append_dev(form, t30);
			append_dev(form, input7);
			set_input_value(input7, /*meters*/ ctx[1]);
			append_dev(form, t31);
			append_dev(form, br5);
			append_dev(form, t32);
			append_dev(form, label8);
			append_dev(label8, t33);
			append_dev(form, t34);
			append_dev(form, input8);
			set_input_value(input8, /*minutes*/ ctx[2]);
			append_dev(form, t35);
			append_dev(form, br6);
			append_dev(form, t36);
			append_dev(form, label9);
			append_dev(label9, t37);
			append_dev(form, t38);
			append_dev(form, input9);
			set_input_value(input9, /*elevation*/ ctx[3]);
			append_dev(form, t39);
			append_dev(form, br7);
			append_dev(form, t40);
			append_dev(form, button);
			append_dev(button, t41);
			append_dev(div8, t42);
			append_dev(div8, br8);
			append_dev(div8, t43);
			append_dev(div8, div7);
			if (remount) run_all(dispose);

			dispose = [
				listen_dev(input0, "input", /*input0_input_handler*/ ctx[39]),
				listen_dev(input1, "input", /*input1_input_handler*/ ctx[40]),
				listen_dev(input2, "input", /*input2_input_handler*/ ctx[41]),
				listen_dev(input3, "input", /*input3_input_handler*/ ctx[42]),
				listen_dev(input4, "input", /*input4_input_handler*/ ctx[43]),
				listen_dev(input5, "input", /*input5_input_handler*/ ctx[44]),
				listen_dev(input6, "input", /*input6_input_handler*/ ctx[45]),
				listen_dev(input7, "input", /*input7_input_handler*/ ctx[46]),
				listen_dev(input8, "input", /*input8_input_handler*/ ctx[47]),
				listen_dev(input9, "input", /*input9_input_handler*/ ctx[48]),
				listen_dev(form, "submit", prevent_default(/*handleSubmit*/ ctx[4]), false, true, false),
				listen_dev(form, "invalid", /*validateMessageEmail*/ ctx[5], false, false, false),
				listen_dev(form, "changed", /*validateMessageEmail*/ ctx[5], false, false, false),
				listen_dev(form, "input", /*validateMessageEmail*/ ctx[5], false, false, false)
			];
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*date*/ 1) {
				set_input_value(input0, /*date*/ ctx[0]);
			}

			if (dirty[0] & /*date*/ 1) {
				set_input_value(input1, /*date*/ ctx[0]);
			}

			if (dirty[0] & /*meters*/ 2 && to_number(input2.value) !== /*meters*/ ctx[1]) {
				set_input_value(input2, /*meters*/ ctx[1]);
			}

			if (dirty[0] & /*meters*/ 2 && to_number(input3.value) !== /*meters*/ ctx[1]) {
				set_input_value(input3, /*meters*/ ctx[1]);
			}

			if (dirty[0] & /*meters*/ 2 && to_number(input4.value) !== /*meters*/ ctx[1]) {
				set_input_value(input4, /*meters*/ ctx[1]);
			}

			if (dirty[0] & /*meters*/ 2 && to_number(input5.value) !== /*meters*/ ctx[1]) {
				set_input_value(input5, /*meters*/ ctx[1]);
			}

			if (dirty[0] & /*meters*/ 2 && to_number(input6.value) !== /*meters*/ ctx[1]) {
				set_input_value(input6, /*meters*/ ctx[1]);
			}

			if (dirty[0] & /*meters*/ 2 && to_number(input7.value) !== /*meters*/ ctx[1]) {
				set_input_value(input7, /*meters*/ ctx[1]);
			}

			if (dirty[0] & /*minutes*/ 4 && to_number(input8.value) !== /*minutes*/ ctx[2]) {
				set_input_value(input8, /*minutes*/ ctx[2]);
			}

			if (dirty[0] & /*elevation*/ 8 && to_number(input9.value) !== /*elevation*/ ctx[3]) {
				set_input_value(input9, /*elevation*/ ctx[3]);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div10);
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload({ params, query }) {
	return this.fetch(`new_sessions/workout.json`).then(r => r.json()).then(options => {
		return { options };
	});
}

function instance($$self, $$props, $$invalidate) {
	let sport = "workout";
	let date = null, meters = null, minutes = null, elevation = null;
	let error_boolean = false;
	let squats_series = null;
	let stair_climbs_series = null;
	let bench_climbs_series = null;
	let leg_press_series = null;
	let pushups_series = null;
	let pushups_lateral_series = null;
	let pushups_jumping_series = null;
	let pushups_closing_series = null;
	let pushups_raised_series = null;
	let abdominal_series = null;
	let abdominal_lateral_series = null;
	let abdominal_core_series = null;
	let bench_series = null;
	let biceps_weight_series = null;
	let pullups_series = null;
	let squats_number = null;
	let stair_climbs_number = null;
	let bench_climbs_number = null;
	let leg_press_number = null;
	let pushups_number = null;
	let pushups_lateral_number = null;
	let pushups_jumping_number = null;
	let pushups_closing_number = null;
	let pushups_raised_number = null;
	let abdominal_number = null;
	let abdominal_lateral_number = null;
	let abdominal_core_number = null;
	let bench_number = null;
	let biceps_weight_number = null;
	let pullups_number = null;

	const workout_exercise = [
		{
			"name": "Squats",
			"features": ["Series", "Number"],
			"group": "Legs"
		},
		{
			"name": "Stair Climbs",
			"features": ["Series", "Number"],
			"group": "Legs"
		},
		{
			"name": "Bench Climbs",
			"features": ["Series", "Number"],
			"group": "Legs"
		},
		{
			"name": "Leg Press",
			"features": ["Series", "Number"],
			"group": "Legs"
		},
		{
			"name": "Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Lateral Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Jumping Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Close Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Raised Push-Ups",
			"features": ["Series", "Number"],
			"group": "Push-Ups"
		},
		{
			"name": "Abdominal",
			"features": ["Series", "Number"],
			"group": "Abdominals"
		},
		{
			"name": "Abdominal Lateral",
			"features": ["Series", "Number"],
			"group": "Abdominals"
		},
		{
			"name": "Core Abdominal",
			"features": ["Series", "Number"],
			"group": "Abdominals"
		},
		{
			"name": "Bench",
			"features": ["Series", "Number"],
			"group": "Weight"
		},
		{
			"name": "Biceps Weight",
			"features": ["Series", "Number"],
			"group": "Weight"
		},
		{
			"name": "Pull-Ups",
			"features": ["Series", "Number"],
			"group": "Pull-Ups"
		}
	];

	async function handleSubmit(event) {
		const post = { sport, date, meters, minutes, elevation };

		await fetch(`new_sessions.json`, {
			method: "POST",
			headers: { "Content-type": "application/json" },
			body: JSON.stringify(post)
		});

		document.getElementById("add_to_me").innerHTML += "<div class='bg-teal-100 border-t-4 border-teal-500 rounded-b text-teal-900 px-4 py-3 shadow-md' role='alert'><div class='flex'><div class='py-1'><svg class='fill-current h-6 w-6 text-teal-500 mr-4' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path d='M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z'/></svg></div><div><p class='font-bold'>Session was successfully added</p></div></div></div><br/>";

		if (response.ok) {
			const result = await response.json();
			console.log("result", result);
		}
	}

	function validateMessageEmail(event) {
		let textbox = event.target;
		error_boolean = false;

		if (textbox.value === "") {
			textbox.setCustomValidity("Number required");
		} else if (textbox.validity.typeMismatch) {
			error_boolean = true;
			textbox.setCustomValidity("please enter a valid input");
		} else {
			textbox.setCustomValidity("");
		}

		return true;
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<New_workout> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("New_workout", $$slots, []);

	function input0_input_handler() {
		date = this.value;
		$$invalidate(0, date);
	}

	function input1_input_handler() {
		date = this.value;
		$$invalidate(0, date);
	}

	function input2_input_handler() {
		meters = to_number(this.value);
		$$invalidate(1, meters);
	}

	function input3_input_handler() {
		meters = to_number(this.value);
		$$invalidate(1, meters);
	}

	function input4_input_handler() {
		meters = to_number(this.value);
		$$invalidate(1, meters);
	}

	function input5_input_handler() {
		meters = to_number(this.value);
		$$invalidate(1, meters);
	}

	function input6_input_handler() {
		meters = to_number(this.value);
		$$invalidate(1, meters);
	}

	function input7_input_handler() {
		meters = to_number(this.value);
		$$invalidate(1, meters);
	}

	function input8_input_handler() {
		minutes = to_number(this.value);
		$$invalidate(2, minutes);
	}

	function input9_input_handler() {
		elevation = to_number(this.value);
		$$invalidate(3, elevation);
	}

	$$self.$capture_state = () => ({
		preload,
		sport,
		date,
		meters,
		minutes,
		elevation,
		error_boolean,
		squats_series,
		stair_climbs_series,
		bench_climbs_series,
		leg_press_series,
		pushups_series,
		pushups_lateral_series,
		pushups_jumping_series,
		pushups_closing_series,
		pushups_raised_series,
		abdominal_series,
		abdominal_lateral_series,
		abdominal_core_series,
		bench_series,
		biceps_weight_series,
		pullups_series,
		squats_number,
		stair_climbs_number,
		bench_climbs_number,
		leg_press_number,
		pushups_number,
		pushups_lateral_number,
		pushups_jumping_number,
		pushups_closing_number,
		pushups_raised_number,
		abdominal_number,
		abdominal_lateral_number,
		abdominal_core_number,
		bench_number,
		biceps_weight_number,
		pullups_number,
		workout_exercise,
		handleSubmit,
		validateMessageEmail
	});

	$$self.$inject_state = $$props => {
		if ("sport" in $$props) sport = $$props.sport;
		if ("date" in $$props) $$invalidate(0, date = $$props.date);
		if ("meters" in $$props) $$invalidate(1, meters = $$props.meters);
		if ("minutes" in $$props) $$invalidate(2, minutes = $$props.minutes);
		if ("elevation" in $$props) $$invalidate(3, elevation = $$props.elevation);
		if ("error_boolean" in $$props) error_boolean = $$props.error_boolean;
		if ("squats_series" in $$props) squats_series = $$props.squats_series;
		if ("stair_climbs_series" in $$props) stair_climbs_series = $$props.stair_climbs_series;
		if ("bench_climbs_series" in $$props) bench_climbs_series = $$props.bench_climbs_series;
		if ("leg_press_series" in $$props) leg_press_series = $$props.leg_press_series;
		if ("pushups_series" in $$props) pushups_series = $$props.pushups_series;
		if ("pushups_lateral_series" in $$props) pushups_lateral_series = $$props.pushups_lateral_series;
		if ("pushups_jumping_series" in $$props) pushups_jumping_series = $$props.pushups_jumping_series;
		if ("pushups_closing_series" in $$props) pushups_closing_series = $$props.pushups_closing_series;
		if ("pushups_raised_series" in $$props) pushups_raised_series = $$props.pushups_raised_series;
		if ("abdominal_series" in $$props) abdominal_series = $$props.abdominal_series;
		if ("abdominal_lateral_series" in $$props) abdominal_lateral_series = $$props.abdominal_lateral_series;
		if ("abdominal_core_series" in $$props) abdominal_core_series = $$props.abdominal_core_series;
		if ("bench_series" in $$props) bench_series = $$props.bench_series;
		if ("biceps_weight_series" in $$props) biceps_weight_series = $$props.biceps_weight_series;
		if ("pullups_series" in $$props) pullups_series = $$props.pullups_series;
		if ("squats_number" in $$props) squats_number = $$props.squats_number;
		if ("stair_climbs_number" in $$props) stair_climbs_number = $$props.stair_climbs_number;
		if ("bench_climbs_number" in $$props) bench_climbs_number = $$props.bench_climbs_number;
		if ("leg_press_number" in $$props) leg_press_number = $$props.leg_press_number;
		if ("pushups_number" in $$props) pushups_number = $$props.pushups_number;
		if ("pushups_lateral_number" in $$props) pushups_lateral_number = $$props.pushups_lateral_number;
		if ("pushups_jumping_number" in $$props) pushups_jumping_number = $$props.pushups_jumping_number;
		if ("pushups_closing_number" in $$props) pushups_closing_number = $$props.pushups_closing_number;
		if ("pushups_raised_number" in $$props) pushups_raised_number = $$props.pushups_raised_number;
		if ("abdominal_number" in $$props) abdominal_number = $$props.abdominal_number;
		if ("abdominal_lateral_number" in $$props) abdominal_lateral_number = $$props.abdominal_lateral_number;
		if ("abdominal_core_number" in $$props) abdominal_core_number = $$props.abdominal_core_number;
		if ("bench_number" in $$props) bench_number = $$props.bench_number;
		if ("biceps_weight_number" in $$props) biceps_weight_number = $$props.biceps_weight_number;
		if ("pullups_number" in $$props) pullups_number = $$props.pullups_number;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		date,
		meters,
		minutes,
		elevation,
		handleSubmit,
		validateMessageEmail,
		error_boolean,
		sport,
		squats_series,
		stair_climbs_series,
		bench_climbs_series,
		leg_press_series,
		pushups_series,
		pushups_lateral_series,
		pushups_jumping_series,
		pushups_closing_series,
		pushups_raised_series,
		abdominal_series,
		abdominal_lateral_series,
		abdominal_core_series,
		bench_series,
		biceps_weight_series,
		pullups_series,
		squats_number,
		stair_climbs_number,
		bench_climbs_number,
		leg_press_number,
		pushups_number,
		pushups_lateral_number,
		pushups_jumping_number,
		pushups_closing_number,
		pushups_raised_number,
		abdominal_number,
		abdominal_lateral_number,
		abdominal_core_number,
		bench_number,
		biceps_weight_number,
		pullups_number,
		workout_exercise,
		input0_input_handler,
		input1_input_handler,
		input2_input_handler,
		input3_input_handler,
		input4_input_handler,
		input5_input_handler,
		input6_input_handler,
		input7_input_handler,
		input8_input_handler,
		input9_input_handler
	];
}

class New_workout extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {}, [-1, -1]);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "New_workout",
			options,
			id: create_fragment.name
		});
	}
}

export default New_workout;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

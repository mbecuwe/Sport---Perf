import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_slots, e as element, t as text, a as space, w as create_component, f as claim_element, g as children, h as claim_text, b as detach_dev, c as claim_space, x as claim_component, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, y as mount_component, n as noop, z as transition_in, A as transition_out, B as destroy_component } from './client.be696510.js';
import './_commonjsHelpers.1e235def.js';
import './Chart.b2015135.js';
import Cycling_charts from './cycling-charts.e6a824fe.js';

/* src/routes/sports/cycling/cycling.svelte generated by Svelte v3.22.3 */
const file = "src/routes/sports/cycling/cycling.svelte";

function create_fragment(ctx) {
	let div4;
	let div1;
	let div0;
	let t0;
	let t1;
	let div3;
	let div2;
	let img;
	let img_src_value;
	let t2;
	let div5;
	let t3;
	let lu;
	let li0;
	let t4;
	let t5;
	let li1;
	let t6;
	let t7;
	let div6;
	let table0;
	let thead0;
	let tr0;
	let th0;
	let t8;
	let t9;
	let th1;
	let t10;
	let t11;
	let th2;
	let t12;
	let t13;
	let th3;
	let t14;
	let t15;
	let tbody0;
	let tr1;
	let td0;
	let t16;
	let t17;
	let td1;
	let t18;
	let t19;
	let td2;
	let t20;
	let t21;
	let td3;
	let t22;
	let t23;
	let t24;
	let td4;
	let t25;
	let t26;
	let td5;
	let t27;
	let t28;
	let t29;
	let tr2;
	let td6;
	let t30;
	let t31;
	let td7;
	let t32;
	let t33;
	let td8;
	let t34;
	let t35;
	let td9;
	let t36;
	let t37;
	let t38;
	let td10;
	let t39;
	let t40;
	let td11;
	let t41;
	let t42;
	let t43;
	let tr3;
	let td12;
	let t44;
	let t45;
	let td13;
	let t46;
	let t47;
	let td14;
	let t48;
	let t49;
	let td15;
	let t50;
	let t51;
	let t52;
	let td16;
	let t53;
	let t54;
	let td17;
	let t55;
	let t56;
	let t57;
	let div7;
	let h3;
	let t58;
	let t59;
	let t60;
	let div9;
	let t61;
	let div8;
	let table1;
	let thead1;
	let tr4;
	let th4;
	let t62;
	let t63;
	let th5;
	let t64;
	let t65;
	let th6;
	let t66;
	let t67;
	let th7;
	let t68;
	let t69;
	let tbody1;
	let tr5;
	let td18;
	let t70;
	let t71;
	let td19;
	let t72;
	let t73;
	let td20;
	let t74;
	let t75;
	let td21;
	let t76;
	let t77;
	let t78;
	let td22;
	let t79;
	let t80;
	let td23;
	let t81;
	let t82;
	let t83;
	let tr6;
	let td24;
	let t84;
	let t85;
	let td25;
	let t86;
	let t87;
	let td26;
	let t88;
	let t89;
	let td27;
	let t90;
	let t91;
	let t92;
	let td28;
	let t93;
	let t94;
	let td29;
	let t95;
	let t96;
	let t97;
	let tr7;
	let td30;
	let t98;
	let t99;
	let td31;
	let t100;
	let t101;
	let td32;
	let t102;
	let t103;
	let td33;
	let t104;
	let t105;
	let t106;
	let td34;
	let t107;
	let t108;
	let td35;
	let t109;
	let t110;
	let current;

	const charts = new Cycling_charts({
			props: { data: /*data*/ ctx[0] },
			$$inline: true
		});

	const block = {
		c: function create() {
			div4 = element("div");
			div1 = element("div");
			div0 = element("div");
			t0 = text("Cycling Performance");
			t1 = space();
			div3 = element("div");
			div2 = element("div");
			img = element("img");
			t2 = space();
			div5 = element("div");
			t3 = text("Your last sessions took place on: \n    ");
			lu = element("lu");
			li0 = element("li");
			t4 = text("yo");
			t5 = space();
			li1 = element("li");
			t6 = text("yo");
			t7 = space();
			div6 = element("div");
			table0 = element("table");
			thead0 = element("thead");
			tr0 = element("tr");
			th0 = element("th");
			t8 = text("Metrics");
			t9 = space();
			th1 = element("th");
			t10 = text("Value");
			t11 = space();
			th2 = element("th");
			t12 = text("vs. Last 3 sessions");
			t13 = space();
			th3 = element("th");
			t14 = text("vs. Last 10 sessions");
			t15 = space();
			tbody0 = element("tbody");
			tr1 = element("tr");
			td0 = element("td");
			t16 = text("Distance (m)");
			t17 = space();
			td1 = element("td");
			t18 = text(/*last_distance*/ ctx[1]);
			t19 = space();
			td2 = element("td");
			t20 = text(/*average_3_distance*/ ctx[4]);
			t21 = space();
			td3 = element("td");
			t22 = text(/*variation_3_distance*/ ctx[7]);
			t23 = text("%");
			t24 = space();
			td4 = element("td");
			t25 = text(/*average_10_distance*/ ctx[10]);
			t26 = space();
			td5 = element("td");
			t27 = text(/*variation_10_distance*/ ctx[13]);
			t28 = text("%");
			t29 = space();
			tr2 = element("tr");
			td6 = element("td");
			t30 = text("Speed (km/h)");
			t31 = space();
			td7 = element("td");
			t32 = text(/*last_speed*/ ctx[2]);
			t33 = space();
			td8 = element("td");
			t34 = text(/*average_3_speed*/ ctx[6]);
			t35 = space();
			td9 = element("td");
			t36 = text(/*variation_3_speed*/ ctx[8]);
			t37 = text("%");
			t38 = space();
			td10 = element("td");
			t39 = text(/*average_10_speed*/ ctx[12]);
			t40 = space();
			td11 = element("td");
			t41 = text(/*variation_10_speed*/ ctx[14]);
			t42 = text("%");
			t43 = space();
			tr3 = element("tr");
			td12 = element("td");
			t44 = text("Elevation (m)");
			t45 = space();
			td13 = element("td");
			t46 = text(/*last_elevation*/ ctx[3]);
			t47 = space();
			td14 = element("td");
			t48 = text(/*average_3_elevation*/ ctx[5]);
			t49 = space();
			td15 = element("td");
			t50 = text(/*variation_3_elevation*/ ctx[9]);
			t51 = text("%");
			t52 = space();
			td16 = element("td");
			t53 = text(/*average_10_elevation*/ ctx[11]);
			t54 = space();
			td17 = element("td");
			t55 = text(/*variation_10_elevation*/ ctx[15]);
			t56 = text("%");
			t57 = space();
			div7 = element("div");
			h3 = element("h3");
			t58 = text("See your evolution in this chart:");
			t59 = space();
			create_component(charts.$$.fragment);
			t60 = space();
			div9 = element("div");
			t61 = text("Get the data available in table\n\n\n");
			div8 = element("div");
			table1 = element("table");
			thead1 = element("thead");
			tr4 = element("tr");
			th4 = element("th");
			t62 = text("Metrics");
			t63 = space();
			th5 = element("th");
			t64 = text("Value");
			t65 = space();
			th6 = element("th");
			t66 = text("vs. Last 3 sessions");
			t67 = space();
			th7 = element("th");
			t68 = text("vs. Last 10 sessions");
			t69 = space();
			tbody1 = element("tbody");
			tr5 = element("tr");
			td18 = element("td");
			t70 = text("Distance (m)");
			t71 = space();
			td19 = element("td");
			t72 = text(/*last_distance*/ ctx[1]);
			t73 = space();
			td20 = element("td");
			t74 = text(/*average_3_distance*/ ctx[4]);
			t75 = space();
			td21 = element("td");
			t76 = text(/*variation_3_distance*/ ctx[7]);
			t77 = text("%");
			t78 = space();
			td22 = element("td");
			t79 = text(/*average_10_distance*/ ctx[10]);
			t80 = space();
			td23 = element("td");
			t81 = text(/*variation_10_distance*/ ctx[13]);
			t82 = text("%");
			t83 = space();
			tr6 = element("tr");
			td24 = element("td");
			t84 = text("Speed (km/h)");
			t85 = space();
			td25 = element("td");
			t86 = text(/*last_speed*/ ctx[2]);
			t87 = space();
			td26 = element("td");
			t88 = text(/*average_3_speed*/ ctx[6]);
			t89 = space();
			td27 = element("td");
			t90 = text(/*variation_3_speed*/ ctx[8]);
			t91 = text("%");
			t92 = space();
			td28 = element("td");
			t93 = text(/*average_10_speed*/ ctx[12]);
			t94 = space();
			td29 = element("td");
			t95 = text(/*variation_10_speed*/ ctx[14]);
			t96 = text("%");
			t97 = space();
			tr7 = element("tr");
			td30 = element("td");
			t98 = text("Elevation (m)");
			t99 = space();
			td31 = element("td");
			t100 = text(/*last_elevation*/ ctx[3]);
			t101 = space();
			td32 = element("td");
			t102 = text(/*average_3_elevation*/ ctx[5]);
			t103 = space();
			td33 = element("td");
			t104 = text(/*variation_3_elevation*/ ctx[9]);
			t105 = text("%");
			t106 = space();
			td34 = element("td");
			t107 = text(/*average_10_elevation*/ ctx[11]);
			t108 = space();
			td35 = element("td");
			t109 = text(/*variation_10_elevation*/ ctx[15]);
			t110 = text("%");
			this.h();
		},
		l: function claim(nodes) {
			div4 = claim_element(nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, "Cycling Performance");
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t1 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			img = claim_element(div2_nodes, "IMG", { src: true, alt: true });
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			div5 = claim_element(nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			t3 = claim_text(div5_nodes, "Your last sessions took place on: \n    ");
			lu = claim_element(div5_nodes, "LU", {});
			var lu_nodes = children(lu);
			li0 = claim_element(lu_nodes, "LI", {});
			var li0_nodes = children(li0);
			t4 = claim_text(li0_nodes, "yo");
			li0_nodes.forEach(detach_dev);
			t5 = claim_space(lu_nodes);
			li1 = claim_element(lu_nodes, "LI", {});
			var li1_nodes = children(li1);
			t6 = claim_text(li1_nodes, "yo");
			li1_nodes.forEach(detach_dev);
			lu_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t7 = claim_space(nodes);
			div6 = claim_element(nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			table0 = claim_element(div6_nodes, "TABLE", { class: true });
			var table0_nodes = children(table0);
			thead0 = claim_element(table0_nodes, "THEAD", {});
			var thead0_nodes = children(thead0);
			tr0 = claim_element(thead0_nodes, "TR", {});
			var tr0_nodes = children(tr0);
			th0 = claim_element(tr0_nodes, "TH", { class: true });
			var th0_nodes = children(th0);
			t8 = claim_text(th0_nodes, "Metrics");
			th0_nodes.forEach(detach_dev);
			t9 = claim_space(tr0_nodes);
			th1 = claim_element(tr0_nodes, "TH", { class: true });
			var th1_nodes = children(th1);
			t10 = claim_text(th1_nodes, "Value");
			th1_nodes.forEach(detach_dev);
			t11 = claim_space(tr0_nodes);
			th2 = claim_element(tr0_nodes, "TH", { colspan: true, class: true });
			var th2_nodes = children(th2);
			t12 = claim_text(th2_nodes, "vs. Last 3 sessions");
			th2_nodes.forEach(detach_dev);
			t13 = claim_space(tr0_nodes);
			th3 = claim_element(tr0_nodes, "TH", { colspan: true, class: true });
			var th3_nodes = children(th3);
			t14 = claim_text(th3_nodes, "vs. Last 10 sessions");
			th3_nodes.forEach(detach_dev);
			tr0_nodes.forEach(detach_dev);
			thead0_nodes.forEach(detach_dev);
			t15 = claim_space(table0_nodes);
			tbody0 = claim_element(table0_nodes, "TBODY", {});
			var tbody0_nodes = children(tbody0);
			tr1 = claim_element(tbody0_nodes, "TR", {});
			var tr1_nodes = children(tr1);
			td0 = claim_element(tr1_nodes, "TD", { class: true });
			var td0_nodes = children(td0);
			t16 = claim_text(td0_nodes, "Distance (m)");
			td0_nodes.forEach(detach_dev);
			t17 = claim_space(tr1_nodes);
			td1 = claim_element(tr1_nodes, "TD", { class: true });
			var td1_nodes = children(td1);
			t18 = claim_text(td1_nodes, /*last_distance*/ ctx[1]);
			td1_nodes.forEach(detach_dev);
			t19 = claim_space(tr1_nodes);
			td2 = claim_element(tr1_nodes, "TD", { class: true });
			var td2_nodes = children(td2);
			t20 = claim_text(td2_nodes, /*average_3_distance*/ ctx[4]);
			td2_nodes.forEach(detach_dev);
			t21 = claim_space(tr1_nodes);
			td3 = claim_element(tr1_nodes, "TD", { class: true });
			var td3_nodes = children(td3);
			t22 = claim_text(td3_nodes, /*variation_3_distance*/ ctx[7]);
			t23 = claim_text(td3_nodes, "%");
			td3_nodes.forEach(detach_dev);
			t24 = claim_space(tr1_nodes);
			td4 = claim_element(tr1_nodes, "TD", { class: true });
			var td4_nodes = children(td4);
			t25 = claim_text(td4_nodes, /*average_10_distance*/ ctx[10]);
			td4_nodes.forEach(detach_dev);
			t26 = claim_space(tr1_nodes);
			td5 = claim_element(tr1_nodes, "TD", { class: true });
			var td5_nodes = children(td5);
			t27 = claim_text(td5_nodes, /*variation_10_distance*/ ctx[13]);
			t28 = claim_text(td5_nodes, "%");
			td5_nodes.forEach(detach_dev);
			tr1_nodes.forEach(detach_dev);
			t29 = claim_space(tbody0_nodes);
			tr2 = claim_element(tbody0_nodes, "TR", { class: true });
			var tr2_nodes = children(tr2);
			td6 = claim_element(tr2_nodes, "TD", { class: true });
			var td6_nodes = children(td6);
			t30 = claim_text(td6_nodes, "Speed (km/h)");
			td6_nodes.forEach(detach_dev);
			t31 = claim_space(tr2_nodes);
			td7 = claim_element(tr2_nodes, "TD", { class: true });
			var td7_nodes = children(td7);
			t32 = claim_text(td7_nodes, /*last_speed*/ ctx[2]);
			td7_nodes.forEach(detach_dev);
			t33 = claim_space(tr2_nodes);
			td8 = claim_element(tr2_nodes, "TD", { class: true });
			var td8_nodes = children(td8);
			t34 = claim_text(td8_nodes, /*average_3_speed*/ ctx[6]);
			td8_nodes.forEach(detach_dev);
			t35 = claim_space(tr2_nodes);
			td9 = claim_element(tr2_nodes, "TD", { class: true });
			var td9_nodes = children(td9);
			t36 = claim_text(td9_nodes, /*variation_3_speed*/ ctx[8]);
			t37 = claim_text(td9_nodes, "%");
			td9_nodes.forEach(detach_dev);
			t38 = claim_space(tr2_nodes);
			td10 = claim_element(tr2_nodes, "TD", { class: true });
			var td10_nodes = children(td10);
			t39 = claim_text(td10_nodes, /*average_10_speed*/ ctx[12]);
			td10_nodes.forEach(detach_dev);
			t40 = claim_space(tr2_nodes);
			td11 = claim_element(tr2_nodes, "TD", { class: true });
			var td11_nodes = children(td11);
			t41 = claim_text(td11_nodes, /*variation_10_speed*/ ctx[14]);
			t42 = claim_text(td11_nodes, "%");
			td11_nodes.forEach(detach_dev);
			tr2_nodes.forEach(detach_dev);
			t43 = claim_space(tbody0_nodes);
			tr3 = claim_element(tbody0_nodes, "TR", {});
			var tr3_nodes = children(tr3);
			td12 = claim_element(tr3_nodes, "TD", { class: true });
			var td12_nodes = children(td12);
			t44 = claim_text(td12_nodes, "Elevation (m)");
			td12_nodes.forEach(detach_dev);
			t45 = claim_space(tr3_nodes);
			td13 = claim_element(tr3_nodes, "TD", { class: true });
			var td13_nodes = children(td13);
			t46 = claim_text(td13_nodes, /*last_elevation*/ ctx[3]);
			td13_nodes.forEach(detach_dev);
			t47 = claim_space(tr3_nodes);
			td14 = claim_element(tr3_nodes, "TD", { class: true });
			var td14_nodes = children(td14);
			t48 = claim_text(td14_nodes, /*average_3_elevation*/ ctx[5]);
			td14_nodes.forEach(detach_dev);
			t49 = claim_space(tr3_nodes);
			td15 = claim_element(tr3_nodes, "TD", { class: true });
			var td15_nodes = children(td15);
			t50 = claim_text(td15_nodes, /*variation_3_elevation*/ ctx[9]);
			t51 = claim_text(td15_nodes, "%");
			td15_nodes.forEach(detach_dev);
			t52 = claim_space(tr3_nodes);
			td16 = claim_element(tr3_nodes, "TD", { class: true });
			var td16_nodes = children(td16);
			t53 = claim_text(td16_nodes, /*average_10_elevation*/ ctx[11]);
			td16_nodes.forEach(detach_dev);
			t54 = claim_space(tr3_nodes);
			td17 = claim_element(tr3_nodes, "TD", { class: true });
			var td17_nodes = children(td17);
			t55 = claim_text(td17_nodes, /*variation_10_elevation*/ ctx[15]);
			t56 = claim_text(td17_nodes, "%");
			td17_nodes.forEach(detach_dev);
			tr3_nodes.forEach(detach_dev);
			tbody0_nodes.forEach(detach_dev);
			table0_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t57 = claim_space(nodes);
			div7 = claim_element(nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			h3 = claim_element(div7_nodes, "H3", {});
			var h3_nodes = children(h3);
			t58 = claim_text(h3_nodes, "See your evolution in this chart:");
			h3_nodes.forEach(detach_dev);
			t59 = claim_space(div7_nodes);
			claim_component(charts.$$.fragment, div7_nodes);
			div7_nodes.forEach(detach_dev);
			t60 = claim_space(nodes);
			div9 = claim_element(nodes, "DIV", {});
			var div9_nodes = children(div9);
			t61 = claim_text(div9_nodes, "Get the data available in table\n\n\n");
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			table1 = claim_element(div8_nodes, "TABLE", { class: true });
			var table1_nodes = children(table1);
			thead1 = claim_element(table1_nodes, "THEAD", {});
			var thead1_nodes = children(thead1);
			tr4 = claim_element(thead1_nodes, "TR", {});
			var tr4_nodes = children(tr4);
			th4 = claim_element(tr4_nodes, "TH", { class: true });
			var th4_nodes = children(th4);
			t62 = claim_text(th4_nodes, "Metrics");
			th4_nodes.forEach(detach_dev);
			t63 = claim_space(tr4_nodes);
			th5 = claim_element(tr4_nodes, "TH", { class: true });
			var th5_nodes = children(th5);
			t64 = claim_text(th5_nodes, "Value");
			th5_nodes.forEach(detach_dev);
			t65 = claim_space(tr4_nodes);
			th6 = claim_element(tr4_nodes, "TH", { colspan: true, class: true });
			var th6_nodes = children(th6);
			t66 = claim_text(th6_nodes, "vs. Last 3 sessions");
			th6_nodes.forEach(detach_dev);
			t67 = claim_space(tr4_nodes);
			th7 = claim_element(tr4_nodes, "TH", { colspan: true, class: true });
			var th7_nodes = children(th7);
			t68 = claim_text(th7_nodes, "vs. Last 10 sessions");
			th7_nodes.forEach(detach_dev);
			tr4_nodes.forEach(detach_dev);
			thead1_nodes.forEach(detach_dev);
			t69 = claim_space(table1_nodes);
			tbody1 = claim_element(table1_nodes, "TBODY", {});
			var tbody1_nodes = children(tbody1);
			tr5 = claim_element(tbody1_nodes, "TR", {});
			var tr5_nodes = children(tr5);
			td18 = claim_element(tr5_nodes, "TD", { class: true });
			var td18_nodes = children(td18);
			t70 = claim_text(td18_nodes, "Distance (m)");
			td18_nodes.forEach(detach_dev);
			t71 = claim_space(tr5_nodes);
			td19 = claim_element(tr5_nodes, "TD", { class: true });
			var td19_nodes = children(td19);
			t72 = claim_text(td19_nodes, /*last_distance*/ ctx[1]);
			td19_nodes.forEach(detach_dev);
			t73 = claim_space(tr5_nodes);
			td20 = claim_element(tr5_nodes, "TD", { class: true });
			var td20_nodes = children(td20);
			t74 = claim_text(td20_nodes, /*average_3_distance*/ ctx[4]);
			td20_nodes.forEach(detach_dev);
			t75 = claim_space(tr5_nodes);
			td21 = claim_element(tr5_nodes, "TD", { class: true });
			var td21_nodes = children(td21);
			t76 = claim_text(td21_nodes, /*variation_3_distance*/ ctx[7]);
			t77 = claim_text(td21_nodes, "%");
			td21_nodes.forEach(detach_dev);
			t78 = claim_space(tr5_nodes);
			td22 = claim_element(tr5_nodes, "TD", { class: true });
			var td22_nodes = children(td22);
			t79 = claim_text(td22_nodes, /*average_10_distance*/ ctx[10]);
			td22_nodes.forEach(detach_dev);
			t80 = claim_space(tr5_nodes);
			td23 = claim_element(tr5_nodes, "TD", { class: true });
			var td23_nodes = children(td23);
			t81 = claim_text(td23_nodes, /*variation_10_distance*/ ctx[13]);
			t82 = claim_text(td23_nodes, "%");
			td23_nodes.forEach(detach_dev);
			tr5_nodes.forEach(detach_dev);
			t83 = claim_space(tbody1_nodes);
			tr6 = claim_element(tbody1_nodes, "TR", { class: true });
			var tr6_nodes = children(tr6);
			td24 = claim_element(tr6_nodes, "TD", { class: true });
			var td24_nodes = children(td24);
			t84 = claim_text(td24_nodes, "Speed (km/h)");
			td24_nodes.forEach(detach_dev);
			t85 = claim_space(tr6_nodes);
			td25 = claim_element(tr6_nodes, "TD", { class: true });
			var td25_nodes = children(td25);
			t86 = claim_text(td25_nodes, /*last_speed*/ ctx[2]);
			td25_nodes.forEach(detach_dev);
			t87 = claim_space(tr6_nodes);
			td26 = claim_element(tr6_nodes, "TD", { class: true });
			var td26_nodes = children(td26);
			t88 = claim_text(td26_nodes, /*average_3_speed*/ ctx[6]);
			td26_nodes.forEach(detach_dev);
			t89 = claim_space(tr6_nodes);
			td27 = claim_element(tr6_nodes, "TD", { class: true });
			var td27_nodes = children(td27);
			t90 = claim_text(td27_nodes, /*variation_3_speed*/ ctx[8]);
			t91 = claim_text(td27_nodes, "%");
			td27_nodes.forEach(detach_dev);
			t92 = claim_space(tr6_nodes);
			td28 = claim_element(tr6_nodes, "TD", { class: true });
			var td28_nodes = children(td28);
			t93 = claim_text(td28_nodes, /*average_10_speed*/ ctx[12]);
			td28_nodes.forEach(detach_dev);
			t94 = claim_space(tr6_nodes);
			td29 = claim_element(tr6_nodes, "TD", { class: true });
			var td29_nodes = children(td29);
			t95 = claim_text(td29_nodes, /*variation_10_speed*/ ctx[14]);
			t96 = claim_text(td29_nodes, "%");
			td29_nodes.forEach(detach_dev);
			tr6_nodes.forEach(detach_dev);
			t97 = claim_space(tbody1_nodes);
			tr7 = claim_element(tbody1_nodes, "TR", {});
			var tr7_nodes = children(tr7);
			td30 = claim_element(tr7_nodes, "TD", { class: true });
			var td30_nodes = children(td30);
			t98 = claim_text(td30_nodes, "Elevation (m)");
			td30_nodes.forEach(detach_dev);
			t99 = claim_space(tr7_nodes);
			td31 = claim_element(tr7_nodes, "TD", { class: true });
			var td31_nodes = children(td31);
			t100 = claim_text(td31_nodes, /*last_elevation*/ ctx[3]);
			td31_nodes.forEach(detach_dev);
			t101 = claim_space(tr7_nodes);
			td32 = claim_element(tr7_nodes, "TD", { class: true });
			var td32_nodes = children(td32);
			t102 = claim_text(td32_nodes, /*average_3_elevation*/ ctx[5]);
			td32_nodes.forEach(detach_dev);
			t103 = claim_space(tr7_nodes);
			td33 = claim_element(tr7_nodes, "TD", { class: true });
			var td33_nodes = children(td33);
			t104 = claim_text(td33_nodes, /*variation_3_elevation*/ ctx[9]);
			t105 = claim_text(td33_nodes, "%");
			td33_nodes.forEach(detach_dev);
			t106 = claim_space(tr7_nodes);
			td34 = claim_element(tr7_nodes, "TD", { class: true });
			var td34_nodes = children(td34);
			t107 = claim_text(td34_nodes, /*average_10_elevation*/ ctx[11]);
			td34_nodes.forEach(detach_dev);
			t108 = claim_space(tr7_nodes);
			td35 = claim_element(tr7_nodes, "TD", { class: true });
			var td35_nodes = children(td35);
			t109 = claim_text(td35_nodes, /*variation_10_elevation*/ ctx[15]);
			t110 = claim_text(td35_nodes, "%");
			td35_nodes.forEach(detach_dev);
			tr7_nodes.forEach(detach_dev);
			tbody1_nodes.forEach(detach_dev);
			table1_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "text-center p-2 text-2xl font-semibold bg-gray-100");
			add_location(div0, file, 117, 4, 3300);
			attr_dev(div1, "class", "flex-initial w-2/3 p-2");
			add_location(div1, file, 116, 2, 3259);
			if (img.src !== (img_src_value = "cycling.jpg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "cycling");
			add_location(img, file, 123, 4, 3486);
			attr_dev(div2, "class", " text-right p-2");
			add_location(div2, file, 122, 4, 3452);
			attr_dev(div3, "class", "flex-initial w-1/3 p-2");
			add_location(div3, file, 121, 2, 3411);
			attr_dev(div4, "class", "flex h-48");
			add_location(div4, file, 115, 0, 3233);
			add_location(li0, file, 132, 4, 3621);
			add_location(li1, file, 133, 8, 3641);
			add_location(lu, file, 131, 4, 3612);
			attr_dev(div5, "class", "px-10");
			add_location(div5, file, 129, 0, 3553);
			attr_dev(th0, "class", "px-4 py-2");
			add_location(th0, file, 143, 8, 3769);
			attr_dev(th1, "class", "px-4 py-2");
			add_location(th1, file, 144, 8, 3812);
			attr_dev(th2, "colspan", "2");
			attr_dev(th2, "class", "px-4 py-2 ");
			add_location(th2, file, 145, 8, 3853);
			attr_dev(th3, "colspan", "2");
			attr_dev(th3, "class", "px-4 py-2");
			add_location(th3, file, 146, 8, 3919);
			add_location(tr0, file, 142, 8, 3756);
			add_location(thead0, file, 141, 4, 3740);
			attr_dev(td0, "class", "border px-4 py-2");
			add_location(td0, file, 151, 8, 4037);
			attr_dev(td1, "class", "border px-4 py-2");
			add_location(td1, file, 152, 8, 4092);
			attr_dev(td2, "class", "border px-4 py-2");
			add_location(td2, file, 153, 8, 4150);
			attr_dev(td3, "class", "border px-4 py-2");
			add_location(td3, file, 154, 8, 4213);
			attr_dev(td4, "class", "border px-4 py-2");
			add_location(td4, file, 155, 8, 4279);
			attr_dev(td5, "class", "border px-4 py-2");
			add_location(td5, file, 156, 8, 4343);
			add_location(tr1, file, 150, 8, 4024);
			attr_dev(td6, "class", "border px-4 py-2");
			add_location(td6, file, 159, 8, 4457);
			attr_dev(td7, "class", "border px-4 py-2");
			add_location(td7, file, 160, 8, 4512);
			attr_dev(td8, "class", "border px-4 py-2");
			add_location(td8, file, 161, 8, 4567);
			attr_dev(td9, "class", "border px-4 py-2");
			add_location(td9, file, 162, 8, 4627);
			attr_dev(td10, "class", "border px-4 py-2");
			add_location(td10, file, 163, 8, 4690);
			attr_dev(td11, "class", "border px-4 py-2");
			add_location(td11, file, 164, 8, 4751);
			attr_dev(tr2, "class", "bg-gray-100");
			add_location(tr2, file, 158, 8, 4424);
			attr_dev(td12, "class", "border px-4 py-2");
			add_location(td12, file, 167, 8, 4842);
			attr_dev(td13, "class", "border px-4 py-2");
			add_location(td13, file, 168, 8, 4898);
			attr_dev(td14, "class", "border px-4 py-2");
			add_location(td14, file, 169, 8, 4957);
			attr_dev(td15, "class", "border px-4 py-2");
			add_location(td15, file, 170, 8, 5021);
			attr_dev(td16, "class", "border px-4 py-2");
			add_location(td16, file, 171, 8, 5088);
			attr_dev(td17, "class", "border px-4 py-2");
			add_location(td17, file, 172, 8, 5153);
			add_location(tr3, file, 166, 8, 4829);
			add_location(tbody0, file, 149, 4, 4008);
			attr_dev(table0, "class", "table-auto text-center ");
			add_location(table0, file, 140, 4, 3696);
			attr_dev(div6, "class", "p-10");
			add_location(div6, file, 139, 0, 3673);
			add_location(h3, file, 182, 1, 5291);
			attr_dev(div7, "class", "px-10 py-5");
			add_location(div7, file, 181, 0, 5265);
			attr_dev(th4, "class", "px-4 py-2");
			add_location(th4, file, 194, 8, 5503);
			attr_dev(th5, "class", "px-4 py-2");
			add_location(th5, file, 195, 8, 5546);
			attr_dev(th6, "colspan", "2");
			attr_dev(th6, "class", "px-4 py-2 ");
			add_location(th6, file, 196, 8, 5587);
			attr_dev(th7, "colspan", "2");
			attr_dev(th7, "class", "px-4 py-2");
			add_location(th7, file, 197, 8, 5653);
			add_location(tr4, file, 193, 8, 5490);
			add_location(thead1, file, 192, 4, 5474);
			attr_dev(td18, "class", "border px-4 py-2");
			add_location(td18, file, 202, 8, 5771);
			attr_dev(td19, "class", "border px-4 py-2");
			add_location(td19, file, 203, 8, 5826);
			attr_dev(td20, "class", "border px-4 py-2");
			add_location(td20, file, 204, 8, 5884);
			attr_dev(td21, "class", "border px-4 py-2");
			add_location(td21, file, 205, 8, 5947);
			attr_dev(td22, "class", "border px-4 py-2");
			add_location(td22, file, 206, 8, 6013);
			attr_dev(td23, "class", "border px-4 py-2");
			add_location(td23, file, 207, 8, 6077);
			add_location(tr5, file, 201, 8, 5758);
			attr_dev(td24, "class", "border px-4 py-2");
			add_location(td24, file, 210, 8, 6191);
			attr_dev(td25, "class", "border px-4 py-2");
			add_location(td25, file, 211, 8, 6246);
			attr_dev(td26, "class", "border px-4 py-2");
			add_location(td26, file, 212, 8, 6301);
			attr_dev(td27, "class", "border px-4 py-2");
			add_location(td27, file, 213, 8, 6361);
			attr_dev(td28, "class", "border px-4 py-2");
			add_location(td28, file, 214, 8, 6424);
			attr_dev(td29, "class", "border px-4 py-2");
			add_location(td29, file, 215, 8, 6485);
			attr_dev(tr6, "class", "bg-gray-100");
			add_location(tr6, file, 209, 8, 6158);
			attr_dev(td30, "class", "border px-4 py-2");
			add_location(td30, file, 218, 8, 6576);
			attr_dev(td31, "class", "border px-4 py-2");
			add_location(td31, file, 219, 8, 6632);
			attr_dev(td32, "class", "border px-4 py-2");
			add_location(td32, file, 220, 8, 6691);
			attr_dev(td33, "class", "border px-4 py-2");
			add_location(td33, file, 221, 8, 6755);
			attr_dev(td34, "class", "border px-4 py-2");
			add_location(td34, file, 222, 8, 6822);
			attr_dev(td35, "class", "border px-4 py-2");
			add_location(td35, file, 223, 8, 6887);
			add_location(tr7, file, 217, 8, 6563);
			add_location(tbody1, file, 200, 4, 5742);
			attr_dev(table1, "class", "table-auto text-center ");
			add_location(table1, file, 191, 4, 5430);
			attr_dev(div8, "class", "p-10");
			add_location(div8, file, 190, 0, 5407);
			add_location(div9, file, 186, 0, 5367);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div4, anchor);
			append_dev(div4, div1);
			append_dev(div1, div0);
			append_dev(div0, t0);
			append_dev(div4, t1);
			append_dev(div4, div3);
			append_dev(div3, div2);
			append_dev(div2, img);
			insert_dev(target, t2, anchor);
			insert_dev(target, div5, anchor);
			append_dev(div5, t3);
			append_dev(div5, lu);
			append_dev(lu, li0);
			append_dev(li0, t4);
			append_dev(lu, t5);
			append_dev(lu, li1);
			append_dev(li1, t6);
			insert_dev(target, t7, anchor);
			insert_dev(target, div6, anchor);
			append_dev(div6, table0);
			append_dev(table0, thead0);
			append_dev(thead0, tr0);
			append_dev(tr0, th0);
			append_dev(th0, t8);
			append_dev(tr0, t9);
			append_dev(tr0, th1);
			append_dev(th1, t10);
			append_dev(tr0, t11);
			append_dev(tr0, th2);
			append_dev(th2, t12);
			append_dev(tr0, t13);
			append_dev(tr0, th3);
			append_dev(th3, t14);
			append_dev(table0, t15);
			append_dev(table0, tbody0);
			append_dev(tbody0, tr1);
			append_dev(tr1, td0);
			append_dev(td0, t16);
			append_dev(tr1, t17);
			append_dev(tr1, td1);
			append_dev(td1, t18);
			append_dev(tr1, t19);
			append_dev(tr1, td2);
			append_dev(td2, t20);
			append_dev(tr1, t21);
			append_dev(tr1, td3);
			append_dev(td3, t22);
			append_dev(td3, t23);
			append_dev(tr1, t24);
			append_dev(tr1, td4);
			append_dev(td4, t25);
			append_dev(tr1, t26);
			append_dev(tr1, td5);
			append_dev(td5, t27);
			append_dev(td5, t28);
			append_dev(tbody0, t29);
			append_dev(tbody0, tr2);
			append_dev(tr2, td6);
			append_dev(td6, t30);
			append_dev(tr2, t31);
			append_dev(tr2, td7);
			append_dev(td7, t32);
			append_dev(tr2, t33);
			append_dev(tr2, td8);
			append_dev(td8, t34);
			append_dev(tr2, t35);
			append_dev(tr2, td9);
			append_dev(td9, t36);
			append_dev(td9, t37);
			append_dev(tr2, t38);
			append_dev(tr2, td10);
			append_dev(td10, t39);
			append_dev(tr2, t40);
			append_dev(tr2, td11);
			append_dev(td11, t41);
			append_dev(td11, t42);
			append_dev(tbody0, t43);
			append_dev(tbody0, tr3);
			append_dev(tr3, td12);
			append_dev(td12, t44);
			append_dev(tr3, t45);
			append_dev(tr3, td13);
			append_dev(td13, t46);
			append_dev(tr3, t47);
			append_dev(tr3, td14);
			append_dev(td14, t48);
			append_dev(tr3, t49);
			append_dev(tr3, td15);
			append_dev(td15, t50);
			append_dev(td15, t51);
			append_dev(tr3, t52);
			append_dev(tr3, td16);
			append_dev(td16, t53);
			append_dev(tr3, t54);
			append_dev(tr3, td17);
			append_dev(td17, t55);
			append_dev(td17, t56);
			insert_dev(target, t57, anchor);
			insert_dev(target, div7, anchor);
			append_dev(div7, h3);
			append_dev(h3, t58);
			append_dev(div7, t59);
			mount_component(charts, div7, null);
			insert_dev(target, t60, anchor);
			insert_dev(target, div9, anchor);
			append_dev(div9, t61);
			append_dev(div9, div8);
			append_dev(div8, table1);
			append_dev(table1, thead1);
			append_dev(thead1, tr4);
			append_dev(tr4, th4);
			append_dev(th4, t62);
			append_dev(tr4, t63);
			append_dev(tr4, th5);
			append_dev(th5, t64);
			append_dev(tr4, t65);
			append_dev(tr4, th6);
			append_dev(th6, t66);
			append_dev(tr4, t67);
			append_dev(tr4, th7);
			append_dev(th7, t68);
			append_dev(table1, t69);
			append_dev(table1, tbody1);
			append_dev(tbody1, tr5);
			append_dev(tr5, td18);
			append_dev(td18, t70);
			append_dev(tr5, t71);
			append_dev(tr5, td19);
			append_dev(td19, t72);
			append_dev(tr5, t73);
			append_dev(tr5, td20);
			append_dev(td20, t74);
			append_dev(tr5, t75);
			append_dev(tr5, td21);
			append_dev(td21, t76);
			append_dev(td21, t77);
			append_dev(tr5, t78);
			append_dev(tr5, td22);
			append_dev(td22, t79);
			append_dev(tr5, t80);
			append_dev(tr5, td23);
			append_dev(td23, t81);
			append_dev(td23, t82);
			append_dev(tbody1, t83);
			append_dev(tbody1, tr6);
			append_dev(tr6, td24);
			append_dev(td24, t84);
			append_dev(tr6, t85);
			append_dev(tr6, td25);
			append_dev(td25, t86);
			append_dev(tr6, t87);
			append_dev(tr6, td26);
			append_dev(td26, t88);
			append_dev(tr6, t89);
			append_dev(tr6, td27);
			append_dev(td27, t90);
			append_dev(td27, t91);
			append_dev(tr6, t92);
			append_dev(tr6, td28);
			append_dev(td28, t93);
			append_dev(tr6, t94);
			append_dev(tr6, td29);
			append_dev(td29, t95);
			append_dev(td29, t96);
			append_dev(tbody1, t97);
			append_dev(tbody1, tr7);
			append_dev(tr7, td30);
			append_dev(td30, t98);
			append_dev(tr7, t99);
			append_dev(tr7, td31);
			append_dev(td31, t100);
			append_dev(tr7, t101);
			append_dev(tr7, td32);
			append_dev(td32, t102);
			append_dev(tr7, t103);
			append_dev(tr7, td33);
			append_dev(td33, t104);
			append_dev(td33, t105);
			append_dev(tr7, t106);
			append_dev(tr7, td34);
			append_dev(td34, t107);
			append_dev(tr7, t108);
			append_dev(tr7, td35);
			append_dev(td35, t109);
			append_dev(td35, t110);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(charts.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(charts.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(div5);
			if (detaching) detach_dev(t7);
			if (detaching) detach_dev(div6);
			if (detaching) detach_dev(t57);
			if (detaching) detach_dev(div7);
			destroy_component(charts);
			if (detaching) detach_dev(t60);
			if (detaching) detach_dev(div9);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload({ params, query }) {
	return this.fetch(`sports/cycling.json`).then(r => r.json()).then(data_raw => {
		return { data_raw };
	});
}

const nb_displayed = 3;

function get_last_nb_sessions(int, list) {
	return list.slice(Math.max(list.length - int, 0));
}

function dividevector(a, b) {
	return a.map((e, i) => e / b[i]);
}

function variation(x_new, x_old) {
	const variation = Math.round((x_new - x_old) / x_old * 100);
	return variation;
}

function instance($$self, $$props, $$invalidate) {
	let { data_raw } = $$props;

	// Compute data for charts
	let list_meters = [];

	let list_date = [];
	let list_elevation = [];
	let list_minutes = [];

	data_raw.forEach(x => {
		list_meters.push(x.meters);
		list_date.push(x.date);
		list_elevation.push(x.elevation);
		list_minutes.push(x.minutes);
	});

	const data = {
		labels: list_date,
		datasets: [
			{
				label: "Meters covered",
				yAxisID: "Meters covered",
				data: list_meters,
				borderColor: "#3e95cd",
				fill: false
			},
			{
				label: "elevation",
				data: list_elevation,
				yAxisID: "elevation",
				borderColor: "#8e5ea2",
				fill: false
			}
		]
	};

	// TODO: verifiy ordering of dates and sessions
	const average = arr => arr.reduce((p, c) => p + c, 0) / arr.length;

	// Compute average distance, speed, elevation, 
	// Last session
	const last_distance = list_meters[list_meters.length - 1];

	const last_hours = list_minutes[list_minutes.length - 1] / 60;
	const last_speed = last_distance / 1000 / last_hours;
	const last_elevation = list_elevation[list_elevation.length - 1];

	// Last 3 sessions
	//const distance_3_session = list_meters.slice(Math.max(list_meters.length - 3, 0))
	const distance_3_session = get_last_nb_sessions(3, list_meters);

	const minutes_3_session = list_minutes.slice(Math.max(list_minutes.length - 3, 0));
	const elevation_3_session = list_elevation.slice(Math.max(list_elevation.length - 3, 0));
	const average_3_distance = average(distance_3_session);
	const average_3_elevation = average(elevation_3_session);
	const average_3_speed = average(dividevector(distance_3_session, minutes_3_session)) * 60 / 1000;
	const variation_3_distance = variation(last_distance, average_3_distance);
	const variation_3_speed = variation(last_speed, average_3_speed);
	const variation_3_elevation = variation(last_elevation, average_3_elevation);

	// Last 10 sessions
	const distance_10_session = list_meters.slice(Math.max(list_meters.length - 10, 0));

	const minutes_10_session = list_minutes.slice(Math.max(list_minutes.length - 10, 0));
	const elevation_10_session = list_elevation.slice(Math.max(list_elevation.length - 10, 0));
	const average_10_distance = average(distance_10_session);
	const average_10_elevation = average(elevation_10_session);
	const average_10_speed = average(dividevector(distance_10_session, minutes_10_session)) * 60 / 1000;
	const variation_10_distance = variation(last_distance, average_10_distance);
	const variation_10_speed = variation(last_speed, average_10_speed);
	const variation_10_elevation = variation(last_elevation, average_10_elevation);
	const writable_props = ["data_raw"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Cycling> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Cycling", $$slots, []);

	$$self.$set = $$props => {
		if ("data_raw" in $$props) $$invalidate(16, data_raw = $$props.data_raw);
	};

	$$self.$capture_state = () => ({
		preload,
		Charts: Cycling_charts,
		data_raw,
		list_meters,
		list_date,
		list_elevation,
		list_minutes,
		data,
		average,
		get_last_nb_sessions,
		dividevector,
		variation,
		last_distance,
		last_hours,
		last_speed,
		last_elevation,
		distance_3_session,
		minutes_3_session,
		elevation_3_session,
		average_3_distance,
		average_3_elevation,
		average_3_speed,
		variation_3_distance,
		variation_3_speed,
		variation_3_elevation,
		distance_10_session,
		minutes_10_session,
		elevation_10_session,
		average_10_distance,
		average_10_elevation,
		average_10_speed,
		variation_10_distance,
		variation_10_speed,
		variation_10_elevation,
		nb_displayed
	});

	$$self.$inject_state = $$props => {
		if ("data_raw" in $$props) $$invalidate(16, data_raw = $$props.data_raw);
		if ("list_meters" in $$props) list_meters = $$props.list_meters;
		if ("list_date" in $$props) list_date = $$props.list_date;
		if ("list_elevation" in $$props) list_elevation = $$props.list_elevation;
		if ("list_minutes" in $$props) list_minutes = $$props.list_minutes;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		data,
		last_distance,
		last_speed,
		last_elevation,
		average_3_distance,
		average_3_elevation,
		average_3_speed,
		variation_3_distance,
		variation_3_speed,
		variation_3_elevation,
		average_10_distance,
		average_10_elevation,
		average_10_speed,
		variation_10_distance,
		variation_10_speed,
		variation_10_elevation,
		data_raw
	];
}

class Cycling extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { data_raw: 16, data: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Cycling",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*data_raw*/ ctx[16] === undefined && !("data_raw" in props)) {
			console.warn("<Cycling> was created without expected prop 'data_raw'");
		}
	}

	get data_raw() {
		throw new Error("<Cycling>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set data_raw(value) {
		throw new Error("<Cycling>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get data() {
		return this.$$.ctx[0];
	}

	set data(value) {
		throw new Error("<Cycling>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Cycling;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

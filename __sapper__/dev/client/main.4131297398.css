main.svelte-nn54o{position:relative;max-width:72em;background-color:white;padding:0;margin:0 auto;box-sizing:border-box}
h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}
h1.svelte-1ee8kod{font-size:2.8em;text-transform:uppercase;font-weight:700;margin:0 0 0.5em 0}@media(min-width: 480px){h1.svelte-1ee8kod{font-size:4em}}
.box.svelte-1vpl77v{width:300px;border:1px solid #aaa;border-radius:2px;box-shadow:2px 2px 8px rgba(0,0,0,0.1);padding:1em;margin:0 0 1em 0}
ul.svelte-ieco35{margin:0;padding:0}ul.svelte-ieco35::after{content:'';display:block;clear:both}li.svelte-ieco35{display:block;float:left}[aria-current].svelte-ieco35{position:relative;display:inline-block}[aria-current].svelte-ieco35::after{position:absolute;content:'';width:calc(100% - 1em);height:2px;background-color:rgb(255,62,0);display:block;bottom:-1px}a.svelte-ieco35{text-decoration:none;padding:1em 0.5em;display:block}[aria-current].svelte-ieco35::after{position:absolute;content:'';width:calc(100% - 1em);height:2px;background-color:orange;display:block;bottom:-1px}
ul.svelte-1frg2tf{margin:0 0 1em 0;line-height:1.5}
.content.svelte-gnxal1 h2{font-size:1.4em;font-weight:500}.content.svelte-gnxal1 pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-gnxal1 pre code{background-color:transparent;padding:0}.content.svelte-gnxal1 ul{line-height:1.5}.content.svelte-gnxal1 li{margin:0 0 0.5em 0}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */